

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue May 25 16:31:01 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1829 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  020E                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0219                     	;# 
   172  021A                     	;# 
   173  021B                     	;# 
   174  021C                     	;# 
   175  021D                     	;# 
   176  021E                     	;# 
   177  021F                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029B                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  0311                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  0391                     	;# 
   206  0392                     	;# 
   207  0393                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0194                     	;# 
   307  0195                     	;# 
   308  0196                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  020E                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0219                     	;# 
   336  021A                     	;# 
   337  021B                     	;# 
   338  021C                     	;# 
   339  021D                     	;# 
   340  021E                     	;# 
   341  021F                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  038C                     	;# 
   367  038D                     	;# 
   368  038E                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  0393                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  039A                     	;# 
   376  039C                     	;# 
   377  039D                     	;# 
   378  039E                     	;# 
   379  039F                     	;# 
   380  0415                     	;# 
   381  0416                     	;# 
   382  0417                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011D                     	;# 
   460  011E                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  018E                     	;# 
   464  0191                     	;# 
   465  0191                     	;# 
   466  0192                     	;# 
   467  0193                     	;# 
   468  0193                     	;# 
   469  0193                     	;# 
   470  0194                     	;# 
   471  0195                     	;# 
   472  0196                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019D                     	;# 
   479  019E                     	;# 
   480  019F                     	;# 
   481  020C                     	;# 
   482  020D                     	;# 
   483  020E                     	;# 
   484  0211                     	;# 
   485  0211                     	;# 
   486  0212                     	;# 
   487  0212                     	;# 
   488  0213                     	;# 
   489  0213                     	;# 
   490  0214                     	;# 
   491  0214                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0215                     	;# 
   495  0216                     	;# 
   496  0216                     	;# 
   497  0217                     	;# 
   498  0217                     	;# 
   499  0219                     	;# 
   500  021A                     	;# 
   501  021B                     	;# 
   502  021C                     	;# 
   503  021D                     	;# 
   504  021E                     	;# 
   505  021F                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0298                     	;# 
   515  0298                     	;# 
   516  0299                     	;# 
   517  029A                     	;# 
   518  029B                     	;# 
   519  029C                     	;# 
   520  029D                     	;# 
   521  029E                     	;# 
   522  0311                     	;# 
   523  0311                     	;# 
   524  0312                     	;# 
   525  0313                     	;# 
   526  0318                     	;# 
   527  0318                     	;# 
   528  0319                     	;# 
   529  031A                     	;# 
   530  038C                     	;# 
   531  038D                     	;# 
   532  038E                     	;# 
   533  0391                     	;# 
   534  0392                     	;# 
   535  0393                     	;# 
   536  0394                     	;# 
   537  0395                     	;# 
   538  0396                     	;# 
   539  039A                     	;# 
   540  039C                     	;# 
   541  039D                     	;# 
   542  039E                     	;# 
   543  039F                     	;# 
   544  0415                     	;# 
   545  0416                     	;# 
   546  0417                     	;# 
   547  041C                     	;# 
   548  041D                     	;# 
   549  041E                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0016                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  001E                     	;# 
   590  001F                     	;# 
   591  008C                     	;# 
   592  008D                     	;# 
   593  008E                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  0111                     	;# 
   613  0112                     	;# 
   614  0113                     	;# 
   615  0114                     	;# 
   616  0115                     	;# 
   617  0116                     	;# 
   618  0117                     	;# 
   619  0118                     	;# 
   620  0119                     	;# 
   621  011A                     	;# 
   622  011B                     	;# 
   623  011D                     	;# 
   624  011E                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  018E                     	;# 
   628  0191                     	;# 
   629  0191                     	;# 
   630  0192                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0193                     	;# 
   634  0194                     	;# 
   635  0195                     	;# 
   636  0196                     	;# 
   637  0199                     	;# 
   638  019A                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019D                     	;# 
   643  019E                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  020D                     	;# 
   647  020E                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  0219                     	;# 
   664  021A                     	;# 
   665  021B                     	;# 
   666  021C                     	;# 
   667  021D                     	;# 
   668  021E                     	;# 
   669  021F                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029C                     	;# 
   684  029D                     	;# 
   685  029E                     	;# 
   686  0311                     	;# 
   687  0311                     	;# 
   688  0312                     	;# 
   689  0313                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  038C                     	;# 
   695  038D                     	;# 
   696  038E                     	;# 
   697  0391                     	;# 
   698  0392                     	;# 
   699  0393                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  039A                     	;# 
   704  039C                     	;# 
   705  039D                     	;# 
   706  039E                     	;# 
   707  039F                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  041C                     	;# 
   712  041D                     	;# 
   713  041E                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725                           
   726                           	psect	idataCOMMON
   727  05E6                     __pidataCOMMON:
   728                           
   729                           ;initializer for _NEWLINE
   730  05E6  34E7               	retlw	low (STR_1| (0+32768))
   731  05E7  3481               	retlw	high (STR_1| (0+32768))
   732                           
   733                           	psect	stringtext1
   734  0027                     __pstringtext1:
   735  0027                     _spbr_array:
   736  0027  3419               	retlw	25
   737  0028  3400               	retlw	0
   738  0029  3467               	retlw	103
   739  002A  3400               	retlw	0
   740  002B  3467               	retlw	103
   741  002C  3400               	retlw	0
   742  002D  34A0               	retlw	160
   743  002E  3401               	retlw	1
   744  002F  3400               	retlw	0
   745  0030  3400               	retlw	0
   746  0031  3419               	retlw	25
   747  0032  3400               	retlw	0
   748  0033  3419               	retlw	25
   749  0034  3400               	retlw	0
   750  0035  3467               	retlw	103
   751  0036  3400               	retlw	0
   752  0037  3400               	retlw	0
   753  0038  3400               	retlw	0
   754  0039  340C               	retlw	12
   755  003A  3400               	retlw	0
   756  003B  340C               	retlw	12
   757  003C  3400               	retlw	0
   758  003D  3433               	retlw	51
   759  003E  3400               	retlw	0
   760  003F  3400               	retlw	0
   761  0040  3400               	retlw	0
   762  0041  3400               	retlw	0
   763  0042  3400               	retlw	0
   764  0043  3400               	retlw	0
   765  0044  3400               	retlw	0
   766  0045  340C               	retlw	12
   767  0046  3400               	retlw	0
   768  0047  3400               	retlw	0
   769  0048  3400               	retlw	0
   770  0049  3402               	retlw	2
   771  004A  3400               	retlw	0
   772  004B  3402               	retlw	2
   773  004C  3400               	retlw	0
   774  004D  340B               	retlw	11
   775  004E  3400               	retlw	0
   776  004F  3400               	retlw	0
   777  0050  3400               	retlw	0
   778  0051  3400               	retlw	0
   779  0052  3400               	retlw	0
   780  0053  3400               	retlw	0
   781  0054  3400               	retlw	0
   782  0055  3400               	retlw	0
   783  0056  3400               	retlw	0
   784  0057  3400               	retlw	0
   785  0058  3400               	retlw	0
   786  0059  3400               	retlw	0
   787  005A  3400               	retlw	0
   788  005B  3400               	retlw	0
   789  005C  3400               	retlw	0
   790  005D  3400               	retlw	0
   791  005E  3400               	retlw	0
   792  005F  3400               	retlw	0
   793  0060  3400               	retlw	0
   794  0061  3400               	retlw	0
   795  0062  3400               	retlw	0
   796  0063  3400               	retlw	0
   797  0064  3400               	retlw	0
   798  0065  3400               	retlw	0
   799  0066  3400               	retlw	0
   800  0067  3433               	retlw	51
   801  0068  3400               	retlw	0
   802  0069  34CF               	retlw	207
   803  006A  3400               	retlw	0
   804  006B  34CF               	retlw	207
   805  006C  3400               	retlw	0
   806  006D  3440               	retlw	64
   807  006E  3403               	retlw	3
   808  006F  340C               	retlw	12
   809  0070  3400               	retlw	0
   810  0071  3433               	retlw	51
   811  0072  3400               	retlw	0
   812  0073  3433               	retlw	51
   813  0074  3400               	retlw	0
   814  0075  34CF               	retlw	207
   815  0076  3400               	retlw	0
   816  0077  3400               	retlw	0
   817  0078  3400               	retlw	0
   818  0079  3419               	retlw	25
   819  007A  3400               	retlw	0
   820  007B  3419               	retlw	25
   821  007C  3400               	retlw	0
   822  007D  3467               	retlw	103
   823  007E  3400               	retlw	0
   824  007F  3400               	retlw	0
   825  0080  3400               	retlw	0
   826  0081  3400               	retlw	0
   827  0082  3400               	retlw	0
   828  0083  3400               	retlw	0
   829  0084  3400               	retlw	0
   830  0085  3419               	retlw	25
   831  0086  3400               	retlw	0
   832  0087  3400               	retlw	0
   833  0088  3400               	retlw	0
   834  0089  3405               	retlw	5
   835  008A  3400               	retlw	0
   836  008B  3405               	retlw	5
   837  008C  3400               	retlw	0
   838  008D  3417               	retlw	23
   839  008E  3400               	retlw	0
   840  008F  3400               	retlw	0
   841  0090  3400               	retlw	0
   842  0091  3400               	retlw	0
   843  0092  3400               	retlw	0
   844  0093  3400               	retlw	0
   845  0094  3400               	retlw	0
   846  0095  340C               	retlw	12
   847  0096  3400               	retlw	0
   848  0097  3400               	retlw	0
   849  0098  3400               	retlw	0
   850  0099  3400               	retlw	0
   851  009A  3400               	retlw	0
   852  009B  3400               	retlw	0
   853  009C  3400               	retlw	0
   854  009D  3400               	retlw	0
   855  009E  3400               	retlw	0
   856  009F  3400               	retlw	0
   857  00A0  3400               	retlw	0
   858  00A1  3400               	retlw	0
   859  00A2  3400               	retlw	0
   860  00A3  3400               	retlw	0
   861  00A4  3400               	retlw	0
   862  00A5  3400               	retlw	0
   863  00A6  3400               	retlw	0
   864  00A7  3467               	retlw	103
   865  00A8  3400               	retlw	0
   866  00A9  3400               	retlw	0
   867  00AA  3400               	retlw	0
   868  00AB  34A0               	retlw	160
   869  00AC  3401               	retlw	1
   870  00AD  3482               	retlw	130
   871  00AE  3406               	retlw	6
   872  00AF  3419               	retlw	25
   873  00B0  3400               	retlw	0
   874  00B1  3467               	retlw	103
   875  00B2  3400               	retlw	0
   876  00B3  3467               	retlw	103
   877  00B4  3400               	retlw	0
   878  00B5  34A0               	retlw	160
   879  00B6  3401               	retlw	1
   880  00B7  340C               	retlw	12
   881  00B8  3400               	retlw	0
   882  00B9  3433               	retlw	51
   883  00BA  3400               	retlw	0
   884  00BB  3433               	retlw	51
   885  00BC  3400               	retlw	0
   886  00BD  34CF               	retlw	207
   887  00BE  3400               	retlw	0
   888  00BF  3400               	retlw	0
   889  00C0  3400               	retlw	0
   890  00C1  340C               	retlw	12
   891  00C2  3400               	retlw	0
   892  00C3  340C               	retlw	12
   893  00C4  3400               	retlw	0
   894  00C5  3433               	retlw	51
   895  00C6  3400               	retlw	0
   896  00C7  3402               	retlw	2
   897  00C8  3400               	retlw	0
   898  00C9  340B               	retlw	11
   899  00CA  3400               	retlw	0
   900  00CB  340B               	retlw	11
   901  00CC  3400               	retlw	0
   902  00CD  342F               	retlw	47
   903  00CE  3400               	retlw	0
   904  00CF  3400               	retlw	0
   905  00D0  3400               	retlw	0
   906  00D1  3400               	retlw	0
   907  00D2  3400               	retlw	0
   908  00D3  3400               	retlw	0
   909  00D4  3400               	retlw	0
   910  00D5  3419               	retlw	25
   911  00D6  3400               	retlw	0
   912  00D7  3400               	retlw	0
   913  00D8  3400               	retlw	0
   914  00D9  3400               	retlw	0
   915  00DA  3400               	retlw	0
   916  00DB  3400               	retlw	0
   917  00DC  3400               	retlw	0
   918  00DD  3400               	retlw	0
   919  00DE  3400               	retlw	0
   920  00DF  3400               	retlw	0
   921  00E0  3400               	retlw	0
   922  00E1  3400               	retlw	0
   923  00E2  3400               	retlw	0
   924  00E3  3400               	retlw	0
   925  00E4  3400               	retlw	0
   926  00E5  3400               	retlw	0
   927  00E6  3400               	retlw	0
   928  00E7  34CF               	retlw	207
   929  00E8  3400               	retlw	0
   930  00E9  3400               	retlw	0
   931  00EA  3400               	retlw	0
   932  00EB  3440               	retlw	64
   933  00EC  3403               	retlw	3
   934  00ED  3404               	retlw	4
   935  00EE  340D               	retlw	13
   936  00EF  3433               	retlw	51
   937  00F0  3400               	retlw	0
   938  00F1  34CF               	retlw	207
   939  00F2  3400               	retlw	0
   940  00F3  34CF               	retlw	207
   941  00F4  3400               	retlw	0
   942  00F5  3440               	retlw	64
   943  00F6  3403               	retlw	3
   944  00F7  3419               	retlw	25
   945  00F8  3400               	retlw	0
   946  00F9  3467               	retlw	103
   947  00FA  3400               	retlw	0
   948  00FB  3467               	retlw	103
   949  00FC  3400               	retlw	0
   950  00FD  34A0               	retlw	160
   951  00FE  3401               	retlw	1
   952  00FF  3400               	retlw	0
   953  0100  3400               	retlw	0
   954  0101  3419               	retlw	25
   955  0102  3400               	retlw	0
   956  0103  3419               	retlw	25
   957  0104  3400               	retlw	0
   958  0105  3467               	retlw	103
   959  0106  3400               	retlw	0
   960  0107  3405               	retlw	5
   961  0108  3400               	retlw	0
   962  0109  3417               	retlw	23
   963  010A  3400               	retlw	0
   964  010B  3417               	retlw	23
   965  010C  3400               	retlw	0
   966  010D  345F               	retlw	95
   967  010E  3400               	retlw	0
   968  010F  3400               	retlw	0
   969  0110  3400               	retlw	0
   970  0111  340C               	retlw	12
   971  0112  3400               	retlw	0
   972  0113  340C               	retlw	12
   973  0114  3400               	retlw	0
   974  0115  3433               	retlw	51
   975  0116  3400               	retlw	0
   976  0117  3400               	retlw	0
   977  0118  3400               	retlw	0
   978  0119  3400               	retlw	0
   979  011A  3400               	retlw	0
   980  011B  3400               	retlw	0
   981  011C  3400               	retlw	0
   982  011D  3400               	retlw	0
   983  011E  3400               	retlw	0
   984  011F  3400               	retlw	0
   985  0120  3400               	retlw	0
   986  0121  3400               	retlw	0
   987  0122  3400               	retlw	0
   988  0123  3400               	retlw	0
   989  0124  3400               	retlw	0
   990  0125  3400               	retlw	0
   991  0126  3400               	retlw	0
   992  0127  3400               	retlw	0
   993  0128  3400               	retlw	0
   994  0129  3400               	retlw	0
   995  012A  3400               	retlw	0
   996  012B  3482               	retlw	130
   997  012C  3406               	retlw	6
   998  012D  340A               	retlw	10
   999  012E  341A               	retlw	26
  1000  012F  3467               	retlw	103
  1001  0130  3400               	retlw	0
  1002  0131  3400               	retlw	0
  1003  0132  3400               	retlw	0
  1004  0133  34A0               	retlw	160
  1005  0134  3401               	retlw	1
  1006  0135  3482               	retlw	130
  1007  0136  3406               	retlw	6
  1008  0137  3433               	retlw	51
  1009  0138  3400               	retlw	0
  1010  0139  34CF               	retlw	207
  1011  013A  3400               	retlw	0
  1012  013B  34CF               	retlw	207
  1013  013C  3400               	retlw	0
  1014  013D  3440               	retlw	64
  1015  013E  3403               	retlw	3
  1016  013F  340C               	retlw	12
  1017  0140  3400               	retlw	0
  1018  0141  3433               	retlw	51
  1019  0142  3400               	retlw	0
  1020  0143  3433               	retlw	51
  1021  0144  3400               	retlw	0
  1022  0145  34CF               	retlw	207
  1023  0146  3400               	retlw	0
  1024  0147  340B               	retlw	11
  1025  0148  3400               	retlw	0
  1026  0149  342F               	retlw	47
  1027  014A  3400               	retlw	0
  1028  014B  342F               	retlw	47
  1029  014C  3400               	retlw	0
  1030  014D  34BF               	retlw	191
  1031  014E  3400               	retlw	0
  1032  014F  3400               	retlw	0
  1033  0150  3400               	retlw	0
  1034  0151  3419               	retlw	25
  1035  0152  3400               	retlw	0
  1036  0153  3419               	retlw	25
  1037  0154  3400               	retlw	0
  1038  0155  3467               	retlw	103
  1039  0156  3400               	retlw	0
  1040  0157  3400               	retlw	0
  1041  0158  3400               	retlw	0
  1042  0159  3400               	retlw	0
  1043  015A  3400               	retlw	0
  1044  015B  3400               	retlw	0
  1045  015C  3400               	retlw	0
  1046  015D  3422               	retlw	34
  1047  015E  3400               	retlw	0
  1048  015F  3400               	retlw	0
  1049  0160  3400               	retlw	0
  1050  0161  3400               	retlw	0
  1051  0162  3400               	retlw	0
  1052  0163  3400               	retlw	0
  1053  0164  3400               	retlw	0
  1054  0165  3400               	retlw	0
  1055  0166  3400               	retlw	0
  1056  0167  3400               	retlw	0
  1057  0168  3400               	retlw	0
  1058  0169  3400               	retlw	0
  1059  016A  3400               	retlw	0
  1060  016B  3404               	retlw	4
  1061  016C  340D               	retlw	13
  1062  016D  3414               	retlw	20
  1063  016E  3434               	retlw	52
  1064  016F  34CF               	retlw	207
  1065  0170  3400               	retlw	0
  1066  0171  3400               	retlw	0
  1067  0172  3400               	retlw	0
  1068  0173  3440               	retlw	64
  1069  0174  3403               	retlw	3
  1070  0175  3404               	retlw	4
  1071  0176  340D               	retlw	13
  1072  0177  3467               	retlw	103
  1073  0178  3400               	retlw	0
  1074  0179  3400               	retlw	0
  1075  017A  3400               	retlw	0
  1076  017B  34A0               	retlw	160
  1077  017C  3401               	retlw	1
  1078  017D  3482               	retlw	130
  1079  017E  3406               	retlw	6
  1080  017F  3419               	retlw	25
  1081  0180  3400               	retlw	0
  1082  0181  3467               	retlw	103
  1083  0182  3400               	retlw	0
  1084  0183  3467               	retlw	103
  1085  0184  3400               	retlw	0
  1086  0185  34A0               	retlw	160
  1087  0186  3401               	retlw	1
  1088  0187  3417               	retlw	23
  1089  0188  3400               	retlw	0
  1090  0189  345F               	retlw	95
  1091  018A  3400               	retlw	0
  1092  018B  345F               	retlw	95
  1093  018C  3400               	retlw	0
  1094  018D  347F               	retlw	127
  1095  018E  3401               	retlw	1
  1096  018F  340C               	retlw	12
  1097  0190  3400               	retlw	0
  1098  0191  3433               	retlw	51
  1099  0192  3400               	retlw	0
  1100  0193  3433               	retlw	51
  1101  0194  3400               	retlw	0
  1102  0195  34CF               	retlw	207
  1103  0196  3400               	retlw	0
  1104  0197  3400               	retlw	0
  1105  0198  3400               	retlw	0
  1106  0199  3400               	retlw	0
  1107  019A  3400               	retlw	0
  1108  019B  3400               	retlw	0
  1109  019C  3400               	retlw	0
  1110  019D  3444               	retlw	68
  1111  019E  3400               	retlw	0
  1112  019F  3400               	retlw	0
  1113  01A0  3400               	retlw	0
  1114  01A1  3400               	retlw	0
  1115  01A2  3400               	retlw	0
  1116  01A3  3400               	retlw	0
  1117  01A4  3400               	retlw	0
  1118  01A5  3422               	retlw	34
  1119  01A6  3400               	retlw	0
  1120  01A7  3400               	retlw	0
  1121  01A8  3400               	retlw	0
  1122  01A9  3400               	retlw	0
  1123  01AA  3400               	retlw	0
  1124  01AB  340A               	retlw	10
  1125  01AC  341A               	retlw	26
  1126  01AD  342A               	retlw	42
  1127  01AE  3468               	retlw	104
  1128  01AF  3400               	retlw	0
  1129  01B0  3400               	retlw	0
  1130  01B1  3400               	retlw	0
  1131  01B2  3400               	retlw	0
  1132  01B3  3482               	retlw	130
  1133  01B4  3406               	retlw	6
  1134  01B5  340A               	retlw	10
  1135  01B6  341A               	retlw	26
  1136  01B7  34CF               	retlw	207
  1137  01B8  3400               	retlw	0
  1138  01B9  3400               	retlw	0
  1139  01BA  3400               	retlw	0
  1140  01BB  3440               	retlw	64
  1141  01BC  3403               	retlw	3
  1142  01BD  3404               	retlw	4
  1143  01BE  340D               	retlw	13
  1144  01BF  3433               	retlw	51
  1145  01C0  3400               	retlw	0
  1146  01C1  34CF               	retlw	207
  1147  01C2  3400               	retlw	0
  1148  01C3  34CF               	retlw	207
  1149  01C4  3400               	retlw	0
  1150  01C5  3440               	retlw	64
  1151  01C6  3403               	retlw	3
  1152  01C7  342F               	retlw	47
  1153  01C8  3400               	retlw	0
  1154  01C9  34BF               	retlw	191
  1155  01CA  3400               	retlw	0
  1156  01CB  34BF               	retlw	191
  1157  01CC  3400               	retlw	0
  1158  01CD  34FF               	retlw	255
  1159  01CE  3402               	retlw	2
  1160  01CF  3419               	retlw	25
  1161  01D0  3400               	retlw	0
  1162  01D1  3467               	retlw	103
  1163  01D2  3400               	retlw	0
  1164  01D3  3467               	retlw	103
  1165  01D4  3400               	retlw	0
  1166  01D5  34A0               	retlw	160
  1167  01D6  3401               	retlw	1
  1168  01D7  3400               	retlw	0
  1169  01D8  3400               	retlw	0
  1170  01D9  3422               	retlw	34
  1171  01DA  3400               	retlw	0
  1172  01DB  3422               	retlw	34
  1173  01DC  3400               	retlw	0
  1174  01DD  348A               	retlw	138
  1175  01DE  3400               	retlw	0
  1176  01DF  3400               	retlw	0
  1177  01E0  3400               	retlw	0
  1178  01E1  3400               	retlw	0
  1179  01E2  3400               	retlw	0
  1180  01E3  3400               	retlw	0
  1181  01E4  3400               	retlw	0
  1182  01E5  3444               	retlw	68
  1183  01E6  3400               	retlw	0
  1184  01E7                     __end_of_spbr_array:
  1185  005E                     _PEIE	set	94
  1186  005F                     _GIE	set	95
  1187  008C                     _TXIF	set	140
  1188  008D                     _RCIF	set	141
  1189  0099                     _OSCCONbits	set	153
  1190  008E                     _TRISCbits	set	142
  1191  048D                     _RCIE	set	1165
  1192  048C                     _TXIE	set	1164
  1193  010E                     _LATCbits	set	270
  1194  019B                     _SPBRG	set	411
  1195  019A                     _TXREG	set	410
  1196  0199                     _RCREG	set	409
  1197  018D                     _ANSELBbits	set	397
  1198  019E                     _TXSTAbits	set	414
  1199  019D                     _RCSTAbits	set	413
  1200  0CEC                     _CREN	set	3308
  1201  0CE9                     _OERR	set	3305
  1202  0CEA                     _FERR	set	3306
  1203  0CFB                     _BRG16	set	3323
  1204  0CF2                     _BRGH	set	3314
  1205  01E7                     STR_1:
  1206  01E7  340D               	retlw	13
  1207  01E8  340A               	retlw	10
  1208  01E9  3400               	retlw	0
  1209                           
  1210                           	psect	stringtext2
  1211  0000                     __pstringtext2:
  1212                           
  1213                           	psect	cinit
  1214  0010                     start_initialization:	
  1215                           ; #config settings
  1216                           
  1217  0010                     __initialization:
  1218                           
  1219                           ; Initialize objects allocated to COMMON
  1220  0010  3185  25E6  3180   	fcall	__pidataCOMMON	;fetch initializer
  1221  0013  00F8               	movwf	__pdataCOMMON& (0+127)
  1222  0014  3185  25E7  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  1223  0017  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  1224                           
  1225                           ; Clear objects allocated to COMMON
  1226  0018  01F5               	clrf	__pbssCOMMON& (0+127)
  1227  0019  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  1228  001A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  1229                           
  1230                           ; Clear objects allocated to BANK0
  1231  001B  3020               	movlw	low __pbssBANK0
  1232  001C  0084               	movwf	4
  1233  001D  3000               	movlw	high __pbssBANK0
  1234  001E  0085               	movwf	5
  1235  001F  3024               	movlw	36
  1236  0020  3185  25E0  3180   	fcall	clear_ram0
  1237  0023                     end_of_initialization:	
  1238                           ;End of C runtime variable initialization code
  1239                           
  1240  0023                     __end_of__initialization:
  1241  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1242  0024  0020               	movlb	0
  1243  0025  3181  29EA         	ljmp	_main	;jump to C main() function
  1244                           
  1245                           	psect	bssCOMMON
  1246  0075                     __pbssCOMMON:
  1247  0075                     _uart_transmit_tail:
  1248  0075                     	ds	1
  1249  0076                     _uart_transmit_head:
  1250  0076                     	ds	1
  1251  0077                     _uart_recieve_head:
  1252  0077                     	ds	1
  1253                           
  1254                           	psect	dataCOMMON
  1255  0078                     __pdataCOMMON:
  1256  0078                     _NEWLINE:
  1257  0078                     	ds	2
  1258                           
  1259                           	psect	bssBANK0
  1260  0020                     __pbssBANK0:
  1261  0020                     _uart_transmit_buffer:
  1262  0020                     	ds	10
  1263  002A                     _uart_recieve_buffer:
  1264  002A                     	ds	10
  1265  0034                     _stepvar:
  1266  0034                     	ds	2
  1267  0036                     _step_number:
  1268  0036                     	ds	2
  1269  0038                     _number_of_steps:
  1270  0038                     	ds	2
  1271  003A                     _direction:
  1272  003A                     	ds	2
  1273  003C                     _comb7:
  1274  003C                     	ds	1
  1275  003D                     _comb6:
  1276  003D                     	ds	1
  1277  003E                     _comb5:
  1278  003E                     	ds	1
  1279  003F                     _comb4:
  1280  003F                     	ds	1
  1281  0040                     _comb3:
  1282  0040                     	ds	1
  1283  0041                     _comb2:
  1284  0041                     	ds	1
  1285  0042                     _comb1:
  1286  0042                     	ds	1
  1287  0043                     _uart_recieve_tail:
  1288  0043                     	ds	1
  1289                           
  1290                           	psect	clrtext
  1291  05E0                     clear_ram0:	
  1292                           ;	Called with FSR0 containing the base address, and
  1293                           ;	WREG with the size to clear
  1294                           
  1295  05E0  0064               	clrwdt	;clear the watchdog before getting into this loop
  1296  05E1                     clrloop0:
  1297  05E1  0180               	clrf	0	;clear RAM location pointed to by FSR
  1298  05E2  3101               	addfsr 0,1
  1299  05E3  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1300  05E4  2DE1               	goto	clrloop0	;have we reached the end yet?
  1301  05E5  3400               	retlw	0	;all done for this memory range, return
  1302                           
  1303                           	psect	cstackCOMMON
  1304  0070                     __pcstackCOMMON:
  1305  0070                     ?_uart_turnoff:
  1306  0070                     ?_uart_transmitter_setup:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_uart_reciever_setup:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_uart_flush_buffer:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_setup:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_empty_comb:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_uart_handle_rcv_int:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ??_uart_handle_rcv_int:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_uart_handle_tx_int:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ??_uart_handle_tx_int:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_uart_read_char:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_ISR:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_main:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342                           
  1343                           ; 1 bytes @ 0x0
  1344  0070                     	ds	3
  1345  0073                     _uart_handle_rcv_int$256:
  1346  0073                     _uart_handle_tx_int$258:	
  1347                           ; 2 bytes @ 0x3
  1348                           
  1349                           
  1350                           ; 2 bytes @ 0x3
  1351  0073                     	ds	2
  1352  0075                     ??_ISR:
  1353                           
  1354                           	psect	cstackBANK0
  1355  0044                     __pcstackBANK0:	
  1356                           ; 1 bytes @ 0x5
  1357                           
  1358  0044                     ?_stepMotor:
  1359  0044                     ?_uart_clock_setup:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0044                     ??_uart_transmitter_setup:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0044                     ??_uart_reciever_setup:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0044                     ??_uart_flush_buffer:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0044                     ??_empty_comb:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0044                     ?_Stepper:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0044                     ??_uart_read_char:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0044                     ?_abs:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0044                     ?___wmul:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386  0044                     uart_clock_setup@c:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0044                     Stepper@num_of_steps:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0044                     stepMotor@thisStep:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0044                     uart_flush_buffer@i:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398  0044                     ___wmul@multiplier:	
  1399                           ; 2 bytes @ 0x0
  1400                           
  1401  0044                     abs@a:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404                           
  1405                           ; 2 bytes @ 0x0
  1406  0044                     	ds	1
  1407  0045                     ??_uart_clock_setup:
  1408                           
  1409                           ; 1 bytes @ 0x1
  1410  0045                     	ds	1
  1411  0046                     ??_abs:
  1412  0046                     ??_stepMotor:	
  1413                           ; 1 bytes @ 0x2
  1414                           
  1415  0046                     ??_uart_turnoff:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418  0046                     ??_Stepper:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0046                     ___wmul@multiplicand:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x2
  1426  0046                     	ds	1
  1427  0047                     uart_read_char@uart_char:
  1428                           
  1429                           ; 1 bytes @ 0x3
  1430  0047                     	ds	1
  1431  0048                     ?_step:
  1432  0048                     ??___wmul:	
  1433                           ; 1 bytes @ 0x4
  1434                           
  1435  0048                     step@steps_to_move:	
  1436                           ; 1 bytes @ 0x4
  1437                           
  1438  0048                     _uart_read_char$261:	
  1439                           ; 2 bytes @ 0x4
  1440                           
  1441  0048                     ___wmul@product:	
  1442                           ; 2 bytes @ 0x4
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x4
  1446  0048                     	ds	2
  1447  004A                     ??_step:
  1448                           
  1449                           ; 1 bytes @ 0x6
  1450  004A                     	ds	1
  1451  004B                     step@steps_left:
  1452                           
  1453                           ; 2 bytes @ 0x7
  1454  004B                     	ds	8
  1455  0053                     uart_clock_setup@b:
  1456                           
  1457                           ; 1 bytes @ 0xF
  1458  0053                     	ds	1
  1459  0054                     uart_clock_setup@i:
  1460                           
  1461                           ; 2 bytes @ 0x10
  1462  0054                     	ds	2
  1463  0056                     ?_uart_init:
  1464  0056                     uart_init@c:	
  1465                           ; 1 bytes @ 0x12
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x12
  1469  0056                     	ds	1
  1470  0057                     ??_uart_init:
  1471                           
  1472                           ; 1 bytes @ 0x13
  1473  0057                     	ds	1
  1474  0058                     uart_init@b:
  1475                           
  1476                           ; 1 bytes @ 0x14
  1477  0058                     	ds	1
  1478  0059                     ??_setup:
  1479  0059                     ??_main:	
  1480                           ; 1 bytes @ 0x15
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x15
  1484  0059                     	ds	6
  1485  005F                     main@uart_char:
  1486                           
  1487                           ; 1 bytes @ 0x1B
  1488  005F                     	ds	1
  1489                           
  1490                           	psect	maintext
  1491  01EA                     __pmaintext:	
  1492 ;;
  1493 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1494 ;;
  1495 ;; *************** function _main *****************
  1496 ;; Defined at:
  1497 ;;		line 33 in file "LA.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  uart_char       1   27[BANK0 ] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : B1F/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;Total ram usage:        7 bytes
  1516 ;; Hardware stack levels required when called: 6
  1517 ;; This function calls:
  1518 ;;		_Stepper
  1519 ;;		___wmul
  1520 ;;		_empty_comb
  1521 ;;		_setup
  1522 ;;		_step
  1523 ;;		_uart_read_char
  1524 ;; This function is called by:
  1525 ;;		Startup code after reset
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _main
  1531  01EA                     _main:
  1532  01EA                     l1853:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1535                           
  1536                           
  1537                           ;LA.c: 35:     setup();
  1538  01EA  3185  259C  3181   	fcall	_setup
  1539  01ED                     l1855:
  1540                           
  1541                           ;LA.c: 37:     Stepper(2052);
  1542  01ED  3004               	movlw	4
  1543  01EE  0020               	movlb	0	; select bank0
  1544  01EF  00C4               	movwf	Stepper@num_of_steps
  1545  01F0  3008               	movlw	8
  1546  01F1  00C5               	movwf	Stepper@num_of_steps+1
  1547  01F2  3185  25B1  3181   	fcall	_Stepper
  1548  01F5                     l1857:
  1549                           
  1550                           ;LA.c: 38:     setup();
  1551  01F5  3185  259C  3181   	fcall	_setup
  1552  01F8                     l1859:
  1553                           
  1554                           ;LA.c: 39:     empty_comb();
  1555  01F8  3185  25C0  3181   	fcall	_empty_comb
  1556  01FB                     l1861:
  1557                           
  1558                           ;LA.c: 41:         char uart_char = uart_read_char();
  1559  01FB  3184  24BB  3181   	fcall	_uart_read_char
  1560  01FE  0020               	movlb	0	; select bank0
  1561  01FF  00D9               	movwf	??_main
  1562  0200  0859               	movf	??_main,w
  1563  0201  00DF               	movwf	main@uart_char
  1564  0202                     l1863:
  1565                           
  1566                           ;LA.c: 42:         if (uart_char) {
  1567  0202  085F               	movf	main@uart_char,w
  1568  0203  1903               	btfsc	3,2
  1569  0204  2A06               	goto	u1471
  1570  0205  2A07               	goto	u1470
  1571  0206                     u1471:
  1572  0206  2A4D               	goto	l1893
  1573  0207                     u1470:
  1574  0207                     l1865:
  1575                           
  1576                           ;LA.c: 43:             if (comb1 == 0x00) {
  1577  0207  0842               	movf	_comb1,w
  1578  0208  1D03               	btfss	3,2
  1579  0209  2A0B               	goto	u1481
  1580  020A  2A0C               	goto	u1480
  1581  020B                     u1481:
  1582  020B  2A11               	goto	l1869
  1583  020C                     u1480:
  1584  020C                     l1867:
  1585                           
  1586                           ;LA.c: 44:                 comb1 = uart_char;
  1587  020C  085F               	movf	main@uart_char,w
  1588  020D  00D9               	movwf	??_main
  1589  020E  0859               	movf	??_main,w
  1590  020F  00C2               	movwf	_comb1
  1591                           
  1592                           ;LA.c: 45:             } else if (comb2 == 0x00) {
  1593  0210  2A4D               	goto	l1893
  1594  0211                     l1869:
  1595  0211  0841               	movf	_comb2,w
  1596  0212  1D03               	btfss	3,2
  1597  0213  2A15               	goto	u1491
  1598  0214  2A16               	goto	u1490
  1599  0215                     u1491:
  1600  0215  2A1B               	goto	l1873
  1601  0216                     u1490:
  1602  0216                     l1871:
  1603                           
  1604                           ;LA.c: 46:                 comb2 = uart_char;
  1605  0216  085F               	movf	main@uart_char,w
  1606  0217  00D9               	movwf	??_main
  1607  0218  0859               	movf	??_main,w
  1608  0219  00C1               	movwf	_comb2
  1609                           
  1610                           ;LA.c: 47:             } else if (comb3 == 0x00) {
  1611  021A  2A4D               	goto	l1893
  1612  021B                     l1873:
  1613  021B  0840               	movf	_comb3,w
  1614  021C  1D03               	btfss	3,2
  1615  021D  2A1F               	goto	u1501
  1616  021E  2A20               	goto	u1500
  1617  021F                     u1501:
  1618  021F  2A25               	goto	l1877
  1619  0220                     u1500:
  1620  0220                     l1875:
  1621                           
  1622                           ;LA.c: 48:                 comb3 = uart_char;
  1623  0220  085F               	movf	main@uart_char,w
  1624  0221  00D9               	movwf	??_main
  1625  0222  0859               	movf	??_main,w
  1626  0223  00C0               	movwf	_comb3
  1627                           
  1628                           ;LA.c: 49:             } else if (comb4 == 0x00) {
  1629  0224  2A4D               	goto	l1893
  1630  0225                     l1877:
  1631  0225  083F               	movf	_comb4,w
  1632  0226  1D03               	btfss	3,2
  1633  0227  2A29               	goto	u1511
  1634  0228  2A2A               	goto	u1510
  1635  0229                     u1511:
  1636  0229  2A2F               	goto	l1881
  1637  022A                     u1510:
  1638  022A                     l1879:
  1639                           
  1640                           ;LA.c: 50:                 comb4 = uart_char;
  1641  022A  085F               	movf	main@uart_char,w
  1642  022B  00D9               	movwf	??_main
  1643  022C  0859               	movf	??_main,w
  1644  022D  00BF               	movwf	_comb4
  1645                           
  1646                           ;LA.c: 51:             } else if (comb5 == 0x00) {
  1647  022E  2A4D               	goto	l1893
  1648  022F                     l1881:
  1649  022F  083E               	movf	_comb5,w
  1650  0230  1D03               	btfss	3,2
  1651  0231  2A33               	goto	u1521
  1652  0232  2A34               	goto	u1520
  1653  0233                     u1521:
  1654  0233  2A39               	goto	l1885
  1655  0234                     u1520:
  1656  0234                     l1883:
  1657                           
  1658                           ;LA.c: 52:                 comb5 = uart_char;
  1659  0234  085F               	movf	main@uart_char,w
  1660  0235  00D9               	movwf	??_main
  1661  0236  0859               	movf	??_main,w
  1662  0237  00BE               	movwf	_comb5
  1663                           
  1664                           ;LA.c: 53:             } else if (comb6 == 0x00) {
  1665  0238  2A4D               	goto	l1893
  1666  0239                     l1885:
  1667  0239  083D               	movf	_comb6,w
  1668  023A  1D03               	btfss	3,2
  1669  023B  2A3D               	goto	u1531
  1670  023C  2A3E               	goto	u1530
  1671  023D                     u1531:
  1672  023D  2A43               	goto	l1889
  1673  023E                     u1530:
  1674  023E                     l1887:
  1675                           
  1676                           ;LA.c: 54:                 comb6 = uart_char;
  1677  023E  085F               	movf	main@uart_char,w
  1678  023F  00D9               	movwf	??_main
  1679  0240  0859               	movf	??_main,w
  1680  0241  00BD               	movwf	_comb6
  1681                           
  1682                           ;LA.c: 55:             } else if (comb7 == 0x00) {
  1683  0242  2A4D               	goto	l1893
  1684  0243                     l1889:
  1685  0243  083C               	movf	_comb7,w
  1686  0244  1D03               	btfss	3,2
  1687  0245  2A47               	goto	u1541
  1688  0246  2A48               	goto	u1540
  1689  0247                     u1541:
  1690  0247  2A4D               	goto	l252
  1691  0248                     u1540:
  1692  0248                     l1891:
  1693                           
  1694                           ;LA.c: 56:                 comb7 = uart_char;
  1695  0248  085F               	movf	main@uart_char,w
  1696  0249  00D9               	movwf	??_main
  1697  024A  0859               	movf	??_main,w
  1698  024B  00BC               	movwf	_comb7
  1699  024C  2A4D               	goto	l1893
  1700  024D                     l252:
  1701  024D                     l1893:
  1702                           
  1703                           ;LA.c: 61:         if (comb1 == 0x6C && comb2 == 0x61 && comb6 == 0x6C && comb7 == 0x61)
      +                           {
  1704  024D  306C               	movlw	108
  1705  024E  0642               	xorwf	_comb1,w
  1706  024F  1D03               	btfss	3,2
  1707  0250  2A52               	goto	u1551
  1708  0251  2A53               	goto	u1550
  1709  0252                     u1551:
  1710  0252  2AA8               	goto	l1911
  1711  0253                     u1550:
  1712  0253                     l1895:
  1713  0253  3061               	movlw	97
  1714  0254  0641               	xorwf	_comb2,w
  1715  0255  1D03               	btfss	3,2
  1716  0256  2A58               	goto	u1561
  1717  0257  2A59               	goto	u1560
  1718  0258                     u1561:
  1719  0258  2AA8               	goto	l1911
  1720  0259                     u1560:
  1721  0259                     l1897:
  1722  0259  306C               	movlw	108
  1723  025A  063D               	xorwf	_comb6,w
  1724  025B  1D03               	btfss	3,2
  1725  025C  2A5E               	goto	u1571
  1726  025D  2A5F               	goto	u1570
  1727  025E                     u1571:
  1728  025E  2AA8               	goto	l1911
  1729  025F                     u1570:
  1730  025F                     l1899:
  1731  025F  3061               	movlw	97
  1732  0260  063C               	xorwf	_comb7,w
  1733  0261  1D03               	btfss	3,2
  1734  0262  2A64               	goto	u1581
  1735  0263  2A65               	goto	u1580
  1736  0264                     u1581:
  1737  0264  2AA8               	goto	l1911
  1738  0265                     u1580:
  1739  0265                     l1901:
  1740                           
  1741                           ;LA.c: 62:                         if (comb5 == 0x76) {
  1742  0265  3076               	movlw	118
  1743  0266  063E               	xorwf	_comb5,w
  1744  0267  1D03               	btfss	3,2
  1745  0268  2A6A               	goto	u1591
  1746  0269  2A6B               	goto	u1590
  1747  026A                     u1591:
  1748  026A  2A89               	goto	l1905
  1749  026B                     u1590:
  1750  026B                     l1903:
  1751                           
  1752                           ;LA.c: 63:                 stepvar = comb3 * comb4 * -1;
  1753  026B  0840               	movf	_comb3,w
  1754  026C  00D9               	movwf	??_main
  1755  026D  01DA               	clrf	??_main+1
  1756  026E  0859               	movf	??_main,w
  1757  026F  00C4               	movwf	___wmul@multiplier
  1758  0270  085A               	movf	??_main+1,w
  1759  0271  00C5               	movwf	___wmul@multiplier+1
  1760  0272  083F               	movf	_comb4,w
  1761  0273  00DB               	movwf	??_main+2
  1762  0274  01DC               	clrf	??_main+3
  1763  0275  085B               	movf	??_main+2,w
  1764  0276  00C6               	movwf	___wmul@multiplicand
  1765  0277  085C               	movf	??_main+3,w
  1766  0278  00C7               	movwf	___wmul@multiplicand+1
  1767  0279  3185  2541  3181   	fcall	___wmul
  1768  027C  0020               	movlb	0	; select bank0
  1769  027D  0944               	comf	?___wmul,w
  1770  027E  00DD               	movwf	??_main+4
  1771  027F  0945               	comf	?___wmul+1,w
  1772  0280  00DE               	movwf	??_main+5
  1773  0281  0ADD               	incf	??_main+4,f
  1774  0282  1903               	skipnz
  1775  0283  0ADE               	incf	??_main+5,f
  1776  0284  085D               	movf	??_main+4,w
  1777  0285  00B4               	movwf	_stepvar
  1778  0286  085E               	movf	??_main+5,w
  1779  0287  00B5               	movwf	_stepvar+1
  1780                           
  1781                           ;LA.c: 64:             } else if (comb5 == 0x61) {
  1782  0288  2AA5               	goto	l1909
  1783  0289                     l1905:
  1784  0289  3061               	movlw	97
  1785  028A  063E               	xorwf	_comb5,w
  1786  028B  1D03               	btfss	3,2
  1787  028C  2A8E               	goto	u1601
  1788  028D  2A8F               	goto	u1600
  1789  028E                     u1601:
  1790  028E  2AA5               	goto	l1909
  1791  028F                     u1600:
  1792  028F                     l1907:
  1793                           
  1794                           ;LA.c: 65:                 stepvar = comb3 * comb4;
  1795  028F  0840               	movf	_comb3,w
  1796  0290  00D9               	movwf	??_main
  1797  0291  01DA               	clrf	??_main+1
  1798  0292  0859               	movf	??_main,w
  1799  0293  00C4               	movwf	___wmul@multiplier
  1800  0294  085A               	movf	??_main+1,w
  1801  0295  00C5               	movwf	___wmul@multiplier+1
  1802  0296  083F               	movf	_comb4,w
  1803  0297  00DB               	movwf	??_main+2
  1804  0298  01DC               	clrf	??_main+3
  1805  0299  085B               	movf	??_main+2,w
  1806  029A  00C6               	movwf	___wmul@multiplicand
  1807  029B  085C               	movf	??_main+3,w
  1808  029C  00C7               	movwf	___wmul@multiplicand+1
  1809  029D  3185  2541  3181   	fcall	___wmul
  1810  02A0  0020               	movlb	0	; select bank0
  1811  02A1  0845               	movf	?___wmul+1,w
  1812  02A2  00B5               	movwf	_stepvar+1
  1813  02A3  0844               	movf	?___wmul,w
  1814  02A4  00B4               	movwf	_stepvar
  1815  02A5                     l1909:
  1816                           
  1817                           ;LA.c: 68:             empty_comb();
  1818  02A5  3185  25C0  3181   	fcall	_empty_comb
  1819  02A8                     l1911:
  1820                           
  1821                           ;LA.c: 71:         if (comb1 == 0x73 && comb2 == 0x73 && comb3 == 0x73 && comb4 == 0x73 
      +                          && comb5 == 0x73 && comb6 == 0x73 && comb7 == 0x73) {
  1822  02A8  3073               	movlw	115
  1823  02A9  0020               	movlb	0	; select bank0
  1824  02AA  0642               	xorwf	_comb1,w
  1825  02AB  1D03               	btfss	3,2
  1826  02AC  2AAE               	goto	u1611
  1827  02AD  2AAF               	goto	u1610
  1828  02AE                     u1611:
  1829  02AE  2ADD               	goto	l1929
  1830  02AF                     u1610:
  1831  02AF                     l1913:
  1832  02AF  3073               	movlw	115
  1833  02B0  0641               	xorwf	_comb2,w
  1834  02B1  1D03               	btfss	3,2
  1835  02B2  2AB4               	goto	u1621
  1836  02B3  2AB5               	goto	u1620
  1837  02B4                     u1621:
  1838  02B4  2ADD               	goto	l1929
  1839  02B5                     u1620:
  1840  02B5                     l1915:
  1841  02B5  3073               	movlw	115
  1842  02B6  0640               	xorwf	_comb3,w
  1843  02B7  1D03               	btfss	3,2
  1844  02B8  2ABA               	goto	u1631
  1845  02B9  2ABB               	goto	u1630
  1846  02BA                     u1631:
  1847  02BA  2ADD               	goto	l1929
  1848  02BB                     u1630:
  1849  02BB                     l1917:
  1850  02BB  3073               	movlw	115
  1851  02BC  063F               	xorwf	_comb4,w
  1852  02BD  1D03               	btfss	3,2
  1853  02BE  2AC0               	goto	u1641
  1854  02BF  2AC1               	goto	u1640
  1855  02C0                     u1641:
  1856  02C0  2ADD               	goto	l1929
  1857  02C1                     u1640:
  1858  02C1                     l1919:
  1859  02C1  3073               	movlw	115
  1860  02C2  063E               	xorwf	_comb5,w
  1861  02C3  1D03               	btfss	3,2
  1862  02C4  2AC6               	goto	u1651
  1863  02C5  2AC7               	goto	u1650
  1864  02C6                     u1651:
  1865  02C6  2ADD               	goto	l1929
  1866  02C7                     u1650:
  1867  02C7                     l1921:
  1868  02C7  3073               	movlw	115
  1869  02C8  063D               	xorwf	_comb6,w
  1870  02C9  1D03               	btfss	3,2
  1871  02CA  2ACC               	goto	u1661
  1872  02CB  2ACD               	goto	u1660
  1873  02CC                     u1661:
  1874  02CC  2ADD               	goto	l1929
  1875  02CD                     u1660:
  1876  02CD                     l1923:
  1877  02CD  3073               	movlw	115
  1878  02CE  063C               	xorwf	_comb7,w
  1879  02CF  1D03               	btfss	3,2
  1880  02D0  2AD2               	goto	u1671
  1881  02D1  2AD3               	goto	u1670
  1882  02D2                     u1671:
  1883  02D2  2ADD               	goto	l1929
  1884  02D3                     u1670:
  1885  02D3                     l1925:
  1886                           
  1887                           ;LA.c: 72:             step(stepvar);
  1888  02D3  0835               	movf	_stepvar+1,w
  1889  02D4  00C9               	movwf	step@steps_to_move+1
  1890  02D5  0834               	movf	_stepvar,w
  1891  02D6  00C8               	movwf	step@steps_to_move
  1892  02D7  3183  23D2  3181   	fcall	_step
  1893  02DA                     l1927:
  1894                           
  1895                           ;LA.c: 73:             empty_comb();
  1896  02DA  3185  25C0  3181   	fcall	_empty_comb
  1897  02DD                     l1929:
  1898                           
  1899                           ;LA.c: 76:         if (comb7 != 0x00) {
  1900  02DD  0020               	movlb	0	; select bank0
  1901  02DE  083C               	movf	_comb7,w
  1902  02DF  1903               	btfsc	3,2
  1903  02E0  2AE2               	goto	u1681
  1904  02E1  2AE3               	goto	u1680
  1905  02E2                     u1681:
  1906  02E2  2AE6               	goto	l1933
  1907  02E3                     u1680:
  1908  02E3                     l1931:
  1909                           
  1910                           ;LA.c: 77:             empty_comb();
  1911  02E3  3185  25C0  3181   	fcall	_empty_comb
  1912  02E6                     l1933:
  1913                           
  1914                           ;LA.c: 80:         if (comb1 != 0x6C && comb1 != 0x73 && comb1 != 0x00) {
  1915  02E6  306C               	movlw	108
  1916  02E7  0020               	movlb	0	; select bank0
  1917  02E8  0642               	xorwf	_comb1,w
  1918  02E9  1903               	btfsc	3,2
  1919  02EA  2AEC               	goto	u1691
  1920  02EB  2AED               	goto	u1690
  1921  02EC                     u1691:
  1922  02EC  2AF9               	goto	l1941
  1923  02ED                     u1690:
  1924  02ED                     l1935:
  1925  02ED  3073               	movlw	115
  1926  02EE  0642               	xorwf	_comb1,w
  1927  02EF  1903               	btfsc	3,2
  1928  02F0  2AF2               	goto	u1701
  1929  02F1  2AF3               	goto	u1700
  1930  02F2                     u1701:
  1931  02F2  2AF9               	goto	l1941
  1932  02F3                     u1700:
  1933  02F3                     l1937:
  1934  02F3  0842               	movf	_comb1,w
  1935  02F4  1903               	btfsc	3,2
  1936  02F5  2AF7               	goto	u1711
  1937  02F6  2AF8               	goto	u1710
  1938  02F7                     u1711:
  1939  02F7  2AF9               	goto	l1941
  1940  02F8                     u1710:
  1941  02F8  29F8               	goto	l1859
  1942  02F9                     l1941:
  1943  02F9  3061               	movlw	97
  1944  02FA  0641               	xorwf	_comb2,w
  1945  02FB  1903               	btfsc	3,2
  1946  02FC  2AFE               	goto	u1721
  1947  02FD  2AFF               	goto	u1720
  1948  02FE                     u1721:
  1949  02FE  29FB               	goto	l1861
  1950  02FF                     u1720:
  1951  02FF                     l1943:
  1952  02FF  3073               	movlw	115
  1953  0300  0641               	xorwf	_comb2,w
  1954  0301  1903               	btfsc	3,2
  1955  0302  2B04               	goto	u1731
  1956  0303  2B05               	goto	u1730
  1957  0304                     u1731:
  1958  0304  29FB               	goto	l1861
  1959  0305                     u1730:
  1960  0305                     l1945:
  1961  0305  0841               	movf	_comb2,w
  1962  0306  1903               	btfsc	3,2
  1963  0307  2B09               	goto	u1741
  1964  0308  2B0A               	goto	u1740
  1965  0309                     u1741:
  1966  0309  29FB               	goto	l1861
  1967  030A                     u1740:
  1968  030A  29F8               	goto	l1859
  1969  030B  3180  280E         	ljmp	start
  1970  030D                     __end_of_main:
  1971                           
  1972                           	psect	text1
  1973  04BB                     __ptext1:	
  1974 ;; *************** function _uart_read_char *****************
  1975 ;; Defined at:
  1976 ;;		line 234 in file "uartlib.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  uart_char       1    3[BANK0 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      unsigned char 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1994 ;;Total ram usage:        6 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 2
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _uart_read_char
  2006  04BB                     _uart_read_char:
  2007  04BB                     l1803:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _uart_read_char: [wreg+fsr1l+fsr1h+status,2+status,0]
  2010                           
  2011                           
  2012                           ;uartlib.c: 235:     if ((uart_recieve_head == uart_recieve_tail)) {
  2013  04BB  0877               	movf	_uart_recieve_head,w	;volatile
  2014  04BC  0020               	movlb	0	; select bank0
  2015  04BD  0643               	xorwf	_uart_recieve_tail,w	;volatile
  2016  04BE  1D03               	skipz
  2017  04BF  2CC1               	goto	u1411
  2018  04C0  2CC2               	goto	u1410
  2019  04C1                     u1411:
  2020  04C1  2CC4               	goto	l1809
  2021  04C2                     u1410:
  2022  04C2                     l1805:
  2023                           
  2024                           ;uartlib.c: 236:         return '\0';
  2025  04C2  3000               	movlw	0
  2026  04C3  2CF1               	goto	l170
  2027  04C4                     l1809:
  2028                           
  2029                           ;uartlib.c: 239:     char uart_char = uart_recieve_buffer[uart_recieve_tail];
  2030  04C4  0843               	movf	_uart_recieve_tail,w
  2031  04C5  3E2A               	addlw	(low (_uart_recieve_buffer| 0))& (0+255)
  2032  04C6  0086               	movwf	6
  2033  04C7  0187               	clrf	7
  2034  04C8  0801               	movf	1,w
  2035  04C9  00C4               	movwf	??_uart_read_char
  2036  04CA  0844               	movf	??_uart_read_char,w
  2037  04CB  00C7               	movwf	uart_read_char@uart_char
  2038  04CC                     l1811:
  2039                           
  2040                           ;uartlib.c: 240:     uart_recieve_tail = (uart_recieve_tail+1 >= (10)) ? (0) : (uart_rec
      +                          ieve_tail+1);
  2041  04CC  0843               	movf	_uart_recieve_tail,w	;volatile
  2042  04CD  3E01               	addlw	1
  2043  04CE  00C4               	movwf	??_uart_read_char
  2044  04CF  3000               	movlw	0
  2045  04D0  1803               	skipnc
  2046  04D1  3001               	movlw	1
  2047  04D2  00C5               	movwf	??_uart_read_char+1
  2048  04D3  0845               	movf	??_uart_read_char+1,w
  2049  04D4  3A80               	xorlw	128
  2050  04D5  00C6               	movwf	??_uart_read_char+2
  2051  04D6  3080               	movlw	128
  2052  04D7  0246               	subwf	??_uart_read_char+2,w
  2053  04D8  1D03               	skipz
  2054  04D9  2CDC               	goto	u1425
  2055  04DA  300A               	movlw	10
  2056  04DB  0244               	subwf	??_uart_read_char,w
  2057  04DC                     u1425:
  2058  04DC  1803               	skipnc
  2059  04DD  2CDF               	goto	u1421
  2060  04DE  2CE0               	goto	u1420
  2061  04DF                     u1421:
  2062  04DF  2CE9               	goto	l1815
  2063  04E0                     u1420:
  2064  04E0                     l1813:
  2065  04E0  0020               	movlb	0	; select bank0
  2066  04E1  0843               	movf	_uart_recieve_tail,w	;volatile
  2067  04E2  3E01               	addlw	1
  2068  04E3  00C8               	movwf	_uart_read_char$261
  2069  04E4  3000               	movlw	0
  2070  04E5  1803               	skipnc
  2071  04E6  3001               	movlw	1
  2072  04E7  00C9               	movwf	_uart_read_char$261+1
  2073  04E8  2CEC               	goto	l1817
  2074  04E9                     l1815:
  2075  04E9  0020               	movlb	0	; select bank0
  2076  04EA  01C8               	clrf	_uart_read_char$261
  2077  04EB  01C9               	clrf	_uart_read_char$261+1
  2078  04EC                     l1817:
  2079  04EC  0848               	movf	_uart_read_char$261,w
  2080  04ED  00C4               	movwf	??_uart_read_char
  2081  04EE  0844               	movf	??_uart_read_char,w
  2082  04EF  00C3               	movwf	_uart_recieve_tail	;volatile
  2083  04F0                     l1819:
  2084                           
  2085                           ;uartlib.c: 242:     return uart_char;
  2086  04F0  0847               	movf	uart_read_char@uart_char,w
  2087  04F1                     l170:
  2088  04F1  0008               	return
  2089  04F2                     __end_of_uart_read_char:
  2090                           
  2091                           	psect	text2
  2092  03D2                     __ptext2:	
  2093 ;; *************** function _step *****************
  2094 ;; Defined at:
  2095 ;;		line 25 in file "stepperlib.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  steps_to_mov    2    4[BANK0 ] int 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  steps_left      2    7[BANK0 ] int 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;Total ram usage:        5 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 3
  2116 ;; This function calls:
  2117 ;;		_abs
  2118 ;;		_stepMotor
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _step
  2126  03D2                     _step:
  2127  03D2                     l1775:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _step: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2130                           
  2131                           
  2132                           ;stepperlib.c: 26:     LATCbits.LATC6 = 1;
  2133  03D2  0022               	movlb	2	; select bank2
  2134  03D3  170E               	bsf	14,6	;volatile
  2135  03D4                     l1777:
  2136                           
  2137                           ;stepperlib.c: 31:     int steps_left = abs(steps_to_move);
  2138  03D4  0020               	movlb	0	; select bank0
  2139  03D5  0849               	movf	step@steps_to_move+1,w
  2140  03D6  00C5               	movwf	abs@a+1
  2141  03D7  0848               	movf	step@steps_to_move,w
  2142  03D8  00C4               	movwf	abs@a
  2143  03D9  3185  2580  3183   	fcall	_abs
  2144  03DC  0020               	movlb	0	; select bank0
  2145  03DD  0845               	movf	?_abs+1,w
  2146  03DE  00CC               	movwf	step@steps_left+1
  2147  03DF  0844               	movf	?_abs,w
  2148  03E0  00CB               	movwf	step@steps_left
  2149  03E1                     l1779:
  2150                           
  2151                           ;stepperlib.c: 34:     if (steps_to_move > 0) {
  2152  03E1  0849               	movf	step@steps_to_move+1,w
  2153  03E2  3A80               	xorlw	128
  2154  03E3  00CA               	movwf	??_step
  2155  03E4  3080               	movlw	128
  2156  03E5  024A               	subwf	??_step,w
  2157  03E6  1D03               	skipz
  2158  03E7  2BEA               	goto	u1355
  2159  03E8  3001               	movlw	1
  2160  03E9  0248               	subwf	step@steps_to_move,w
  2161  03EA                     u1355:
  2162  03EA  1C03               	skipc
  2163  03EB  2BED               	goto	u1351
  2164  03EC  2BEE               	goto	u1350
  2165  03ED                     u1351:
  2166  03ED  2BF3               	goto	l1783
  2167  03EE                     u1350:
  2168  03EE                     l1781:
  2169                           
  2170                           ;stepperlib.c: 35:         direction = 1;
  2171  03EE  3001               	movlw	1
  2172  03EF  0020               	movlb	0	; select bank0
  2173  03F0  00BA               	movwf	_direction
  2174  03F1  3000               	movlw	0
  2175  03F2  00BB               	movwf	_direction+1
  2176  03F3                     l1783:
  2177                           
  2178                           ;stepperlib.c: 37:     if (steps_to_move < 0) {
  2179  03F3  0020               	movlb	0	; select bank0
  2180  03F4  1FC9               	btfss	step@steps_to_move+1,7
  2181  03F5  2BF7               	goto	u1361
  2182  03F6  2BF8               	goto	u1360
  2183  03F7                     u1361:
  2184  03F7  2C32               	goto	l1801
  2185  03F8                     u1360:
  2186  03F8                     l1785:
  2187                           
  2188                           ;stepperlib.c: 38:         direction = 0;
  2189  03F8  01BA               	clrf	_direction
  2190  03F9  01BB               	clrf	_direction+1
  2191  03FA  2C32               	goto	l1801
  2192  03FB                     l1787:
  2193                           
  2194                           ;stepperlib.c: 44:         _delay((unsigned long)((2)*(1000000/4000.0)));
  2195  03FB  30A6               	movlw	166
  2196  03FC                     u1757:
  2197  03FC  0B89               	decfsz	9,f
  2198  03FD  2BFC               	goto	u1757
  2199  03FE  3200               	nop2
  2200  03FF                     l1789:
  2201                           
  2202                           ;stepperlib.c: 47:         if (direction == 1) {
  2203  03FF  0020               	movlb	0	; select bank0
  2204  0400  033A               	decf	_direction,w
  2205  0401  043B               	iorwf	_direction+1,w
  2206  0402  1D03               	btfss	3,2
  2207  0403  2C05               	goto	u1371
  2208  0404  2C06               	goto	u1370
  2209  0405                     u1371:
  2210  0405  2C17               	goto	l1795
  2211  0406                     u1370:
  2212  0406                     l1791:
  2213                           
  2214                           ;stepperlib.c: 48:             step_number++;
  2215  0406  3001               	movlw	1
  2216  0407  07B6               	addwf	_step_number,f
  2217  0408  3000               	movlw	0
  2218  0409  3DB7               	addwfc	_step_number+1,f
  2219                           
  2220                           ;stepperlib.c: 49:             if (step_number == number_of_steps) {
  2221  040A  0839               	movf	_number_of_steps+1,w
  2222  040B  0637               	xorwf	_step_number+1,w
  2223  040C  1D03               	skipz
  2224  040D  2C10               	goto	u1385
  2225  040E  0838               	movf	_number_of_steps,w
  2226  040F  0636               	xorwf	_step_number,w
  2227  0410                     u1385:
  2228  0410  1D03               	skipz
  2229  0411  2C13               	goto	u1381
  2230  0412  2C14               	goto	u1380
  2231  0413                     u1381:
  2232  0413  2C25               	goto	l28
  2233  0414                     u1380:
  2234  0414                     l1793:
  2235                           
  2236                           ;stepperlib.c: 50:                 step_number = 0;
  2237  0414  01B6               	clrf	_step_number
  2238  0415  01B7               	clrf	_step_number+1
  2239  0416  2C25               	goto	l28
  2240  0417                     l1795:
  2241                           
  2242                           ;stepperlib.c: 53:             if (step_number == 0) {
  2243  0417  0836               	movf	_step_number,w
  2244  0418  0437               	iorwf	_step_number+1,w
  2245  0419  1D03               	btfss	3,2
  2246  041A  2C1C               	goto	u1391
  2247  041B  2C1D               	goto	u1390
  2248  041C                     u1391:
  2249  041C  2C21               	goto	l29
  2250  041D                     u1390:
  2251  041D                     l1797:
  2252                           
  2253                           ;stepperlib.c: 54:                 step_number = number_of_steps;
  2254  041D  0839               	movf	_number_of_steps+1,w
  2255  041E  00B7               	movwf	_step_number+1
  2256  041F  0838               	movf	_number_of_steps,w
  2257  0420  00B6               	movwf	_step_number
  2258  0421                     l29:	
  2259                           ;stepperlib.c: 55:             }
  2260                           
  2261                           
  2262                           ;stepperlib.c: 56:             step_number--;
  2263  0421  30FF               	movlw	255
  2264  0422  07B6               	addwf	_step_number,f
  2265  0423  30FF               	movlw	255
  2266  0424  3DB7               	addwfc	_step_number+1,f
  2267  0425                     l28:	
  2268                           ;stepperlib.c: 57:         }
  2269                           
  2270                           
  2271                           ;stepperlib.c: 59:         steps_left--;
  2272  0425  30FF               	movlw	255
  2273  0426  07CB               	addwf	step@steps_left,f
  2274  0427  30FF               	movlw	255
  2275  0428  3DCC               	addwfc	step@steps_left+1,f
  2276  0429                     l1799:
  2277                           
  2278                           ;stepperlib.c: 61:         stepMotor(step_number % 4);
  2279  0429  3003               	movlw	3
  2280  042A  0536               	andwf	_step_number,w
  2281  042B  00C4               	movwf	stepMotor@thisStep
  2282  042C  3000               	movlw	0
  2283  042D  0537               	andwf	_step_number+1,w
  2284  042E  00C5               	movwf	stepMotor@thisStep+1
  2285  042F  3184  24F2  3183   	fcall	_stepMotor
  2286  0432                     l1801:
  2287                           
  2288                           ;stepperlib.c: 43:     while (steps_left > 0) {
  2289  0432  0020               	movlb	0	; select bank0
  2290  0433  084C               	movf	step@steps_left+1,w
  2291  0434  3A80               	xorlw	128
  2292  0435  00CA               	movwf	??_step
  2293  0436  3080               	movlw	128
  2294  0437  024A               	subwf	??_step,w
  2295  0438  1D03               	skipz
  2296  0439  2C3C               	goto	u1405
  2297  043A  3001               	movlw	1
  2298  043B  024B               	subwf	step@steps_left,w
  2299  043C                     u1405:
  2300  043C  1803               	skipnc
  2301  043D  2C3F               	goto	u1401
  2302  043E  2C40               	goto	u1400
  2303  043F                     u1401:
  2304  043F  2BFB               	goto	l1787
  2305  0440                     u1400:
  2306  0440                     l30:
  2307                           
  2308                           ;stepperlib.c: 64:     LATCbits.LATC6 = 0;
  2309  0440  0022               	movlb	2	; select bank2
  2310  0441  130E               	bcf	14,6	;volatile
  2311  0442                     l31:
  2312  0442  0008               	return
  2313  0443                     __end_of_step:
  2314                           
  2315                           	psect	text3
  2316  04F2                     __ptext3:	
  2317 ;; *************** function _stepMotor *****************
  2318 ;; Defined at:
  2319 ;;		line 70 in file "stepperlib.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  thisStep        2    0[BANK0 ] int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;		None
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  1    wreg      void 
  2326 ;; Registers used:
  2327 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2333 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2337 ;;Total ram usage:        2 bytes
  2338 ;; Hardware stack levels used: 1
  2339 ;; Hardware stack levels required when called: 2
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_step
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           
  2348                           ;psect for function _stepMotor
  2349  04F2                     _stepMotor:
  2350  04F2                     l1737:	
  2351                           ;incstack = 0
  2352                           ; Regs used in _stepMotor: [wreg-fsr0h+status,2+status,0]
  2353                           
  2354                           
  2355                           ;stepperlib.c: 71:     switch (thisStep) {
  2356  04F2  2D0B               	goto	l1741
  2357  04F3                     l35:	
  2358                           ;stepperlib.c: 72:         case 0:
  2359                           
  2360                           
  2361                           ;stepperlib.c: 73:             LATCbits.LATC0 = 1;
  2362  04F3  0022               	movlb	2	; select bank2
  2363  04F4  140E               	bsf	14,0	;volatile
  2364                           
  2365                           ;stepperlib.c: 74:             LATCbits.LATC1 = 0;
  2366  04F5  108E               	bcf	14,1	;volatile
  2367                           
  2368                           ;stepperlib.c: 75:             LATCbits.LATC2 = 1;
  2369  04F6  150E               	bsf	14,2	;volatile
  2370                           
  2371                           ;stepperlib.c: 76:             LATCbits.LATC3 = 0;
  2372  04F7  118E               	bcf	14,3	;volatile
  2373                           
  2374                           ;stepperlib.c: 77:             break;
  2375  04F8  2D1F               	goto	l40
  2376  04F9                     l37:	
  2377                           ;stepperlib.c: 78:         case 1:
  2378                           
  2379                           
  2380                           ;stepperlib.c: 79:             LATCbits.LATC0 = 0;
  2381  04F9  0022               	movlb	2	; select bank2
  2382  04FA  100E               	bcf	14,0	;volatile
  2383                           
  2384                           ;stepperlib.c: 80:             LATCbits.LATC1 = 1;
  2385  04FB  148E               	bsf	14,1	;volatile
  2386                           
  2387                           ;stepperlib.c: 81:             LATCbits.LATC2 = 1;
  2388  04FC  150E               	bsf	14,2	;volatile
  2389                           
  2390                           ;stepperlib.c: 82:             LATCbits.LATC3 = 0;
  2391  04FD  118E               	bcf	14,3	;volatile
  2392                           
  2393                           ;stepperlib.c: 83:             break;
  2394  04FE  2D1F               	goto	l40
  2395  04FF                     l38:	
  2396                           ;stepperlib.c: 84:         case 2:
  2397                           
  2398                           
  2399                           ;stepperlib.c: 85:             LATCbits.LATC0 = 0;
  2400  04FF  0022               	movlb	2	; select bank2
  2401  0500  100E               	bcf	14,0	;volatile
  2402                           
  2403                           ;stepperlib.c: 86:             LATCbits.LATC1 = 1;
  2404  0501  148E               	bsf	14,1	;volatile
  2405                           
  2406                           ;stepperlib.c: 87:             LATCbits.LATC2 = 0;
  2407  0502  110E               	bcf	14,2	;volatile
  2408                           
  2409                           ;stepperlib.c: 88:             LATCbits.LATC3 = 1;
  2410  0503  158E               	bsf	14,3	;volatile
  2411                           
  2412                           ;stepperlib.c: 89:             break;
  2413  0504  2D1F               	goto	l40
  2414  0505                     l39:	
  2415                           ;stepperlib.c: 90:         case 3:
  2416                           
  2417                           
  2418                           ;stepperlib.c: 91:             LATCbits.LATC0 = 1;
  2419  0505  0022               	movlb	2	; select bank2
  2420  0506  140E               	bsf	14,0	;volatile
  2421                           
  2422                           ;stepperlib.c: 92:             LATCbits.LATC1 = 0;
  2423  0507  108E               	bcf	14,1	;volatile
  2424                           
  2425                           ;stepperlib.c: 93:             LATCbits.LATC2 = 0;
  2426  0508  110E               	bcf	14,2	;volatile
  2427                           
  2428                           ;stepperlib.c: 94:             LATCbits.LATC3 = 1;
  2429  0509  158E               	bsf	14,3	;volatile
  2430                           
  2431                           ;stepperlib.c: 95:             break;
  2432  050A  2D1F               	goto	l40
  2433  050B                     l1741:
  2434                           
  2435                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2436                           ; Switch size 1, requested type "simple"
  2437                           ; Number of cases is 1, Range of values is 0 to 0
  2438                           ; switch strategies available:
  2439                           ; Name         Instructions Cycles
  2440                           ; simple_byte            4     3 (average)
  2441                           ; direct_byte            8     6 (fixed)
  2442                           ; jumptable            260     6 (fixed)
  2443                           ;	Chosen strategy is simple_byte
  2444  050B  0020               	movlb	0	; select bank0
  2445  050C  0845               	movf	stepMotor@thisStep+1,w
  2446  050D  3A00               	xorlw	0	; case 0
  2447  050E  1903               	skipnz
  2448  050F  2D11               	goto	l1999
  2449  0510  2D1F               	goto	l40
  2450  0511                     l1999:
  2451                           
  2452                           ; Switch size 1, requested type "simple"
  2453                           ; Number of cases is 4, Range of values is 0 to 3
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte           13     7 (average)
  2457                           ; direct_byte           14     6 (fixed)
  2458                           ; jumptable            260     6 (fixed)
  2459                           ;	Chosen strategy is simple_byte
  2460  0511  0844               	movf	stepMotor@thisStep,w
  2461  0512  3A00               	xorlw	0	; case 0
  2462  0513  1903               	skipnz
  2463  0514  2CF3               	goto	l35
  2464  0515  3A01               	xorlw	1	; case 1
  2465  0516  1903               	skipnz
  2466  0517  2CF9               	goto	l37
  2467  0518  3A03               	xorlw	3	; case 2
  2468  0519  1903               	skipnz
  2469  051A  2CFF               	goto	l38
  2470  051B  3A01               	xorlw	1	; case 3
  2471  051C  1903               	skipnz
  2472  051D  2D05               	goto	l39
  2473  051E  2D1F               	goto	l40
  2474  051F                     l40:
  2475  051F  0008               	return
  2476  0520                     __end_of_stepMotor:
  2477                           
  2478                           	psect	text4
  2479  0580                     __ptext4:	
  2480 ;; *************** function _abs *****************
  2481 ;; Defined at:
  2482 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  a               2    0[BANK0 ] int 
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  2    0[BANK0 ] int 
  2489 ;; Registers used:
  2490 ;;		wreg, status,2, status,0
  2491 ;; Tracked objects:
  2492 ;;		On entry : 0/0
  2493 ;;		On exit  : 0/0
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2498 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2499 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2500 ;;Total ram usage:        4 bytes
  2501 ;; Hardware stack levels used: 1
  2502 ;; Hardware stack levels required when called: 2
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_step
  2507 ;; This function uses a non-reentrant model
  2508 ;;
  2509                           
  2510                           
  2511                           ;psect for function _abs
  2512  0580                     _abs:
  2513  0580                     l1733:	
  2514                           ;incstack = 0
  2515                           ; Regs used in _abs: [wreg+status,2+status,0]
  2516                           
  2517  0580  0020               	movlb	0	; select bank0
  2518  0581  0845               	movf	abs@a+1,w
  2519  0582  3A80               	xorlw	128
  2520  0583  00C6               	movwf	??_abs
  2521  0584  3080               	movlw	128
  2522  0585  0246               	subwf	??_abs,w
  2523  0586  1D03               	skipz
  2524  0587  2D8A               	goto	u1335
  2525  0588  3001               	movlw	1
  2526  0589  0244               	subwf	abs@a,w
  2527  058A                     u1335:
  2528  058A  1803               	skipnc
  2529  058B  2D8D               	goto	u1331
  2530  058C  2D8E               	goto	u1330
  2531  058D                     u1331:
  2532  058D  2D9B               	goto	l886
  2533  058E                     u1330:
  2534  058E                     l1735:
  2535  058E  0020               	movlb	0	; select bank0
  2536  058F  0944               	comf	abs@a,w
  2537  0590  00C6               	movwf	??_abs
  2538  0591  0945               	comf	abs@a+1,w
  2539  0592  00C7               	movwf	??_abs+1
  2540  0593  0AC6               	incf	??_abs,f
  2541  0594  1903               	skipnz
  2542  0595  0AC7               	incf	??_abs+1,f
  2543  0596  0846               	movf	??_abs,w
  2544  0597  00C4               	movwf	?_abs
  2545  0598  0847               	movf	??_abs+1,w
  2546  0599  00C5               	movwf	?_abs+1
  2547  059A  2D9B               	goto	l889
  2548  059B                     l886:
  2549  059B                     l889:
  2550  059B  0008               	return
  2551  059C                     __end_of_abs:
  2552                           
  2553                           	psect	text5
  2554  059C                     __ptext5:	
  2555 ;; *************** function _setup *****************
  2556 ;; Defined at:
  2557 ;;		line 100 in file "LA.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used: 1
  2577 ;; Hardware stack levels required when called: 5
  2578 ;; This function calls:
  2579 ;;		_uart_init
  2580 ;; This function is called by:
  2581 ;;		_main
  2582 ;; This function uses a non-reentrant model
  2583 ;;
  2584                           
  2585                           
  2586                           ;psect for function _setup
  2587  059C                     _setup:
  2588  059C                     l1823:	
  2589                           ;incstack = 0
  2590                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2591                           
  2592                           
  2593                           ;LA.c: 101:     OSCCONbits.IRCF = 0b1011;
  2594  059C  0021               	movlb	1	; select bank1
  2595  059D  0819               	movf	25,w	;volatile
  2596  059E  3987               	andlw	-121
  2597  059F  3858               	iorlw	88
  2598  05A0  0099               	movwf	25	;volatile
  2599                           
  2600                           ;LA.c: 102:     OSCCONbits.SCS = 0b00;
  2601  05A1  30FC               	movlw	-4
  2602  05A2  0599               	andwf	25,f	;volatile
  2603  05A3                     l1825:
  2604                           
  2605                           ;LA.c: 103:     OSCCONbits.SPLLEN = 0;
  2606  05A3  1399               	bcf	25,7	;volatile
  2607  05A4                     l1827:
  2608                           
  2609                           ;LA.c: 104:     TRISCbits.TRISC6 = 0;
  2610  05A4  130E               	bcf	14,6	;volatile
  2611  05A5                     l1829:
  2612                           
  2613                           ;LA.c: 106:     LATCbits.LATC6 = 0;
  2614  05A5  0022               	movlb	2	; select bank2
  2615  05A6  130E               	bcf	14,6	;volatile
  2616  05A7                     l1831:
  2617                           
  2618                           ;LA.c: 108:     GIE = 1;
  2619  05A7  178B               	bsf	11,7	;volatile
  2620  05A8                     l1833:
  2621                           
  2622                           ;LA.c: 109:     PEIE = 1;
  2623  05A8  170B               	bsf	11,6	;volatile
  2624  05A9                     l1835:
  2625                           
  2626                           ;LA.c: 111:     if (!uart_init(3, 1)) {
  2627  05A9  0020               	movlb	0	; select bank0
  2628  05AA  01D6               	clrf	uart_init@c
  2629  05AB  0AD6               	incf	uart_init@c,f
  2630  05AC  3003               	movlw	3
  2631  05AD  3185  2561  3185   	fcall	_uart_init
  2632  05B0                     l276:
  2633  05B0  0008               	return
  2634  05B1                     __end_of_setup:
  2635                           
  2636                           	psect	text6
  2637  0561                     __ptext6:	
  2638 ;; *************** function _uart_init *****************
  2639 ;; Defined at:
  2640 ;;		line 93 in file "uartlib.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;  b               1    wreg     unsigned char 
  2643 ;;  c               1   18[BANK0 ] unsigned char 
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;  b               1   20[BANK0 ] unsigned char 
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      enum E2
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2655 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2656 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2657 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2658 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2659 ;;Total ram usage:        3 bytes
  2660 ;; Hardware stack levels used: 1
  2661 ;; Hardware stack levels required when called: 4
  2662 ;; This function calls:
  2663 ;;		_uart_clock_setup
  2664 ;;		_uart_reciever_setup
  2665 ;;		_uart_transmitter_setup
  2666 ;;		_uart_turnoff
  2667 ;; This function is called by:
  2668 ;;		_setup
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672                           
  2673                           ;psect for function _uart_init
  2674  0561                     _uart_init:
  2675                           
  2676                           ;incstack = 0
  2677                           ; Regs used in _uart_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2678                           ;uart_init@b stored from wreg
  2679  0561  0020               	movlb	0	; select bank0
  2680  0562  00D8               	movwf	uart_init@b
  2681  0563                     l1747:
  2682                           
  2683                           ;uartlib.c: 94:     uart_turnoff();
  2684  0563  3185  25C9  3185   	fcall	_uart_turnoff
  2685  0566                     l1749:
  2686                           
  2687                           ;uartlib.c: 96:     if (!uart_clock_setup(b, c))
  2688  0566  0020               	movlb	0	; select bank0
  2689  0567  0856               	movf	uart_init@c,w
  2690  0568  00D7               	movwf	??_uart_init
  2691  0569  0857               	movf	??_uart_init,w
  2692  056A  00C4               	movwf	uart_clock_setup@c
  2693  056B  0858               	movf	uart_init@b,w
  2694  056C  3183  230D  3185   	fcall	_uart_clock_setup
  2695  056F  3A00               	xorlw	0
  2696  0570  1D03               	skipz
  2697  0571  2D73               	goto	u1341
  2698  0572  2D74               	goto	u1340
  2699  0573                     u1341:
  2700  0573  2D76               	goto	l1755
  2701  0574                     u1340:
  2702  0574                     l1751:
  2703                           
  2704                           ;uartlib.c: 97:         return false;
  2705  0574  3000               	movlw	0
  2706  0575  2D7F               	goto	l98
  2707  0576                     l1755:
  2708                           
  2709                           ;uartlib.c: 99:     uart_transmitter_setup();
  2710  0576  3185  25D9  3185   	fcall	_uart_transmitter_setup
  2711                           
  2712                           ;uartlib.c: 100:     uart_reciever_setup();
  2713  0579  3185  25D1  3185   	fcall	_uart_reciever_setup
  2714  057C                     l1757:
  2715                           
  2716                           ;uartlib.c: 102:     RCSTAbits.SPEN = 1;
  2717  057C  0023               	movlb	3	; select bank3
  2718  057D  179D               	bsf	29,7	;volatile
  2719  057E                     l1759:
  2720                           
  2721                           ;uartlib.c: 104:     return true;
  2722  057E  3001               	movlw	1
  2723  057F                     l98:
  2724  057F  0008               	return
  2725  0580                     __end_of_uart_init:
  2726                           
  2727                           	psect	text7
  2728  05C9                     __ptext7:	
  2729 ;; *************** function _uart_turnoff *****************
  2730 ;; Defined at:
  2731 ;;		line 107 in file "uartlib.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2748 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 3
  2752 ;; This function calls:
  2753 ;;		_uart_flush_buffer
  2754 ;; This function is called by:
  2755 ;;		_uart_init
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           
  2760                           ;psect for function _uart_turnoff
  2761  05C9                     _uart_turnoff:
  2762  05C9                     l1679:	
  2763                           ;incstack = 0
  2764                           ; Regs used in _uart_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2765                           
  2766                           
  2767                           ;uartlib.c: 108:     RCSTAbits.SPEN = 0;
  2768  05C9  0023               	movlb	3	; select bank3
  2769  05CA  139D               	bcf	29,7	;volatile
  2770                           
  2771                           ;uartlib.c: 109:     RCSTAbits.CREN = 0;
  2772  05CB  121D               	bcf	29,4	;volatile
  2773                           
  2774                           ;uartlib.c: 110:     TXSTAbits.TXEN = 0;
  2775  05CC  129E               	bcf	30,5	;volatile
  2776  05CD                     l1681:
  2777                           
  2778                           ;uartlib.c: 112:     uart_flush_buffer();
  2779  05CD  3185  2520  3185   	fcall	_uart_flush_buffer
  2780  05D0                     l101:
  2781  05D0  0008               	return
  2782  05D1                     __end_of_uart_turnoff:
  2783                           
  2784                           	psect	text8
  2785  0520                     __ptext8:	
  2786 ;; *************** function _uart_flush_buffer *****************
  2787 ;; Defined at:
  2788 ;;		line 255 in file "uartlib.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  i               2    0[BANK0 ] int 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2803 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2805 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2806 ;;Total ram usage:        2 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 2
  2809 ;; This function calls:
  2810 ;;		Nothing
  2811 ;; This function is called by:
  2812 ;;		_uart_turnoff
  2813 ;; This function uses a non-reentrant model
  2814 ;;
  2815                           
  2816                           
  2817                           ;psect for function _uart_flush_buffer
  2818  0520                     _uart_flush_buffer:
  2819  0520                     l1671:	
  2820                           ;incstack = 0
  2821                           ; Regs used in _uart_flush_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2822                           
  2823                           
  2824                           ;uartlib.c: 256:     int i = (10);
  2825  0520  300A               	movlw	10
  2826  0521  0020               	movlb	0	; select bank0
  2827  0522  00C4               	movwf	uart_flush_buffer@i
  2828  0523  3000               	movlw	0
  2829  0524  00C5               	movwf	uart_flush_buffer@i+1
  2830                           
  2831                           ;uartlib.c: 257:     while (i--) {
  2832  0525  2D30               	goto	l1675
  2833  0526                     l1673:
  2834                           
  2835                           ;uartlib.c: 258:         uart_recieve_buffer[i] = 0;
  2836  0526  0844               	movf	uart_flush_buffer@i,w
  2837  0527  3E2A               	addlw	(low (_uart_recieve_buffer| 0))& (0+255)
  2838  0528  0086               	movwf	6
  2839  0529  0187               	clrf	7
  2840  052A  0181               	clrf	1
  2841                           
  2842                           ;uartlib.c: 259:         uart_transmit_buffer[i] = 0;
  2843  052B  0844               	movf	uart_flush_buffer@i,w
  2844  052C  3E20               	addlw	(low (_uart_transmit_buffer| 0))& (0+255)
  2845  052D  0086               	movwf	6
  2846  052E  0187               	clrf	7
  2847  052F  0181               	clrf	1
  2848  0530                     l1675:
  2849                           
  2850                           ;uartlib.c: 257:     while (i--) {
  2851  0530  30FF               	movlw	255
  2852  0531  07C4               	addwf	uart_flush_buffer@i,f
  2853  0532  30FF               	movlw	255
  2854  0533  3DC5               	addwfc	uart_flush_buffer@i+1,f
  2855  0534  0A44               	incf	uart_flush_buffer@i,w
  2856  0535  1D03               	skipz
  2857  0536  2D3B               	goto	u1251
  2858  0537  0A45               	incf	uart_flush_buffer@i+1,w
  2859  0538  1D03               	btfss	3,2
  2860  0539  2D3B               	goto	u1251
  2861  053A  2D3C               	goto	u1250
  2862  053B                     u1251:
  2863  053B  2D26               	goto	l1673
  2864  053C                     u1250:
  2865  053C                     l1677:
  2866                           
  2867                           ;uartlib.c: 262:     uart_recieve_head = 0;
  2868  053C  01F7               	clrf	_uart_recieve_head	;volatile
  2869                           
  2870                           ;uartlib.c: 263:     uart_recieve_tail = 0;
  2871  053D  01C3               	clrf	_uart_recieve_tail	;volatile
  2872                           
  2873                           ;uartlib.c: 265:     uart_transmit_head = 0;
  2874  053E  01F6               	clrf	_uart_transmit_head	;volatile
  2875                           
  2876                           ;uartlib.c: 266:     uart_transmit_tail = 0;
  2877  053F  01F5               	clrf	_uart_transmit_tail	;volatile
  2878  0540                     l185:
  2879  0540  0008               	return
  2880  0541                     __end_of_uart_flush_buffer:
  2881                           
  2882                           	psect	text9
  2883  05D9                     __ptext9:	
  2884 ;; *************** function _uart_transmitter_setup *****************
  2885 ;; Defined at:
  2886 ;;		line 115 in file "uartlib.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;		None
  2891 ;; Return value:  Size  Location     Type
  2892 ;;                  1    wreg      void 
  2893 ;; Registers used:
  2894 ;;		None
  2895 ;; Tracked objects:
  2896 ;;		On entry : 0/0
  2897 ;;		On exit  : 0/0
  2898 ;;		Unchanged: 0/0
  2899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2904 ;;Total ram usage:        0 bytes
  2905 ;; Hardware stack levels used: 1
  2906 ;; Hardware stack levels required when called: 2
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		_uart_init
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function _uart_transmitter_setup
  2916  05D9                     _uart_transmitter_setup:
  2917  05D9                     l1729:	
  2918                           ;incstack = 0
  2919                           ; Regs used in _uart_transmitter_setup: []
  2920                           
  2921                           
  2922                           ;uartlib.c: 116:     TXSTAbits.TX9 = 0;
  2923  05D9  0023               	movlb	3	; select bank3
  2924  05DA  131E               	bcf	30,6	;volatile
  2925                           
  2926                           ;uartlib.c: 117:     TXIE = 1;
  2927  05DB  0021               	movlb	1	; select bank1
  2928  05DC  1611               	bsf	17,4	;volatile
  2929                           
  2930                           ;uartlib.c: 118:     TXSTAbits.TXEN = 1;
  2931  05DD  0023               	movlb	3	; select bank3
  2932  05DE  169E               	bsf	30,5	;volatile
  2933  05DF                     l104:
  2934  05DF  0008               	return
  2935  05E0                     __end_of_uart_transmitter_setup:
  2936                           
  2937                           	psect	text10
  2938  05D1                     __ptext10:	
  2939 ;; *************** function _uart_reciever_setup *****************
  2940 ;; Defined at:
  2941 ;;		line 121 in file "uartlib.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;		None
  2944 ;; Auto vars:     Size  Location     Type
  2945 ;;		None
  2946 ;; Return value:  Size  Location     Type
  2947 ;;                  1    wreg      void 
  2948 ;; Registers used:
  2949 ;;		None
  2950 ;; Tracked objects:
  2951 ;;		On entry : 0/0
  2952 ;;		On exit  : 0/0
  2953 ;;		Unchanged: 0/0
  2954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2959 ;;Total ram usage:        0 bytes
  2960 ;; Hardware stack levels used: 1
  2961 ;; Hardware stack levels required when called: 2
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_uart_init
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           
  2970                           ;psect for function _uart_reciever_setup
  2971  05D1                     _uart_reciever_setup:
  2972  05D1                     l1731:	
  2973                           ;incstack = 0
  2974                           ; Regs used in _uart_reciever_setup: []
  2975                           
  2976                           
  2977                           ;uartlib.c: 122:     RCSTAbits.RX9 = 0;
  2978  05D1  0023               	movlb	3	; select bank3
  2979  05D2  131D               	bcf	29,6	;volatile
  2980                           
  2981                           ;uartlib.c: 124:     ANSELBbits.ANSB5 = 0;
  2982  05D3  128D               	bcf	13,5	;volatile
  2983                           
  2984                           ;uartlib.c: 126:     RCIE = 1;
  2985  05D4  0021               	movlb	1	; select bank1
  2986  05D5  1691               	bsf	17,5	;volatile
  2987                           
  2988                           ;uartlib.c: 128:     RCSTAbits.CREN = 1;
  2989  05D6  0023               	movlb	3	; select bank3
  2990  05D7  161D               	bsf	29,4	;volatile
  2991  05D8                     l107:
  2992  05D8  0008               	return
  2993  05D9                     __end_of_uart_reciever_setup:
  2994                           
  2995                           	psect	text11
  2996  030D                     __ptext11:	
  2997 ;; *************** function _uart_clock_setup *****************
  2998 ;; Defined at:
  2999 ;;		line 131 in file "uartlib.c"
  3000 ;; Parameters:    Size  Location     Type
  3001 ;;  b               1    wreg     unsigned char 
  3002 ;;  c               1    0[BANK0 ] unsigned char 
  3003 ;; Auto vars:     Size  Location     Type
  3004 ;;  b               1   15[BANK0 ] unsigned char 
  3005 ;;  i               2   16[BANK0 ] int 
  3006 ;; Return value:  Size  Location     Type
  3007 ;;                  1    wreg      enum E2
  3008 ;; Registers used:
  3009 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3010 ;; Tracked objects:
  3011 ;;		On entry : 0/0
  3012 ;;		On exit  : 0/0
  3013 ;;		Unchanged: 0/0
  3014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3015 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3016 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3017 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3018 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3019 ;;Total ram usage:       18 bytes
  3020 ;; Hardware stack levels used: 1
  3021 ;; Hardware stack levels required when called: 2
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_uart_init
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _uart_clock_setup
  3031  030D                     _uart_clock_setup:
  3032                           
  3033                           ;incstack = 0
  3034                           ; Regs used in _uart_clock_setup: [wreg-fsr0h+status,2+status,0+pclath]
  3035                           ;uart_clock_setup@b stored from wreg
  3036  030D  0020               	movlb	0	; select bank0
  3037  030E  00D3               	movwf	uart_clock_setup@b
  3038  030F                     l1683:
  3039                           
  3040                           ;uartlib.c: 132:     TXSTAbits.SYNC = 0;
  3041  030F  0023               	movlb	3	; select bank3
  3042  0310  121E               	bcf	30,4	;volatile
  3043  0311                     l1685:
  3044                           
  3045                           ;uartlib.c: 134:     if (b > (8) - 1)
  3046  0311  3008               	movlw	8
  3047  0312  0020               	movlb	0	; select bank0
  3048  0313  0253               	subwf	uart_clock_setup@b,w
  3049  0314  1C03               	skipc
  3050  0315  2B17               	goto	u1261
  3051  0316  2B18               	goto	u1260
  3052  0317                     u1261:
  3053  0317  2B1A               	goto	l1691
  3054  0318                     u1260:
  3055  0318                     l1687:
  3056                           
  3057                           ;uartlib.c: 135:         return false;
  3058  0318  3000               	movlw	0
  3059  0319  2BD1               	goto	l111
  3060  031A                     l1691:
  3061                           
  3062                           ;uartlib.c: 137:     if (c > (7) - 1)
  3063  031A  3007               	movlw	7
  3064  031B  0244               	subwf	uart_clock_setup@c,w
  3065  031C  1C03               	skipc
  3066  031D  2B1F               	goto	u1271
  3067  031E  2B20               	goto	u1270
  3068  031F                     u1271:
  3069  031F  2B21               	goto	l1697
  3070  0320                     u1270:
  3071  0320  2B18               	goto	l1687
  3072  0321                     l1697:
  3073                           
  3074                           ;uartlib.c: 140:     int i;;uartlib.c: 141:     for (i = 0; i < (4); i++) {
  3075  0321  01D4               	clrf	uart_clock_setup@i
  3076  0322  01D5               	clrf	uart_clock_setup@i+1
  3077  0323                     l1703:
  3078                           
  3079                           ;uartlib.c: 142:         if (spbr_array [c][b][i]) {
  3080  0323  0020               	movlb	0	; select bank0
  3081  0324  0855               	movf	uart_clock_setup@i+1,w
  3082  0325  00C6               	movwf	??_uart_clock_setup+1
  3083  0326  0854               	movf	uart_clock_setup@i,w
  3084  0327  00C5               	movwf	??_uart_clock_setup
  3085  0328  35C5               	lslf	??_uart_clock_setup,f
  3086  0329  0DC6               	rlf	??_uart_clock_setup+1,f
  3087  032A  0853               	movf	uart_clock_setup@b,w
  3088  032B  00C7               	movwf	??_uart_clock_setup+2
  3089  032C  01C8               	clrf	??_uart_clock_setup+3
  3090  032D  35C7               	lslf	??_uart_clock_setup+2,f
  3091  032E  0DC8               	rlf	??_uart_clock_setup+3,f
  3092  032F  35C7               	lslf	??_uart_clock_setup+2,f
  3093  0330  0DC8               	rlf	??_uart_clock_setup+3,f
  3094  0331  35C7               	lslf	??_uart_clock_setup+2,f
  3095  0332  0DC8               	rlf	??_uart_clock_setup+3,f
  3096  0333  0844               	movf	uart_clock_setup@c,w
  3097  0334  00C9               	movwf	??_uart_clock_setup+4
  3098  0335  01CA               	clrf	??_uart_clock_setup+5
  3099  0336  3006               	movlw	6
  3100  0337                     u1285:
  3101  0337  35C9               	lslf	??_uart_clock_setup+4,f
  3102  0338  0DCA               	rlf	??_uart_clock_setup+5,f
  3103  0339  0B89               	decfsz	9,f
  3104  033A  2B37               	goto	u1285
  3105  033B  3027               	movlw	low (_spbr_array| (0+32768))
  3106  033C  00CB               	movwf	??_uart_clock_setup+6
  3107  033D  3080               	movlw	high (_spbr_array| (0+32768))
  3108  033E  00CC               	movwf	??_uart_clock_setup+7
  3109  033F  0849               	movf	??_uart_clock_setup+4,w
  3110  0340  074B               	addwf	??_uart_clock_setup+6,w
  3111  0341  00CD               	movwf	??_uart_clock_setup+8
  3112  0342  084A               	movf	??_uart_clock_setup+5,w
  3113  0343  3D4C               	addwfc	??_uart_clock_setup+7,w
  3114  0344  00CE               	movwf	??_uart_clock_setup+9
  3115  0345  0847               	movf	??_uart_clock_setup+2,w
  3116  0346  074D               	addwf	??_uart_clock_setup+8,w
  3117  0347  00CF               	movwf	??_uart_clock_setup+10
  3118  0348  0848               	movf	??_uart_clock_setup+3,w
  3119  0349  3D4E               	addwfc	??_uart_clock_setup+9,w
  3120  034A  00D0               	movwf	??_uart_clock_setup+11
  3121  034B  084F               	movf	??_uart_clock_setup+10,w
  3122  034C  0745               	addwf	??_uart_clock_setup,w
  3123  034D  0084               	movwf	4
  3124  034E  0850               	movf	??_uart_clock_setup+11,w
  3125  034F  3D46               	addwfc	??_uart_clock_setup+1,w
  3126  0350  0085               	movwf	5
  3127  0351  0012               	moviw fsr0++
  3128  0352  00D1               	movwf	??_uart_clock_setup+12
  3129  0353  0012               	moviw fsr0++
  3130  0354  04D1               	iorwf	??_uart_clock_setup+12,f
  3131  0355  1903               	btfsc	3,2
  3132  0356  2B58               	goto	u1291
  3133  0357  2B59               	goto	u1290
  3134  0358                     u1291:
  3135  0358  2BB0               	goto	l1711
  3136  0359                     u1290:
  3137  0359                     l1705:
  3138                           
  3139                           ;uartlib.c: 143:             SPBRG = spbr_array [c][b][i];
  3140  0359  0855               	movf	uart_clock_setup@i+1,w
  3141  035A  00C6               	movwf	??_uart_clock_setup+1
  3142  035B  0854               	movf	uart_clock_setup@i,w
  3143  035C  00C5               	movwf	??_uart_clock_setup
  3144  035D  35C5               	lslf	??_uart_clock_setup,f
  3145  035E  0DC6               	rlf	??_uart_clock_setup+1,f
  3146  035F  0853               	movf	uart_clock_setup@b,w
  3147  0360  00C7               	movwf	??_uart_clock_setup+2
  3148  0361  01C8               	clrf	??_uart_clock_setup+3
  3149  0362  35C7               	lslf	??_uart_clock_setup+2,f
  3150  0363  0DC8               	rlf	??_uart_clock_setup+3,f
  3151  0364  35C7               	lslf	??_uart_clock_setup+2,f
  3152  0365  0DC8               	rlf	??_uart_clock_setup+3,f
  3153  0366  35C7               	lslf	??_uart_clock_setup+2,f
  3154  0367  0DC8               	rlf	??_uart_clock_setup+3,f
  3155  0368  0844               	movf	uart_clock_setup@c,w
  3156  0369  00C9               	movwf	??_uart_clock_setup+4
  3157  036A  01CA               	clrf	??_uart_clock_setup+5
  3158  036B  3006               	movlw	6
  3159  036C                     u1305:
  3160  036C  35C9               	lslf	??_uart_clock_setup+4,f
  3161  036D  0DCA               	rlf	??_uart_clock_setup+5,f
  3162  036E  0B89               	decfsz	9,f
  3163  036F  2B6C               	goto	u1305
  3164  0370  3027               	movlw	low (_spbr_array| (0+32768))
  3165  0371  00CB               	movwf	??_uart_clock_setup+6
  3166  0372  3080               	movlw	high (_spbr_array| (0+32768))
  3167  0373  00CC               	movwf	??_uart_clock_setup+7
  3168  0374  0849               	movf	??_uart_clock_setup+4,w
  3169  0375  074B               	addwf	??_uart_clock_setup+6,w
  3170  0376  00CD               	movwf	??_uart_clock_setup+8
  3171  0377  084A               	movf	??_uart_clock_setup+5,w
  3172  0378  3D4C               	addwfc	??_uart_clock_setup+7,w
  3173  0379  00CE               	movwf	??_uart_clock_setup+9
  3174  037A  0847               	movf	??_uart_clock_setup+2,w
  3175  037B  074D               	addwf	??_uart_clock_setup+8,w
  3176  037C  00CF               	movwf	??_uart_clock_setup+10
  3177  037D  0848               	movf	??_uart_clock_setup+3,w
  3178  037E  3D4E               	addwfc	??_uart_clock_setup+9,w
  3179  037F  00D0               	movwf	??_uart_clock_setup+11
  3180  0380  084F               	movf	??_uart_clock_setup+10,w
  3181  0381  0745               	addwf	??_uart_clock_setup,w
  3182  0382  0084               	movwf	4
  3183  0383  0850               	movf	??_uart_clock_setup+11,w
  3184  0384  3D46               	addwfc	??_uart_clock_setup+1,w
  3185  0385  0085               	movwf	5
  3186  0386  3F00               	moviw [0]fsr0
  3187  0387  0023               	movlb	3	; select bank3
  3188  0388  009B               	movwf	27	;volatile
  3189  0389  3F01               	moviw [1]fsr0
  3190  038A  009C               	movwf	28	;volatile
  3191                           
  3192                           ;uartlib.c: 144:             switch (i) {
  3193  038B  2B9C               	goto	l1709
  3194  038C                     l117:	
  3195                           ;uartlib.c: 145:                 case 0:
  3196                           
  3197                           
  3198                           ;uartlib.c: 146:                     BRGH = 0;
  3199  038C  0023               	movlb	3	; select bank3
  3200  038D  111E               	bcf	30,2	;volatile
  3201                           
  3202                           ;uartlib.c: 147:                     BRG16 = 0;
  3203  038E  119F               	bcf	31,3	;volatile
  3204                           
  3205                           ;uartlib.c: 148:                     break;
  3206  038F  2BC1               	goto	l1713
  3207  0390                     l119:	
  3208                           ;uartlib.c: 149:                 case 1:
  3209                           
  3210                           
  3211                           ;uartlib.c: 150:                     BRGH = 1;
  3212  0390  0023               	movlb	3	; select bank3
  3213  0391  151E               	bsf	30,2	;volatile
  3214                           
  3215                           ;uartlib.c: 151:                     BRG16 = 0;
  3216  0392  119F               	bcf	31,3	;volatile
  3217                           
  3218                           ;uartlib.c: 152:                     break;
  3219  0393  2BC1               	goto	l1713
  3220  0394                     l120:	
  3221                           ;uartlib.c: 153:                 case 2:
  3222                           
  3223                           
  3224                           ;uartlib.c: 154:                     BRGH = 0;
  3225  0394  0023               	movlb	3	; select bank3
  3226  0395  111E               	bcf	30,2	;volatile
  3227                           
  3228                           ;uartlib.c: 155:                     BRG16 = 1;
  3229  0396  159F               	bsf	31,3	;volatile
  3230                           
  3231                           ;uartlib.c: 156:                     break;
  3232  0397  2BC1               	goto	l1713
  3233  0398                     l121:	
  3234                           ;uartlib.c: 157:                 case 3:
  3235                           
  3236                           
  3237                           ;uartlib.c: 158:                     BRGH = 1;
  3238  0398  0023               	movlb	3	; select bank3
  3239  0399  151E               	bsf	30,2	;volatile
  3240                           
  3241                           ;uartlib.c: 159:                     BRG16 = 1;
  3242  039A  159F               	bsf	31,3	;volatile
  3243                           
  3244                           ;uartlib.c: 160:                     break;
  3245  039B  2BC1               	goto	l1713
  3246  039C                     l1709:
  3247                           
  3248                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3249                           ; Switch size 1, requested type "simple"
  3250                           ; Number of cases is 1, Range of values is 0 to 0
  3251                           ; switch strategies available:
  3252                           ; Name         Instructions Cycles
  3253                           ; simple_byte            4     3 (average)
  3254                           ; direct_byte            8     6 (fixed)
  3255                           ; jumptable            260     6 (fixed)
  3256                           ;	Chosen strategy is simple_byte
  3257  039C  0020               	movlb	0	; select bank0
  3258  039D  0855               	movf	uart_clock_setup@i+1,w
  3259  039E  3A00               	xorlw	0	; case 0
  3260  039F  1903               	skipnz
  3261  03A0  2BA2               	goto	l2001
  3262  03A1  2BC1               	goto	l1713
  3263  03A2                     l2001:
  3264                           
  3265                           ; Switch size 1, requested type "simple"
  3266                           ; Number of cases is 4, Range of values is 0 to 3
  3267                           ; switch strategies available:
  3268                           ; Name         Instructions Cycles
  3269                           ; simple_byte           13     7 (average)
  3270                           ; direct_byte           14     6 (fixed)
  3271                           ; jumptable            260     6 (fixed)
  3272                           ;	Chosen strategy is simple_byte
  3273  03A2  0854               	movf	uart_clock_setup@i,w
  3274  03A3  3A00               	xorlw	0	; case 0
  3275  03A4  1903               	skipnz
  3276  03A5  2B8C               	goto	l117
  3277  03A6  3A01               	xorlw	1	; case 1
  3278  03A7  1903               	skipnz
  3279  03A8  2B90               	goto	l119
  3280  03A9  3A03               	xorlw	3	; case 2
  3281  03AA  1903               	skipnz
  3282  03AB  2B94               	goto	l120
  3283  03AC  3A01               	xorlw	1	; case 3
  3284  03AD  1903               	skipnz
  3285  03AE  2B98               	goto	l121
  3286  03AF  2BC1               	goto	l1713
  3287  03B0                     l1711:
  3288                           
  3289                           ;uartlib.c: 164:     }
  3290  03B0  3001               	movlw	1
  3291  03B1  07D4               	addwf	uart_clock_setup@i,f
  3292  03B2  3000               	movlw	0
  3293  03B3  3DD5               	addwfc	uart_clock_setup@i+1,f
  3294  03B4  0855               	movf	uart_clock_setup@i+1,w
  3295  03B5  3A80               	xorlw	128
  3296  03B6  00C5               	movwf	??_uart_clock_setup
  3297  03B7  3080               	movlw	128
  3298  03B8  0245               	subwf	??_uart_clock_setup,w
  3299  03B9  1D03               	skipz
  3300  03BA  2BBD               	goto	u1315
  3301  03BB  3004               	movlw	4
  3302  03BC  0254               	subwf	uart_clock_setup@i,w
  3303  03BD                     u1315:
  3304  03BD  1C03               	skipc
  3305  03BE  2BC0               	goto	u1311
  3306  03BF  2BC1               	goto	u1310
  3307  03C0                     u1311:
  3308  03C0  2B23               	goto	l1703
  3309  03C1                     u1310:
  3310  03C1                     l1713:
  3311                           
  3312                           ;uartlib.c: 166:     if (i >= (4))
  3313  03C1  0020               	movlb	0	; select bank0
  3314  03C2  0855               	movf	uart_clock_setup@i+1,w
  3315  03C3  3A80               	xorlw	128
  3316  03C4  00C5               	movwf	??_uart_clock_setup
  3317  03C5  3080               	movlw	128
  3318  03C6  0245               	subwf	??_uart_clock_setup,w
  3319  03C7  1D03               	skipz
  3320  03C8  2BCB               	goto	u1325
  3321  03C9  3004               	movlw	4
  3322  03CA  0254               	subwf	uart_clock_setup@i,w
  3323  03CB                     u1325:
  3324  03CB  1C03               	skipc
  3325  03CC  2BCE               	goto	u1321
  3326  03CD  2BCF               	goto	u1320
  3327  03CE                     u1321:
  3328  03CE  2BD0               	goto	l1719
  3329  03CF                     u1320:
  3330  03CF  2B18               	goto	l1687
  3331  03D0                     l1719:
  3332                           
  3333                           ;uartlib.c: 169:     return true;
  3334  03D0  3001               	movlw	1
  3335  03D1                     l111:
  3336  03D1  0008               	return
  3337  03D2                     __end_of_uart_clock_setup:
  3338                           
  3339                           	psect	text12
  3340  05C0                     __ptext12:	
  3341 ;; *************** function _empty_comb *****************
  3342 ;; Defined at:
  3343 ;;		line 90 in file "LA.c"
  3344 ;; Parameters:    Size  Location     Type
  3345 ;;		None
  3346 ;; Auto vars:     Size  Location     Type
  3347 ;;		None
  3348 ;; Return value:  Size  Location     Type
  3349 ;;                  1    wreg      void 
  3350 ;; Registers used:
  3351 ;;		status,2
  3352 ;; Tracked objects:
  3353 ;;		On entry : 0/0
  3354 ;;		On exit  : 0/0
  3355 ;;		Unchanged: 0/0
  3356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3361 ;;Total ram usage:        0 bytes
  3362 ;; Hardware stack levels used: 1
  3363 ;; Hardware stack levels required when called: 2
  3364 ;; This function calls:
  3365 ;;		Nothing
  3366 ;; This function is called by:
  3367 ;;		_main
  3368 ;; This function uses a non-reentrant model
  3369 ;;
  3370                           
  3371                           
  3372                           ;psect for function _empty_comb
  3373  05C0                     _empty_comb:
  3374  05C0                     l1837:	
  3375                           ;incstack = 0
  3376                           ; Regs used in _empty_comb: [status,2]
  3377                           
  3378                           
  3379                           ;LA.c: 91:     comb1 = 0x00;
  3380  05C0  0020               	movlb	0	; select bank0
  3381  05C1  01C2               	clrf	_comb1
  3382                           
  3383                           ;LA.c: 92:     comb2 = 0x00;
  3384  05C2  01C1               	clrf	_comb2
  3385                           
  3386                           ;LA.c: 93:     comb3 = 0x00;
  3387  05C3  01C0               	clrf	_comb3
  3388                           
  3389                           ;LA.c: 94:     comb4 = 0x00;
  3390  05C4  01BF               	clrf	_comb4
  3391                           
  3392                           ;LA.c: 95:     comb5 = 0x00;
  3393  05C5  01BE               	clrf	_comb5
  3394                           
  3395                           ;LA.c: 96:     comb6 = 0x00;
  3396  05C6  01BD               	clrf	_comb6
  3397                           
  3398                           ;LA.c: 97:     comb7 = 0x00;
  3399  05C7  01BC               	clrf	_comb7
  3400  05C8                     l272:
  3401  05C8  0008               	return
  3402  05C9                     __end_of_empty_comb:
  3403                           
  3404                           	psect	text13
  3405  0541                     __ptext13:	
  3406 ;; *************** function ___wmul *****************
  3407 ;; Defined at:
  3408 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3411 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3412 ;; Auto vars:     Size  Location     Type
  3413 ;;  product         2    4[BANK0 ] unsigned int 
  3414 ;; Return value:  Size  Location     Type
  3415 ;;                  2    0[BANK0 ] unsigned int 
  3416 ;; Registers used:
  3417 ;;		wreg, status,2, status,0
  3418 ;; Tracked objects:
  3419 ;;		On entry : 0/0
  3420 ;;		On exit  : 0/0
  3421 ;;		Unchanged: 0/0
  3422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3424 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3426 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3427 ;;Total ram usage:        6 bytes
  3428 ;; Hardware stack levels used: 1
  3429 ;; Hardware stack levels required when called: 2
  3430 ;; This function calls:
  3431 ;;		Nothing
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function ___wmul
  3439  0541                     ___wmul:
  3440  0541                     l1839:	
  3441                           ;incstack = 0
  3442                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3443                           
  3444  0541  0020               	movlb	0	; select bank0
  3445  0542  01C8               	clrf	___wmul@product
  3446  0543  01C9               	clrf	___wmul@product+1
  3447  0544                     l1841:
  3448  0544  1C44               	btfss	___wmul@multiplier,0
  3449  0545  2D47               	goto	u1431
  3450  0546  2D48               	goto	u1430
  3451  0547                     u1431:
  3452  0547  2D4C               	goto	l426
  3453  0548                     u1430:
  3454  0548                     l1843:
  3455  0548  0846               	movf	___wmul@multiplicand,w
  3456  0549  07C8               	addwf	___wmul@product,f
  3457  054A  0847               	movf	___wmul@multiplicand+1,w
  3458  054B  3DC9               	addwfc	___wmul@product+1,f
  3459  054C                     l426:
  3460  054C  3001               	movlw	1
  3461  054D                     u1445:
  3462  054D  35C6               	lslf	___wmul@multiplicand,f
  3463  054E  0DC7               	rlf	___wmul@multiplicand+1,f
  3464  054F  0B89               	decfsz	9,f
  3465  0550  2D4D               	goto	u1445
  3466  0551                     l1845:
  3467  0551  3001               	movlw	1
  3468  0552                     u1455:
  3469  0552  36C5               	lsrf	___wmul@multiplier+1,f
  3470  0553  0CC4               	rrf	___wmul@multiplier,f
  3471  0554  0B89               	decfsz	9,f
  3472  0555  2D52               	goto	u1455
  3473  0556                     l1847:
  3474  0556  0844               	movf	___wmul@multiplier,w
  3475  0557  0445               	iorwf	___wmul@multiplier+1,w
  3476  0558  1D03               	btfss	3,2
  3477  0559  2D5B               	goto	u1461
  3478  055A  2D5C               	goto	u1460
  3479  055B                     u1461:
  3480  055B  2D44               	goto	l1841
  3481  055C                     u1460:
  3482  055C                     l1849:
  3483  055C  0849               	movf	___wmul@product+1,w
  3484  055D  00C5               	movwf	?___wmul+1
  3485  055E  0848               	movf	___wmul@product,w
  3486  055F  00C4               	movwf	?___wmul
  3487  0560                     l428:
  3488  0560  0008               	return
  3489  0561                     __end_of___wmul:
  3490                           
  3491                           	psect	text14
  3492  05B1                     __ptext14:	
  3493 ;; *************** function _Stepper *****************
  3494 ;; Defined at:
  3495 ;;		line 9 in file "stepperlib.c"
  3496 ;; Parameters:    Size  Location     Type
  3497 ;;  num_of_steps    2    0[BANK0 ] int 
  3498 ;; Auto vars:     Size  Location     Type
  3499 ;;		None
  3500 ;; Return value:  Size  Location     Type
  3501 ;;                  1    wreg      void 
  3502 ;; Registers used:
  3503 ;;		wreg, status,2
  3504 ;; Tracked objects:
  3505 ;;		On entry : 0/0
  3506 ;;		On exit  : 0/0
  3507 ;;		Unchanged: 0/0
  3508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3509 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3512 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3513 ;;Total ram usage:        2 bytes
  3514 ;; Hardware stack levels used: 1
  3515 ;; Hardware stack levels required when called: 2
  3516 ;; This function calls:
  3517 ;;		Nothing
  3518 ;; This function is called by:
  3519 ;;		_main
  3520 ;; This function uses a non-reentrant model
  3521 ;;
  3522                           
  3523                           
  3524                           ;psect for function _Stepper
  3525  05B1                     _Stepper:
  3526  05B1                     l1763:	
  3527                           ;incstack = 0
  3528                           ; Regs used in _Stepper: [wreg+status,2]
  3529                           
  3530                           
  3531                           ;stepperlib.c: 10:     step_number = 0;
  3532  05B1  0020               	movlb	0	; select bank0
  3533  05B2  01B6               	clrf	_step_number
  3534  05B3  01B7               	clrf	_step_number+1
  3535                           
  3536                           ;stepperlib.c: 11:     direction = 0;
  3537  05B4  01BA               	clrf	_direction
  3538  05B5  01BB               	clrf	_direction+1
  3539  05B6                     l1765:
  3540                           
  3541                           ;stepperlib.c: 12:     number_of_steps = num_of_steps;
  3542  05B6  0845               	movf	Stepper@num_of_steps+1,w
  3543  05B7  00B9               	movwf	_number_of_steps+1
  3544  05B8  0844               	movf	Stepper@num_of_steps,w
  3545  05B9  00B8               	movwf	_number_of_steps
  3546  05BA                     l1767:
  3547                           
  3548                           ;stepperlib.c: 15:     TRISCbits.TRISC0 = 0;
  3549  05BA  0021               	movlb	1	; select bank1
  3550  05BB  100E               	bcf	14,0	;volatile
  3551  05BC                     l1769:
  3552                           
  3553                           ;stepperlib.c: 16:     TRISCbits.TRISC1 = 0;
  3554  05BC  108E               	bcf	14,1	;volatile
  3555  05BD                     l1771:
  3556                           
  3557                           ;stepperlib.c: 17:     TRISCbits.TRISC2 = 0;
  3558  05BD  110E               	bcf	14,2	;volatile
  3559  05BE                     l1773:
  3560                           
  3561                           ;stepperlib.c: 18:     TRISCbits.TRISC3 = 0;
  3562  05BE  118E               	bcf	14,3	;volatile
  3563  05BF                     l19:
  3564  05BF  0008               	return
  3565  05C0                     __end_of_Stepper:
  3566                           
  3567                           	psect	intentry
  3568  0004                     __pintentry:	
  3569 ;; *************** function _ISR *****************
  3570 ;; Defined at:
  3571 ;;		line 28 in file "LA.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;		None
  3574 ;; Auto vars:     Size  Location     Type
  3575 ;;		None
  3576 ;; Return value:  Size  Location     Type
  3577 ;;                  1    wreg      void 
  3578 ;; Registers used:
  3579 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3580 ;; Tracked objects:
  3581 ;;		On entry : 0/0
  3582 ;;		On exit  : 0/0
  3583 ;;		Unchanged: 0/0
  3584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3589 ;;Total ram usage:        0 bytes
  3590 ;; Hardware stack levels used: 1
  3591 ;; Hardware stack levels required when called: 1
  3592 ;; This function calls:
  3593 ;;		_uart_handle_rcv_int
  3594 ;;		_uart_handle_tx_int
  3595 ;; This function is called by:
  3596 ;;		Interrupt level 1
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600  0004                     _ISR:
  3601                           
  3602                           ;incstack = 0
  3603  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3604                           
  3605                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3606  0005  3180               	pagesel	$
  3607  0006                     i1l1533:
  3608                           
  3609                           ;LA.c: 29:     uart_handle_rcv_int();
  3610  0006  3184  247F  3180   	fcall	_uart_handle_rcv_int
  3611                           
  3612                           ;LA.c: 30:     uart_handle_tx_int();
  3613  0009  3184  2443  3180   	fcall	_uart_handle_tx_int
  3614  000C                     i1l238:
  3615  000C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3616  000D  0009               	retfie
  3617  000E                     __end_of_ISR:
  3618                           
  3619                           	psect	text16
  3620  0443                     __ptext16:	
  3621 ;; *************** function _uart_handle_tx_int *****************
  3622 ;; Defined at:
  3623 ;;		line 222 in file "uartlib.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;		None
  3626 ;; Auto vars:     Size  Location     Type
  3627 ;;		None
  3628 ;; Return value:  Size  Location     Type
  3629 ;;                  1    wreg      void 
  3630 ;; Registers used:
  3631 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3632 ;; Tracked objects:
  3633 ;;		On entry : 0/0
  3634 ;;		On exit  : 0/0
  3635 ;;		Unchanged: 0/0
  3636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3638 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3639 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3640 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3641 ;;Total ram usage:        5 bytes
  3642 ;; Hardware stack levels used: 1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_ISR
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function _uart_handle_tx_int
  3652  0443                     _uart_handle_tx_int:
  3653  0443                     i1l1455:	
  3654                           ;incstack = 0
  3655                           ; Regs used in _uart_handle_tx_int: [wreg+fsr1l+fsr1h+status,2+status,0]
  3656                           
  3657                           
  3658                           ;uartlib.c: 223:     if (TXIF && TXIE) {
  3659  0443  0020               	movlb	0	; select bank0
  3660  0444  1E11               	btfss	17,4	;volatile
  3661  0445  2C47               	goto	u86_21
  3662  0446  2C48               	goto	u86_20
  3663  0447                     u86_21:
  3664  0447  2C7E               	goto	i1l166
  3665  0448                     u86_20:
  3666  0448                     i1l1457:
  3667  0448  0021               	movlb	1	; select bank1
  3668  0449  1E11               	btfss	17,4	;volatile
  3669  044A  2C4C               	goto	u87_21
  3670  044B  2C4D               	goto	u87_20
  3671  044C                     u87_21:
  3672  044C  2C7E               	goto	i1l166
  3673  044D                     u87_20:
  3674  044D                     i1l1459:
  3675                           
  3676                           ;uartlib.c: 224:         if (uart_transmit_head == uart_transmit_tail) {
  3677  044D  0876               	movf	_uart_transmit_head,w	;volatile
  3678  044E  0675               	xorwf	_uart_transmit_tail,w	;volatile
  3679  044F  1D03               	skipz
  3680  0450  2C52               	goto	u88_21
  3681  0451  2C53               	goto	u88_20
  3682  0452                     u88_21:
  3683  0452  2C55               	goto	i1l1463
  3684  0453                     u88_20:
  3685  0453                     i1l1461:
  3686                           
  3687                           ;uartlib.c: 225:             TXIE = 0;
  3688  0453  1211               	bcf	17,4	;volatile
  3689                           
  3690                           ;uartlib.c: 226:         } else {
  3691  0454  2C7E               	goto	i1l166
  3692  0455                     i1l1463:
  3693                           
  3694                           ;uartlib.c: 227:             TXREG = uart_transmit_buffer[uart_transmit_tail];
  3695  0455  0875               	movf	_uart_transmit_tail,w
  3696  0456  3E20               	addlw	(low (_uart_transmit_buffer| 0))& (0+255)
  3697  0457  0086               	movwf	6
  3698  0458  0187               	clrf	7
  3699  0459  0801               	movf	1,w
  3700  045A  0023               	movlb	3	; select bank3
  3701  045B  009A               	movwf	26	;volatile
  3702  045C                     i1l1465:
  3703                           
  3704                           ;uartlib.c: 228:             uart_transmit_tail = (uart_transmit_tail+1 >= (10)) ? (0) :
      +                           (uart_transmit_tail+1);
  3705  045C  0875               	movf	_uart_transmit_tail,w	;volatile
  3706  045D  3E01               	addlw	1
  3707  045E  00F0               	movwf	??_uart_handle_tx_int
  3708  045F  3000               	movlw	0
  3709  0460  1803               	skipnc
  3710  0461  3001               	movlw	1
  3711  0462  00F1               	movwf	??_uart_handle_tx_int+1
  3712  0463  0871               	movf	??_uart_handle_tx_int+1,w
  3713  0464  3A80               	xorlw	128
  3714  0465  00F2               	movwf	??_uart_handle_tx_int+2
  3715  0466  3080               	movlw	128
  3716  0467  0272               	subwf	??_uart_handle_tx_int+2,w
  3717  0468  1D03               	skipz
  3718  0469  2C6C               	goto	u89_25
  3719  046A  300A               	movlw	10
  3720  046B  0270               	subwf	??_uart_handle_tx_int,w
  3721  046C                     u89_25:
  3722  046C  1803               	skipnc
  3723  046D  2C6F               	goto	u89_21
  3724  046E  2C70               	goto	u89_20
  3725  046F                     u89_21:
  3726  046F  2C78               	goto	i1l1469
  3727  0470                     u89_20:
  3728  0470                     i1l1467:
  3729  0470  0875               	movf	_uart_transmit_tail,w	;volatile
  3730  0471  3E01               	addlw	1
  3731  0472  00F3               	movwf	_uart_handle_tx_int$258
  3732  0473  3000               	movlw	0
  3733  0474  1803               	skipnc
  3734  0475  3001               	movlw	1
  3735  0476  00F4               	movwf	_uart_handle_tx_int$258+1
  3736  0477  2C7A               	goto	i1l1471
  3737  0478                     i1l1469:
  3738  0478  01F3               	clrf	_uart_handle_tx_int$258
  3739  0479  01F4               	clrf	_uart_handle_tx_int$258+1
  3740  047A                     i1l1471:
  3741  047A  0873               	movf	_uart_handle_tx_int$258,w
  3742  047B  00F0               	movwf	??_uart_handle_tx_int
  3743  047C  0870               	movf	??_uart_handle_tx_int,w
  3744  047D  00F5               	movwf	_uart_transmit_tail	;volatile
  3745  047E                     i1l166:
  3746  047E  0008               	return
  3747  047F                     __end_of_uart_handle_tx_int:
  3748                           
  3749                           	psect	text17
  3750  047F                     __ptext17:	
  3751 ;; *************** function _uart_handle_rcv_int *****************
  3752 ;; Defined at:
  3753 ;;		line 204 in file "uartlib.c"
  3754 ;; Parameters:    Size  Location     Type
  3755 ;;		None
  3756 ;; Auto vars:     Size  Location     Type
  3757 ;;		None
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  1    wreg      void 
  3760 ;; Registers used:
  3761 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3768 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3769 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3770 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3771 ;;Total ram usage:        5 bytes
  3772 ;; Hardware stack levels used: 1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_ISR
  3777 ;; This function uses a non-reentrant model
  3778 ;;
  3779                           
  3780                           
  3781                           ;psect for function _uart_handle_rcv_int
  3782  047F                     _uart_handle_rcv_int:
  3783  047F                     i1l1437:	
  3784                           ;incstack = 0
  3785                           ; Regs used in _uart_handle_rcv_int: [wreg+fsr1l+fsr1h+status,2+status,0]
  3786                           
  3787                           
  3788                           ;uartlib.c: 205:     if (RCIF && RCIE) {
  3789  047F  0020               	movlb	0	; select bank0
  3790  0480  1E91               	btfss	17,5	;volatile
  3791  0481  2C83               	goto	u82_21
  3792  0482  2C84               	goto	u82_20
  3793  0483                     u82_21:
  3794  0483  2CBA               	goto	i1l156
  3795  0484                     u82_20:
  3796  0484                     i1l1439:
  3797  0484  0021               	movlb	1	; select bank1
  3798  0485  1E91               	btfss	17,5	;volatile
  3799  0486  2C88               	goto	u83_21
  3800  0487  2C89               	goto	u83_20
  3801  0488                     u83_21:
  3802  0488  2CBA               	goto	i1l156
  3803  0489                     u83_20:
  3804  0489                     i1l1441:
  3805  0489                     i1l150:	
  3806                           ;uartlib.c: 207:         if (FERR) {
  3807                           ;uartlib.c: 208:         }
  3808                           
  3809                           
  3810                           ;uartlib.c: 211:         if (OERR) {
  3811  0489  0023               	movlb	3	; select bank3
  3812  048A  1C9D               	btfss	29,1	;volatile
  3813  048B  2C8D               	goto	u84_21
  3814  048C  2C8E               	goto	u84_20
  3815  048D                     u84_21:
  3816  048D  2C90               	goto	i1l1445
  3817  048E                     u84_20:
  3818  048E                     i1l1443:
  3819                           
  3820                           ;uartlib.c: 212:             CREN = 0;
  3821  048E  121D               	bcf	29,4	;volatile
  3822                           
  3823                           ;uartlib.c: 213:             CREN = 1;
  3824  048F  161D               	bsf	29,4	;volatile
  3825  0490                     i1l1445:
  3826                           
  3827                           ;uartlib.c: 216:         uart_recieve_buffer[uart_recieve_head] = RCREG;
  3828  0490  0819               	movf	25,w	;volatile
  3829  0491  00F0               	movwf	??_uart_handle_rcv_int
  3830  0492  0877               	movf	_uart_recieve_head,w
  3831  0493  3E2A               	addlw	(low (_uart_recieve_buffer| 0))& (0+255)
  3832  0494  0086               	movwf	6
  3833  0495  0187               	clrf	7
  3834  0496  0870               	movf	??_uart_handle_rcv_int,w
  3835  0497  0081               	movwf	1
  3836  0498                     i1l1447:
  3837                           
  3838                           ;uartlib.c: 217:         uart_recieve_head = (uart_recieve_head+1 >= (10)) ? (0) : (uart
      +                          _recieve_head+1);
  3839  0498  0877               	movf	_uart_recieve_head,w	;volatile
  3840  0499  3E01               	addlw	1
  3841  049A  00F0               	movwf	??_uart_handle_rcv_int
  3842  049B  3000               	movlw	0
  3843  049C  1803               	skipnc
  3844  049D  3001               	movlw	1
  3845  049E  00F1               	movwf	??_uart_handle_rcv_int+1
  3846  049F  0871               	movf	??_uart_handle_rcv_int+1,w
  3847  04A0  3A80               	xorlw	128
  3848  04A1  00F2               	movwf	??_uart_handle_rcv_int+2
  3849  04A2  3080               	movlw	128
  3850  04A3  0272               	subwf	??_uart_handle_rcv_int+2,w
  3851  04A4  1D03               	skipz
  3852  04A5  2CA8               	goto	u85_25
  3853  04A6  300A               	movlw	10
  3854  04A7  0270               	subwf	??_uart_handle_rcv_int,w
  3855  04A8                     u85_25:
  3856  04A8  1803               	skipnc
  3857  04A9  2CAB               	goto	u85_21
  3858  04AA  2CAC               	goto	u85_20
  3859  04AB                     u85_21:
  3860  04AB  2CB4               	goto	i1l1451
  3861  04AC                     u85_20:
  3862  04AC                     i1l1449:
  3863  04AC  0877               	movf	_uart_recieve_head,w	;volatile
  3864  04AD  3E01               	addlw	1
  3865  04AE  00F3               	movwf	_uart_handle_rcv_int$256
  3866  04AF  3000               	movlw	0
  3867  04B0  1803               	skipnc
  3868  04B1  3001               	movlw	1
  3869  04B2  00F4               	movwf	_uart_handle_rcv_int$256+1
  3870  04B3  2CB6               	goto	i1l1453
  3871  04B4                     i1l1451:
  3872  04B4  01F3               	clrf	_uart_handle_rcv_int$256
  3873  04B5  01F4               	clrf	_uart_handle_rcv_int$256+1
  3874  04B6                     i1l1453:
  3875  04B6  0873               	movf	_uart_handle_rcv_int$256,w
  3876  04B7  00F0               	movwf	??_uart_handle_rcv_int
  3877  04B8  0870               	movf	??_uart_handle_rcv_int,w
  3878  04B9  00F7               	movwf	_uart_recieve_head	;volatile
  3879  04BA                     i1l156:
  3880  04BA  0008               	return
  3881  04BB                     __end_of_uart_handle_rcv_int:
  3882  007E                     btemp	set	126	;btemp
  3883  007E                     int$flags	set	126
  3884  007E                     wtemp0	set	126
  3885                           
  3886                           	psect	config
  3887                           
  3888                           ;Config register CONFIG1 @ 0x8007
  3889                           ;	Oscillator Selection
  3890                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3891                           ;	Watchdog Timer Enable
  3892                           ;	WDTE = OFF, WDT disabled
  3893                           ;	Power-up Timer Enable
  3894                           ;	PWRTE = OFF, PWRT disabled
  3895                           ;	MCLR Pin Function Select
  3896                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3897                           ;	Flash Program Memory Code Protection
  3898                           ;	CP = OFF, Program memory code protection is disabled
  3899                           ;	Data Memory Code Protection
  3900                           ;	CPD = OFF, Data memory code protection is disabled
  3901                           ;	Brown-out Reset Enable
  3902                           ;	BOREN = ON, Brown-out Reset enabled
  3903                           ;	Clock Out Enable
  3904                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3905                           ;	Internal/External Switchover
  3906                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3907                           ;	Fail-Safe Clock Monitor Enable
  3908                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3909  8007                     	org	32775
  3910  8007  3FE4               	dw	16356
  3911                           
  3912                           ;Config register CONFIG2 @ 0x8008
  3913                           ;	Flash Memory Self-Write Protection
  3914                           ;	WRT = OFF, Write protection off
  3915                           ;	PLL Enable
  3916                           ;	PLLEN = ON, 4x PLL enabled
  3917                           ;	Stack Overflow/Underflow Reset Enable
  3918                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3919                           ;	Brown-out Reset Voltage Selection
  3920                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3921                           ;	Low-Voltage Programming Enable
  3922                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3923  8008                     	org	32776
  3924  8008  1FFF               	dw	8191

Data Sizes:
    Strings     3
    Constant    448
    Data        2
    BSS         39
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     28      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    NEWLINE	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_uart_handle_rcv_int
    _ISR->_uart_handle_tx_int

Critical Paths under _main in BANK0

    _step->_abs
    _setup->_uart_init
    _uart_init->_uart_clock_setup
    _uart_turnoff->_uart_flush_buffer

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2179
                                             21 BANK0      7     7      0
                            _Stepper
                             ___wmul
                         _empty_comb
                              _setup
                               _step
                     _uart_read_char
 ---------------------------------------------------------------------------------
 (1) _uart_read_char                                       6     6      0      71
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _step                                                 5     3      2     524
                                              4 BANK0      5     3      2
                                _abs
                          _stepMotor
 ---------------------------------------------------------------------------------
 (2) _stepMotor                                            2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     183
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            3     2      1     716
                                             18 BANK0      3     2      1
                   _uart_clock_setup
                _uart_reciever_setup
             _uart_transmitter_setup
                       _uart_turnoff
 ---------------------------------------------------------------------------------
 (3) _uart_turnoff                                         0     0      0      96
                  _uart_flush_buffer
 ---------------------------------------------------------------------------------
 (4) _uart_flush_buffer                                    2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _uart_transmitter_setup                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _uart_reciever_setup                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _uart_clock_setup                                    18    17      1     468
                                              0 BANK0     18    17      1
 ---------------------------------------------------------------------------------
 (1) _empty_comb                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Stepper                                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0      48
                _uart_handle_rcv_int
                 _uart_handle_tx_int
 ---------------------------------------------------------------------------------
 (6) _uart_handle_tx_int                                   5     5      0      24
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _uart_handle_rcv_int                                  5     5      0      24
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Stepper
   ___wmul
   _empty_comb
   _setup
     _uart_init
       _uart_clock_setup
       _uart_reciever_setup
       _uart_transmitter_setup
       _uart_turnoff
         _uart_flush_buffer
   _step
     _abs
     _stepMotor
   _uart_read_char

 _ISR (ROOT)
   _uart_handle_rcv_int
   _uart_handle_tx_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue May 25 16:31:01 2021

             uart_flush_buffer@i 0044                               l30 0440                               l31 0442  
                             l40 051F                               l19 05BF                               l35 04F3  
                             l28 0425                               l37 04F9                               l29 0421  
                             l38 04FF                               l39 0505                               l98 057F  
            ___wmul@multiplicand 0046                              l101 05D0                              l111 03D1  
                            l120 0394                              l104 05DF                              l121 0398  
                            l107 05D8                              l117 038C                              l119 0390  
                            l170 04F1                              l252 024D                              l272 05C8  
                            l185 0540                              l426 054C                              l428 0560  
                            l276 05B0                              l886 059B                              l889 059B  
                            _GIE 005F                              _ISR 0004                              _abs 0580  
                    _step_number 0036                              wreg 0009                             ?_ISR 0070  
                           l2001 03A2                             ?_abs 0044                             l1711 03B0  
                           l1703 0323                             l1713 03C1                             l1705 0359  
                           l1801 0432                             l1731 05D1                             l1811 04CC  
                           l1803 04BB                             l1709 039C                             l1733 0580  
                           l1741 050B                             l1813 04E0                             l1805 04C2  
                           l1901 0265                             l1719 03D0                             l1671 0520  
                           l1751 0574                             l1831 05A7                             l1823 059C  
                           l1735 058E                             l1815 04E9                             l1903 026B  
                           l1911 02A8                             l1841 0544                             l1729 05D9  
                           l1673 0526                             l1681 05CD                             l1833 05A8  
                           l1825 05A3                             l1737 04F2                             l1817 04EC  
                           l1809 04C4                             l1921 02C7                             l1913 02AF  
                           l1905 0289                             l1771 05BD                             l1763 05B1  
                           l1843 0548                             l1691 031A                             l1683 030F  
                           l1675 0530                             l1755 0576                             l1747 0563  
                           l1835 05A9                             l1827 05A4                             l1819 04F0  
                           l1931 02E3                             l1923 02CD                             l1915 02B5  
                           l1907 028F                             l1773 05BE                             l1765 05B6  
                           l1845 0551                             l1837 05C0                             l1685 0311  
                           l1677 053C                             l1757 057C                             l1749 0566  
                           l1829 05A5                             l1781 03EE                             l1941 02F9  
                           l1933 02E6                             l1925 02D3                             l1917 02BB  
                           l1909 02A5                             l1861 01FB                             l1853 01EA  
                           l1767 05BA                             l1847 0556                             l1839 0541  
                           l1687 0318                             l1679 05C9                             l1759 057E  
                           l1791 0406                             l1783 03F3                             l1775 03D2  
                           l1943 02FF                             l1935 02ED                             l1927 02DA  
                           l1919 02C1                             l1871 0216                             l1863 0202  
                           l1855 01ED                             l1769 05BC                             l1849 055C  
                           l1697 0321                             l1793 0414                             l1785 03F8  
                           l1777 03D4                             l1945 0305                             l1937 02F3  
                           l1929 02DD                             l1881 022F                             l1873 021B  
                           l1865 0207                             l1857 01F5                             l1795 0417  
                           l1787 03FB                             l1779 03E1                             l1891 0248  
                           l1883 0234                             l1875 0220                             l1867 020C  
                           l1859 01F8                             l1797 041D                             l1789 03FF  
                           l1885 0239                             l1877 0225                             l1869 0211  
                           l1893 024D                             l1799 0429                             l1895 0253  
                           l1887 023E                             l1879 022A                             l1897 0259  
                           l1889 0243                             l1899 025F                             l1999 0511  
                           STR_1 01E7                             _BRGH 0CF2                             _CREN 0CEC  
                           _FERR 0CEA                             u1310 03C1                             u1311 03C0  
                           u1320 03CF                             u1400 0440                             u1321 03CE  
                           u1305 036C                             u1401 043F                             u1250 053C  
                           u1330 058E                             u1410 04C2                             u1315 03BD  
                           u1251 053B                             u1331 058D                             u1411 04C1  
                           u1260 0318                             u1340 0574                             u1420 04E0  
                           u1500 0220                             u1325 03CB                             u1261 0317  
                           u1341 0573                             u1405 043C                             u1421 04DF  
                           u1501 021F                             u1430 0548                             u1270 0320  
                           u1350 03EE                             u1510 022A                             u1431 0547  
                           u1271 031F                             u1335 058A                             u1351 03ED  
                           u1511 0229                             u1360 03F8                             u1600 028F  
                           u1520 0234                             u1361 03F7                             u1425 04DC  
                           u1601 028E                             u1521 0233                             u1290 0359  
                           u1370 0406                             u1610 02AF                             u1530 023E  
                           u1291 0358                             u1371 0405                             u1355 03EA  
                           u1611 02AE                             u1531 023D                             u1460 055C  
                           u1380 0414                             u1700 02F3                             u1620 02B5  
                           u1540 0248                             u1461 055B                             u1445 054D  
                           u1285 0337                             u1381 0413                             u1701 02F2  
                           u1621 02B4                             u1541 0247                             u1390 041D  
                           u1710 02F8                             u1630 02BB                             u1550 0253  
                           u1470 0207                             u1455 0552                             u1391 041C  
                           u1711 02F7                             u1631 02BA                             u1551 0252  
                           u1471 0206                             u1720 02FF                             u1640 02C1  
                           u1560 0259                             u1480 020C                             u1385 0410  
                           u1721 02FE                             u1641 02C0                             u1561 0258  
                           u1481 020B                             u1730 0305                             u1650 02C7  
                           u1570 025F                             u1490 0216                             u1731 0304  
                           u1651 02C6                             u1571 025E                             u1491 0215  
                           u1740 030A                             u1660 02CD                             u1580 0265  
                           u1741 0309                             u1661 02CC                             u1581 0264  
                           u1670 02D3                             u1590 026B                             u1671 02D2  
                           u1591 026A                             u1680 02E3                             u1681 02E2  
                           u1690 02ED                             u1691 02EC                             u1757 03FC  
                           _PEIE 005E                             _RCIE 048D                             _RCIF 008D  
                           _OERR 0CE9                             _TXIE 048C                             _TXIF 008C  
               ??_uart_read_char 0044                             abs@a 0044                             _main 01EA  
                           fsr0h 0005                             fsr1h 0007                             indf0 0000  
                           fsr0l 0004                             indf1 0001                             fsr1l 0006  
                           _step 03D2                             btemp 007E                             start 000E  
              ?_uart_clock_setup 0044                            ??_ISR 0075                            ??_abs 0046  
             ??_uart_clock_setup 0045                  __end_of_Stepper 05C0                            ?_main 0070  
                          _BRG16 0CFB                            ?_step 0048                            i1l150 0489  
                          i1l156 04BA                            i1l166 047E                            i1l238 000C  
                          _RCREG 0199                            _SPBRG 019B                            u82_20 0484  
                          u82_21 0483                            u83_20 0489                            u83_21 0488  
                          u84_20 048E                            u84_21 048D                            u85_20 04AC  
                          u85_21 04AB                            u85_25 04A8                            u86_20 0448  
                          u86_21 0447                            u87_20 044D                            u87_21 044C  
                          u88_20 0453                            u88_21 0452                            u89_20 0470  
                          u89_21 046F                            _TXREG 019A                            u89_25 046C  
                          _comb1 0042                            _comb2 0041                            _comb3 0040  
                          _comb4 003F                            _comb5 003E                            _comb6 003D  
                          _comb7 003C                            _setup 059C                            status 0003  
                          wtemp0 007E                  __initialization 0010                     __end_of_main 030D  
                   __end_of_step 0443             _uart_transmit_buffer 0020                           ??_main 0059  
                         ??_step 004A                           ?_setup 0070                           i1l1441 0489  
                         i1l1451 04B4                           i1l1443 048E                           i1l1453 04B6  
                         i1l1445 0490                           i1l1437 047F                           i1l1461 0453  
                         i1l1533 0006                           i1l1447 0498                           i1l1439 0484  
                         i1l1471 047A                           i1l1463 0455                           i1l1455 0443  
                         i1l1449 04AC                           i1l1465 045C                           i1l1457 0448  
                         i1l1467 0470                           i1l1459 044D          uart_read_char@uart_char 0047  
                         i1l1469 0478                        ??_Stepper 0046                           ___wmul 0541  
                  main@uart_char 005F     __size_of_uart_handle_rcv_int 003C                     __pdataCOMMON 0078  
    __end_of_uart_reciever_setup 05D9               _uart_handle_tx_int 0443              ?_uart_handle_tx_int 0070  
        __end_of__initialization 0023                   __pcstackCOMMON 0070          _uart_handle_rcv_int$256 0073  
                  __end_of_setup 05B1             ??_uart_handle_tx_int 0070                          ??_setup 0059  
                     __pbssBANK0 0020                  _number_of_steps 0038                       __pmaintext 01EA  
                        ?___wmul 0044                stepMotor@thisStep 0044                _uart_flush_buffer 0520  
                     __pintentry 0004               ?_uart_flush_buffer 0070               __size_of_uart_init 001F  
                        _NEWLINE 0078              ??_uart_flush_buffer 0044        __size_of_uart_clock_setup 00C5  
             __size_of_stepMotor 002E                       _empty_comb 05C0        __end_of_uart_flush_buffer 0541  
                        _Stepper 05B1                  __size_of___wmul 0020                          __ptext1 04BB  
                        __ptext2 03D2                          __ptext3 04F2                          __ptext4 0580  
                        __ptext5 059C                          __ptext6 0561                          __ptext7 05C9  
                        __ptext8 0520                          __ptext9 05D9                     __size_of_ISR 000A  
                   __size_of_abs 001C         ??_uart_transmitter_setup 0044                          _stepvar 0034  
                        clrloop0 05E1             end_of_initialization 0023                _uart_recieve_head 0077  
              _uart_recieve_tail 0043              _uart_handle_rcv_int 047F                __end_of_uart_init 0580  
                  ?_uart_turnoff 0070                        _RCSTAbits 019D                __end_of_stepMotor 0520  
        __size_of_uart_read_char 0037                   step@steps_left 004B             ?_uart_handle_rcv_int 0070  
                     _spbr_array 0027              Stepper@num_of_steps 0044                        _TRISCbits 008E  
                      _TXSTAbits 019E                   ??_uart_turnoff 0046                      ?_empty_comb 0070  
     __size_of_uart_flush_buffer 0021               _uart_transmit_head 0076               _uart_transmit_tail 0075  
                 __end_of___wmul 0561                    __pidataCOMMON 05E6            ??_uart_handle_rcv_int 0070  
            start_initialization 0010                      __end_of_ISR 000E                 _uart_clock_setup 030D  
                    __end_of_abs 059C  __size_of_uart_transmitter_setup 0007     __size_of_uart_reciever_setup 0008  
              uart_clock_setup@b 0053                uart_clock_setup@c 0044                uart_clock_setup@i 0054  
                       ??___wmul 0048      __size_of_uart_handle_tx_int 003C                      __pbssCOMMON 0075  
                      ___latbits 0002                    __pcstackBANK0 0044              __size_of_empty_comb 0009  
         _uart_transmitter_setup 05D9                         ?_Stepper 0044                   _uart_read_char 04BB  
                      _direction 003A             __end_of_uart_turnoff 05D1           _uart_handle_tx_int$258 0073  
                 __size_of_setup 0015                   ___wmul@product 0048                         _LATCbits 010E  
                      clear_ram0 05E0           __end_of_uart_read_char 04F2                        _uart_init 0561  
                     uart_init@b 0058                       uart_init@c 0056               _uart_read_char$261 0048  
                      _stepMotor 04F2                ___wmul@multiplier 0044              _uart_recieve_buffer 002A  
                ?_uart_read_char 0070                     ??_empty_comb 0044         __end_of_uart_clock_setup 03D2  
                     ?_uart_init 0056                 __size_of_Stepper 000F              _uart_reciever_setup 05D1  
                     ?_stepMotor 0044                       _ANSELBbits 018D                         __ptext10 05D1  
                       __ptext11 030D                         __ptext12 05C0                         __ptext13 0541  
                       __ptext14 05B1                         __ptext16 0443                         __ptext17 047F  
             __end_of_empty_comb 05C9             ?_uart_reciever_setup 0070                step@steps_to_move 0048  
                  __size_of_main 0123                    __size_of_step 0071      __end_of_uart_handle_rcv_int 04BB  
                       int$flags 007E            __size_of_uart_turnoff 0008                         intlevel1 0000  
          ??_uart_reciever_setup 0044          ?_uart_transmitter_setup 0070               __end_of_spbr_array 01E7  
                     _OSCCONbits 0099                     _uart_turnoff 05C9                      ??_uart_init 0057  
     __end_of_uart_handle_tx_int 047F                    __pstringtext1 0027                    __pstringtext2 0000  
                    ??_stepMotor 0046   __end_of_uart_transmitter_setup 05E0  
