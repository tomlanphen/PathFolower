

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun May 09 17:01:23 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F1829
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F1829 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  008C                     	;# 
   100  008D                     	;# 
   101  008E                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  0111                     	;# 
   121  0112                     	;# 
   122  0113                     	;# 
   123  0114                     	;# 
   124  0115                     	;# 
   125  0116                     	;# 
   126  0117                     	;# 
   127  0118                     	;# 
   128  0119                     	;# 
   129  011A                     	;# 
   130  011B                     	;# 
   131  011D                     	;# 
   132  011E                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  018E                     	;# 
   136  0191                     	;# 
   137  0191                     	;# 
   138  0192                     	;# 
   139  0193                     	;# 
   140  0193                     	;# 
   141  0193                     	;# 
   142  0194                     	;# 
   143  0195                     	;# 
   144  0196                     	;# 
   145  0199                     	;# 
   146  019A                     	;# 
   147  019B                     	;# 
   148  019B                     	;# 
   149  019C                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019F                     	;# 
   153  020C                     	;# 
   154  020D                     	;# 
   155  020E                     	;# 
   156  0211                     	;# 
   157  0211                     	;# 
   158  0212                     	;# 
   159  0212                     	;# 
   160  0213                     	;# 
   161  0213                     	;# 
   162  0214                     	;# 
   163  0214                     	;# 
   164  0215                     	;# 
   165  0215                     	;# 
   166  0215                     	;# 
   167  0216                     	;# 
   168  0216                     	;# 
   169  0217                     	;# 
   170  0217                     	;# 
   171  0219                     	;# 
   172  021A                     	;# 
   173  021B                     	;# 
   174  021C                     	;# 
   175  021D                     	;# 
   176  021E                     	;# 
   177  021F                     	;# 
   178  0291                     	;# 
   179  0291                     	;# 
   180  0292                     	;# 
   181  0293                     	;# 
   182  0294                     	;# 
   183  0295                     	;# 
   184  0295                     	;# 
   185  0296                     	;# 
   186  0298                     	;# 
   187  0298                     	;# 
   188  0299                     	;# 
   189  029A                     	;# 
   190  029B                     	;# 
   191  029C                     	;# 
   192  029D                     	;# 
   193  029E                     	;# 
   194  0311                     	;# 
   195  0311                     	;# 
   196  0312                     	;# 
   197  0313                     	;# 
   198  0318                     	;# 
   199  0318                     	;# 
   200  0319                     	;# 
   201  031A                     	;# 
   202  038C                     	;# 
   203  038D                     	;# 
   204  038E                     	;# 
   205  0391                     	;# 
   206  0392                     	;# 
   207  0393                     	;# 
   208  0394                     	;# 
   209  0395                     	;# 
   210  0396                     	;# 
   211  039A                     	;# 
   212  039C                     	;# 
   213  039D                     	;# 
   214  039E                     	;# 
   215  039F                     	;# 
   216  0415                     	;# 
   217  0416                     	;# 
   218  0417                     	;# 
   219  041C                     	;# 
   220  041D                     	;# 
   221  041E                     	;# 
   222  0FE4                     	;# 
   223  0FE5                     	;# 
   224  0FE6                     	;# 
   225  0FE7                     	;# 
   226  0FE8                     	;# 
   227  0FE9                     	;# 
   228  0FEA                     	;# 
   229  0FEB                     	;# 
   230  0FED                     	;# 
   231  0FEE                     	;# 
   232  0FEF                     	;# 
   233  0000                     	;# 
   234  0001                     	;# 
   235  0002                     	;# 
   236  0003                     	;# 
   237  0004                     	;# 
   238  0005                     	;# 
   239  0006                     	;# 
   240  0007                     	;# 
   241  0008                     	;# 
   242  0009                     	;# 
   243  000A                     	;# 
   244  000B                     	;# 
   245  000C                     	;# 
   246  000D                     	;# 
   247  000E                     	;# 
   248  0011                     	;# 
   249  0012                     	;# 
   250  0013                     	;# 
   251  0014                     	;# 
   252  0015                     	;# 
   253  0016                     	;# 
   254  0016                     	;# 
   255  0017                     	;# 
   256  0018                     	;# 
   257  0019                     	;# 
   258  001A                     	;# 
   259  001B                     	;# 
   260  001C                     	;# 
   261  001E                     	;# 
   262  001F                     	;# 
   263  008C                     	;# 
   264  008D                     	;# 
   265  008E                     	;# 
   266  0091                     	;# 
   267  0092                     	;# 
   268  0093                     	;# 
   269  0094                     	;# 
   270  0095                     	;# 
   271  0096                     	;# 
   272  0097                     	;# 
   273  0098                     	;# 
   274  0099                     	;# 
   275  009A                     	;# 
   276  009B                     	;# 
   277  009B                     	;# 
   278  009C                     	;# 
   279  009D                     	;# 
   280  009E                     	;# 
   281  010C                     	;# 
   282  010D                     	;# 
   283  010E                     	;# 
   284  0111                     	;# 
   285  0112                     	;# 
   286  0113                     	;# 
   287  0114                     	;# 
   288  0115                     	;# 
   289  0116                     	;# 
   290  0117                     	;# 
   291  0118                     	;# 
   292  0119                     	;# 
   293  011A                     	;# 
   294  011B                     	;# 
   295  011D                     	;# 
   296  011E                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  018E                     	;# 
   300  0191                     	;# 
   301  0191                     	;# 
   302  0192                     	;# 
   303  0193                     	;# 
   304  0193                     	;# 
   305  0193                     	;# 
   306  0194                     	;# 
   307  0195                     	;# 
   308  0196                     	;# 
   309  0199                     	;# 
   310  019A                     	;# 
   311  019B                     	;# 
   312  019B                     	;# 
   313  019C                     	;# 
   314  019D                     	;# 
   315  019E                     	;# 
   316  019F                     	;# 
   317  020C                     	;# 
   318  020D                     	;# 
   319  020E                     	;# 
   320  0211                     	;# 
   321  0211                     	;# 
   322  0212                     	;# 
   323  0212                     	;# 
   324  0213                     	;# 
   325  0213                     	;# 
   326  0214                     	;# 
   327  0214                     	;# 
   328  0215                     	;# 
   329  0215                     	;# 
   330  0215                     	;# 
   331  0216                     	;# 
   332  0216                     	;# 
   333  0217                     	;# 
   334  0217                     	;# 
   335  0219                     	;# 
   336  021A                     	;# 
   337  021B                     	;# 
   338  021C                     	;# 
   339  021D                     	;# 
   340  021E                     	;# 
   341  021F                     	;# 
   342  0291                     	;# 
   343  0291                     	;# 
   344  0292                     	;# 
   345  0293                     	;# 
   346  0294                     	;# 
   347  0295                     	;# 
   348  0295                     	;# 
   349  0296                     	;# 
   350  0298                     	;# 
   351  0298                     	;# 
   352  0299                     	;# 
   353  029A                     	;# 
   354  029B                     	;# 
   355  029C                     	;# 
   356  029D                     	;# 
   357  029E                     	;# 
   358  0311                     	;# 
   359  0311                     	;# 
   360  0312                     	;# 
   361  0313                     	;# 
   362  0318                     	;# 
   363  0318                     	;# 
   364  0319                     	;# 
   365  031A                     	;# 
   366  038C                     	;# 
   367  038D                     	;# 
   368  038E                     	;# 
   369  0391                     	;# 
   370  0392                     	;# 
   371  0393                     	;# 
   372  0394                     	;# 
   373  0395                     	;# 
   374  0396                     	;# 
   375  039A                     	;# 
   376  039C                     	;# 
   377  039D                     	;# 
   378  039E                     	;# 
   379  039F                     	;# 
   380  0415                     	;# 
   381  0416                     	;# 
   382  0417                     	;# 
   383  041C                     	;# 
   384  041D                     	;# 
   385  041E                     	;# 
   386  0FE4                     	;# 
   387  0FE5                     	;# 
   388  0FE6                     	;# 
   389  0FE7                     	;# 
   390  0FE8                     	;# 
   391  0FE9                     	;# 
   392  0FEA                     	;# 
   393  0FEB                     	;# 
   394  0FED                     	;# 
   395  0FEE                     	;# 
   396  0FEF                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  0011                     	;# 
   413  0012                     	;# 
   414  0013                     	;# 
   415  0014                     	;# 
   416  0015                     	;# 
   417  0016                     	;# 
   418  0016                     	;# 
   419  0017                     	;# 
   420  0018                     	;# 
   421  0019                     	;# 
   422  001A                     	;# 
   423  001B                     	;# 
   424  001C                     	;# 
   425  001E                     	;# 
   426  001F                     	;# 
   427  008C                     	;# 
   428  008D                     	;# 
   429  008E                     	;# 
   430  0091                     	;# 
   431  0092                     	;# 
   432  0093                     	;# 
   433  0094                     	;# 
   434  0095                     	;# 
   435  0096                     	;# 
   436  0097                     	;# 
   437  0098                     	;# 
   438  0099                     	;# 
   439  009A                     	;# 
   440  009B                     	;# 
   441  009B                     	;# 
   442  009C                     	;# 
   443  009D                     	;# 
   444  009E                     	;# 
   445  010C                     	;# 
   446  010D                     	;# 
   447  010E                     	;# 
   448  0111                     	;# 
   449  0112                     	;# 
   450  0113                     	;# 
   451  0114                     	;# 
   452  0115                     	;# 
   453  0116                     	;# 
   454  0117                     	;# 
   455  0118                     	;# 
   456  0119                     	;# 
   457  011A                     	;# 
   458  011B                     	;# 
   459  011D                     	;# 
   460  011E                     	;# 
   461  018C                     	;# 
   462  018D                     	;# 
   463  018E                     	;# 
   464  0191                     	;# 
   465  0191                     	;# 
   466  0192                     	;# 
   467  0193                     	;# 
   468  0193                     	;# 
   469  0193                     	;# 
   470  0194                     	;# 
   471  0195                     	;# 
   472  0196                     	;# 
   473  0199                     	;# 
   474  019A                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019C                     	;# 
   478  019D                     	;# 
   479  019E                     	;# 
   480  019F                     	;# 
   481  020C                     	;# 
   482  020D                     	;# 
   483  020E                     	;# 
   484  0211                     	;# 
   485  0211                     	;# 
   486  0212                     	;# 
   487  0212                     	;# 
   488  0213                     	;# 
   489  0213                     	;# 
   490  0214                     	;# 
   491  0214                     	;# 
   492  0215                     	;# 
   493  0215                     	;# 
   494  0215                     	;# 
   495  0216                     	;# 
   496  0216                     	;# 
   497  0217                     	;# 
   498  0217                     	;# 
   499  0219                     	;# 
   500  021A                     	;# 
   501  021B                     	;# 
   502  021C                     	;# 
   503  021D                     	;# 
   504  021E                     	;# 
   505  021F                     	;# 
   506  0291                     	;# 
   507  0291                     	;# 
   508  0292                     	;# 
   509  0293                     	;# 
   510  0294                     	;# 
   511  0295                     	;# 
   512  0295                     	;# 
   513  0296                     	;# 
   514  0298                     	;# 
   515  0298                     	;# 
   516  0299                     	;# 
   517  029A                     	;# 
   518  029B                     	;# 
   519  029C                     	;# 
   520  029D                     	;# 
   521  029E                     	;# 
   522  0311                     	;# 
   523  0311                     	;# 
   524  0312                     	;# 
   525  0313                     	;# 
   526  0318                     	;# 
   527  0318                     	;# 
   528  0319                     	;# 
   529  031A                     	;# 
   530  038C                     	;# 
   531  038D                     	;# 
   532  038E                     	;# 
   533  0391                     	;# 
   534  0392                     	;# 
   535  0393                     	;# 
   536  0394                     	;# 
   537  0395                     	;# 
   538  0396                     	;# 
   539  039A                     	;# 
   540  039C                     	;# 
   541  039D                     	;# 
   542  039E                     	;# 
   543  039F                     	;# 
   544  0415                     	;# 
   545  0416                     	;# 
   546  0417                     	;# 
   547  041C                     	;# 
   548  041D                     	;# 
   549  041E                     	;# 
   550  0FE4                     	;# 
   551  0FE5                     	;# 
   552  0FE6                     	;# 
   553  0FE7                     	;# 
   554  0FE8                     	;# 
   555  0FE9                     	;# 
   556  0FEA                     	;# 
   557  0FEB                     	;# 
   558  0FED                     	;# 
   559  0FEE                     	;# 
   560  0FEF                     	;# 
   561  0000                     	;# 
   562  0001                     	;# 
   563  0002                     	;# 
   564  0003                     	;# 
   565  0004                     	;# 
   566  0005                     	;# 
   567  0006                     	;# 
   568  0007                     	;# 
   569  0008                     	;# 
   570  0009                     	;# 
   571  000A                     	;# 
   572  000B                     	;# 
   573  000C                     	;# 
   574  000D                     	;# 
   575  000E                     	;# 
   576  0011                     	;# 
   577  0012                     	;# 
   578  0013                     	;# 
   579  0014                     	;# 
   580  0015                     	;# 
   581  0016                     	;# 
   582  0016                     	;# 
   583  0017                     	;# 
   584  0018                     	;# 
   585  0019                     	;# 
   586  001A                     	;# 
   587  001B                     	;# 
   588  001C                     	;# 
   589  001E                     	;# 
   590  001F                     	;# 
   591  008C                     	;# 
   592  008D                     	;# 
   593  008E                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0093                     	;# 
   597  0094                     	;# 
   598  0095                     	;# 
   599  0096                     	;# 
   600  0097                     	;# 
   601  0098                     	;# 
   602  0099                     	;# 
   603  009A                     	;# 
   604  009B                     	;# 
   605  009B                     	;# 
   606  009C                     	;# 
   607  009D                     	;# 
   608  009E                     	;# 
   609  010C                     	;# 
   610  010D                     	;# 
   611  010E                     	;# 
   612  0111                     	;# 
   613  0112                     	;# 
   614  0113                     	;# 
   615  0114                     	;# 
   616  0115                     	;# 
   617  0116                     	;# 
   618  0117                     	;# 
   619  0118                     	;# 
   620  0119                     	;# 
   621  011A                     	;# 
   622  011B                     	;# 
   623  011D                     	;# 
   624  011E                     	;# 
   625  018C                     	;# 
   626  018D                     	;# 
   627  018E                     	;# 
   628  0191                     	;# 
   629  0191                     	;# 
   630  0192                     	;# 
   631  0193                     	;# 
   632  0193                     	;# 
   633  0193                     	;# 
   634  0194                     	;# 
   635  0195                     	;# 
   636  0196                     	;# 
   637  0199                     	;# 
   638  019A                     	;# 
   639  019B                     	;# 
   640  019B                     	;# 
   641  019C                     	;# 
   642  019D                     	;# 
   643  019E                     	;# 
   644  019F                     	;# 
   645  020C                     	;# 
   646  020D                     	;# 
   647  020E                     	;# 
   648  0211                     	;# 
   649  0211                     	;# 
   650  0212                     	;# 
   651  0212                     	;# 
   652  0213                     	;# 
   653  0213                     	;# 
   654  0214                     	;# 
   655  0214                     	;# 
   656  0215                     	;# 
   657  0215                     	;# 
   658  0215                     	;# 
   659  0216                     	;# 
   660  0216                     	;# 
   661  0217                     	;# 
   662  0217                     	;# 
   663  0219                     	;# 
   664  021A                     	;# 
   665  021B                     	;# 
   666  021C                     	;# 
   667  021D                     	;# 
   668  021E                     	;# 
   669  021F                     	;# 
   670  0291                     	;# 
   671  0291                     	;# 
   672  0292                     	;# 
   673  0293                     	;# 
   674  0294                     	;# 
   675  0295                     	;# 
   676  0295                     	;# 
   677  0296                     	;# 
   678  0298                     	;# 
   679  0298                     	;# 
   680  0299                     	;# 
   681  029A                     	;# 
   682  029B                     	;# 
   683  029C                     	;# 
   684  029D                     	;# 
   685  029E                     	;# 
   686  0311                     	;# 
   687  0311                     	;# 
   688  0312                     	;# 
   689  0313                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  038C                     	;# 
   695  038D                     	;# 
   696  038E                     	;# 
   697  0391                     	;# 
   698  0392                     	;# 
   699  0393                     	;# 
   700  0394                     	;# 
   701  0395                     	;# 
   702  0396                     	;# 
   703  039A                     	;# 
   704  039C                     	;# 
   705  039D                     	;# 
   706  039E                     	;# 
   707  039F                     	;# 
   708  0415                     	;# 
   709  0416                     	;# 
   710  0417                     	;# 
   711  041C                     	;# 
   712  041D                     	;# 
   713  041E                     	;# 
   714  0FE4                     	;# 
   715  0FE5                     	;# 
   716  0FE6                     	;# 
   717  0FE7                     	;# 
   718  0FE8                     	;# 
   719  0FE9                     	;# 
   720  0FEA                     	;# 
   721  0FEB                     	;# 
   722  0FED                     	;# 
   723  0FEE                     	;# 
   724  0FEF                     	;# 
   725                           
   726                           	psect	idataCOMMON
   727  05DF                     __pidataCOMMON:
   728                           
   729                           ;initializer for _NEWLINE
   730  05DF  34E7               	retlw	low (STR_1| (0+32768))
   731  05E0  3481               	retlw	high (STR_1| (0+32768))
   732                           
   733                           	psect	stringtext1
   734  0027                     __pstringtext1:
   735  0027                     _spbr_array:
   736  0027  3419               	retlw	25
   737  0028  3400               	retlw	0
   738  0029  3467               	retlw	103
   739  002A  3400               	retlw	0
   740  002B  3467               	retlw	103
   741  002C  3400               	retlw	0
   742  002D  34A0               	retlw	160
   743  002E  3401               	retlw	1
   744  002F  3400               	retlw	0
   745  0030  3400               	retlw	0
   746  0031  3419               	retlw	25
   747  0032  3400               	retlw	0
   748  0033  3419               	retlw	25
   749  0034  3400               	retlw	0
   750  0035  3467               	retlw	103
   751  0036  3400               	retlw	0
   752  0037  3400               	retlw	0
   753  0038  3400               	retlw	0
   754  0039  340C               	retlw	12
   755  003A  3400               	retlw	0
   756  003B  340C               	retlw	12
   757  003C  3400               	retlw	0
   758  003D  3433               	retlw	51
   759  003E  3400               	retlw	0
   760  003F  3400               	retlw	0
   761  0040  3400               	retlw	0
   762  0041  3400               	retlw	0
   763  0042  3400               	retlw	0
   764  0043  3400               	retlw	0
   765  0044  3400               	retlw	0
   766  0045  340C               	retlw	12
   767  0046  3400               	retlw	0
   768  0047  3400               	retlw	0
   769  0048  3400               	retlw	0
   770  0049  3402               	retlw	2
   771  004A  3400               	retlw	0
   772  004B  3402               	retlw	2
   773  004C  3400               	retlw	0
   774  004D  340B               	retlw	11
   775  004E  3400               	retlw	0
   776  004F  3400               	retlw	0
   777  0050  3400               	retlw	0
   778  0051  3400               	retlw	0
   779  0052  3400               	retlw	0
   780  0053  3400               	retlw	0
   781  0054  3400               	retlw	0
   782  0055  3400               	retlw	0
   783  0056  3400               	retlw	0
   784  0057  3400               	retlw	0
   785  0058  3400               	retlw	0
   786  0059  3400               	retlw	0
   787  005A  3400               	retlw	0
   788  005B  3400               	retlw	0
   789  005C  3400               	retlw	0
   790  005D  3400               	retlw	0
   791  005E  3400               	retlw	0
   792  005F  3400               	retlw	0
   793  0060  3400               	retlw	0
   794  0061  3400               	retlw	0
   795  0062  3400               	retlw	0
   796  0063  3400               	retlw	0
   797  0064  3400               	retlw	0
   798  0065  3400               	retlw	0
   799  0066  3400               	retlw	0
   800  0067  3433               	retlw	51
   801  0068  3400               	retlw	0
   802  0069  34CF               	retlw	207
   803  006A  3400               	retlw	0
   804  006B  34CF               	retlw	207
   805  006C  3400               	retlw	0
   806  006D  3440               	retlw	64
   807  006E  3403               	retlw	3
   808  006F  340C               	retlw	12
   809  0070  3400               	retlw	0
   810  0071  3433               	retlw	51
   811  0072  3400               	retlw	0
   812  0073  3433               	retlw	51
   813  0074  3400               	retlw	0
   814  0075  34CF               	retlw	207
   815  0076  3400               	retlw	0
   816  0077  3400               	retlw	0
   817  0078  3400               	retlw	0
   818  0079  3419               	retlw	25
   819  007A  3400               	retlw	0
   820  007B  3419               	retlw	25
   821  007C  3400               	retlw	0
   822  007D  3467               	retlw	103
   823  007E  3400               	retlw	0
   824  007F  3400               	retlw	0
   825  0080  3400               	retlw	0
   826  0081  3400               	retlw	0
   827  0082  3400               	retlw	0
   828  0083  3400               	retlw	0
   829  0084  3400               	retlw	0
   830  0085  3419               	retlw	25
   831  0086  3400               	retlw	0
   832  0087  3400               	retlw	0
   833  0088  3400               	retlw	0
   834  0089  3405               	retlw	5
   835  008A  3400               	retlw	0
   836  008B  3405               	retlw	5
   837  008C  3400               	retlw	0
   838  008D  3417               	retlw	23
   839  008E  3400               	retlw	0
   840  008F  3400               	retlw	0
   841  0090  3400               	retlw	0
   842  0091  3400               	retlw	0
   843  0092  3400               	retlw	0
   844  0093  3400               	retlw	0
   845  0094  3400               	retlw	0
   846  0095  340C               	retlw	12
   847  0096  3400               	retlw	0
   848  0097  3400               	retlw	0
   849  0098  3400               	retlw	0
   850  0099  3400               	retlw	0
   851  009A  3400               	retlw	0
   852  009B  3400               	retlw	0
   853  009C  3400               	retlw	0
   854  009D  3400               	retlw	0
   855  009E  3400               	retlw	0
   856  009F  3400               	retlw	0
   857  00A0  3400               	retlw	0
   858  00A1  3400               	retlw	0
   859  00A2  3400               	retlw	0
   860  00A3  3400               	retlw	0
   861  00A4  3400               	retlw	0
   862  00A5  3400               	retlw	0
   863  00A6  3400               	retlw	0
   864  00A7  3467               	retlw	103
   865  00A8  3400               	retlw	0
   866  00A9  3400               	retlw	0
   867  00AA  3400               	retlw	0
   868  00AB  34A0               	retlw	160
   869  00AC  3401               	retlw	1
   870  00AD  3482               	retlw	130
   871  00AE  3406               	retlw	6
   872  00AF  3419               	retlw	25
   873  00B0  3400               	retlw	0
   874  00B1  3467               	retlw	103
   875  00B2  3400               	retlw	0
   876  00B3  3467               	retlw	103
   877  00B4  3400               	retlw	0
   878  00B5  34A0               	retlw	160
   879  00B6  3401               	retlw	1
   880  00B7  340C               	retlw	12
   881  00B8  3400               	retlw	0
   882  00B9  3433               	retlw	51
   883  00BA  3400               	retlw	0
   884  00BB  3433               	retlw	51
   885  00BC  3400               	retlw	0
   886  00BD  34CF               	retlw	207
   887  00BE  3400               	retlw	0
   888  00BF  3400               	retlw	0
   889  00C0  3400               	retlw	0
   890  00C1  340C               	retlw	12
   891  00C2  3400               	retlw	0
   892  00C3  340C               	retlw	12
   893  00C4  3400               	retlw	0
   894  00C5  3433               	retlw	51
   895  00C6  3400               	retlw	0
   896  00C7  3402               	retlw	2
   897  00C8  3400               	retlw	0
   898  00C9  340B               	retlw	11
   899  00CA  3400               	retlw	0
   900  00CB  340B               	retlw	11
   901  00CC  3400               	retlw	0
   902  00CD  342F               	retlw	47
   903  00CE  3400               	retlw	0
   904  00CF  3400               	retlw	0
   905  00D0  3400               	retlw	0
   906  00D1  3400               	retlw	0
   907  00D2  3400               	retlw	0
   908  00D3  3400               	retlw	0
   909  00D4  3400               	retlw	0
   910  00D5  3419               	retlw	25
   911  00D6  3400               	retlw	0
   912  00D7  3400               	retlw	0
   913  00D8  3400               	retlw	0
   914  00D9  3400               	retlw	0
   915  00DA  3400               	retlw	0
   916  00DB  3400               	retlw	0
   917  00DC  3400               	retlw	0
   918  00DD  3400               	retlw	0
   919  00DE  3400               	retlw	0
   920  00DF  3400               	retlw	0
   921  00E0  3400               	retlw	0
   922  00E1  3400               	retlw	0
   923  00E2  3400               	retlw	0
   924  00E3  3400               	retlw	0
   925  00E4  3400               	retlw	0
   926  00E5  3400               	retlw	0
   927  00E6  3400               	retlw	0
   928  00E7  34CF               	retlw	207
   929  00E8  3400               	retlw	0
   930  00E9  3400               	retlw	0
   931  00EA  3400               	retlw	0
   932  00EB  3440               	retlw	64
   933  00EC  3403               	retlw	3
   934  00ED  3404               	retlw	4
   935  00EE  340D               	retlw	13
   936  00EF  3433               	retlw	51
   937  00F0  3400               	retlw	0
   938  00F1  34CF               	retlw	207
   939  00F2  3400               	retlw	0
   940  00F3  34CF               	retlw	207
   941  00F4  3400               	retlw	0
   942  00F5  3440               	retlw	64
   943  00F6  3403               	retlw	3
   944  00F7  3419               	retlw	25
   945  00F8  3400               	retlw	0
   946  00F9  3467               	retlw	103
   947  00FA  3400               	retlw	0
   948  00FB  3467               	retlw	103
   949  00FC  3400               	retlw	0
   950  00FD  34A0               	retlw	160
   951  00FE  3401               	retlw	1
   952  00FF  3400               	retlw	0
   953  0100  3400               	retlw	0
   954  0101  3419               	retlw	25
   955  0102  3400               	retlw	0
   956  0103  3419               	retlw	25
   957  0104  3400               	retlw	0
   958  0105  3467               	retlw	103
   959  0106  3400               	retlw	0
   960  0107  3405               	retlw	5
   961  0108  3400               	retlw	0
   962  0109  3417               	retlw	23
   963  010A  3400               	retlw	0
   964  010B  3417               	retlw	23
   965  010C  3400               	retlw	0
   966  010D  345F               	retlw	95
   967  010E  3400               	retlw	0
   968  010F  3400               	retlw	0
   969  0110  3400               	retlw	0
   970  0111  340C               	retlw	12
   971  0112  3400               	retlw	0
   972  0113  340C               	retlw	12
   973  0114  3400               	retlw	0
   974  0115  3433               	retlw	51
   975  0116  3400               	retlw	0
   976  0117  3400               	retlw	0
   977  0118  3400               	retlw	0
   978  0119  3400               	retlw	0
   979  011A  3400               	retlw	0
   980  011B  3400               	retlw	0
   981  011C  3400               	retlw	0
   982  011D  3400               	retlw	0
   983  011E  3400               	retlw	0
   984  011F  3400               	retlw	0
   985  0120  3400               	retlw	0
   986  0121  3400               	retlw	0
   987  0122  3400               	retlw	0
   988  0123  3400               	retlw	0
   989  0124  3400               	retlw	0
   990  0125  3400               	retlw	0
   991  0126  3400               	retlw	0
   992  0127  3400               	retlw	0
   993  0128  3400               	retlw	0
   994  0129  3400               	retlw	0
   995  012A  3400               	retlw	0
   996  012B  3482               	retlw	130
   997  012C  3406               	retlw	6
   998  012D  340A               	retlw	10
   999  012E  341A               	retlw	26
  1000  012F  3467               	retlw	103
  1001  0130  3400               	retlw	0
  1002  0131  3400               	retlw	0
  1003  0132  3400               	retlw	0
  1004  0133  34A0               	retlw	160
  1005  0134  3401               	retlw	1
  1006  0135  3482               	retlw	130
  1007  0136  3406               	retlw	6
  1008  0137  3433               	retlw	51
  1009  0138  3400               	retlw	0
  1010  0139  34CF               	retlw	207
  1011  013A  3400               	retlw	0
  1012  013B  34CF               	retlw	207
  1013  013C  3400               	retlw	0
  1014  013D  3440               	retlw	64
  1015  013E  3403               	retlw	3
  1016  013F  340C               	retlw	12
  1017  0140  3400               	retlw	0
  1018  0141  3433               	retlw	51
  1019  0142  3400               	retlw	0
  1020  0143  3433               	retlw	51
  1021  0144  3400               	retlw	0
  1022  0145  34CF               	retlw	207
  1023  0146  3400               	retlw	0
  1024  0147  340B               	retlw	11
  1025  0148  3400               	retlw	0
  1026  0149  342F               	retlw	47
  1027  014A  3400               	retlw	0
  1028  014B  342F               	retlw	47
  1029  014C  3400               	retlw	0
  1030  014D  34BF               	retlw	191
  1031  014E  3400               	retlw	0
  1032  014F  3400               	retlw	0
  1033  0150  3400               	retlw	0
  1034  0151  3419               	retlw	25
  1035  0152  3400               	retlw	0
  1036  0153  3419               	retlw	25
  1037  0154  3400               	retlw	0
  1038  0155  3467               	retlw	103
  1039  0156  3400               	retlw	0
  1040  0157  3400               	retlw	0
  1041  0158  3400               	retlw	0
  1042  0159  3400               	retlw	0
  1043  015A  3400               	retlw	0
  1044  015B  3400               	retlw	0
  1045  015C  3400               	retlw	0
  1046  015D  3422               	retlw	34
  1047  015E  3400               	retlw	0
  1048  015F  3400               	retlw	0
  1049  0160  3400               	retlw	0
  1050  0161  3400               	retlw	0
  1051  0162  3400               	retlw	0
  1052  0163  3400               	retlw	0
  1053  0164  3400               	retlw	0
  1054  0165  3400               	retlw	0
  1055  0166  3400               	retlw	0
  1056  0167  3400               	retlw	0
  1057  0168  3400               	retlw	0
  1058  0169  3400               	retlw	0
  1059  016A  3400               	retlw	0
  1060  016B  3404               	retlw	4
  1061  016C  340D               	retlw	13
  1062  016D  3414               	retlw	20
  1063  016E  3434               	retlw	52
  1064  016F  34CF               	retlw	207
  1065  0170  3400               	retlw	0
  1066  0171  3400               	retlw	0
  1067  0172  3400               	retlw	0
  1068  0173  3440               	retlw	64
  1069  0174  3403               	retlw	3
  1070  0175  3404               	retlw	4
  1071  0176  340D               	retlw	13
  1072  0177  3467               	retlw	103
  1073  0178  3400               	retlw	0
  1074  0179  3400               	retlw	0
  1075  017A  3400               	retlw	0
  1076  017B  34A0               	retlw	160
  1077  017C  3401               	retlw	1
  1078  017D  3482               	retlw	130
  1079  017E  3406               	retlw	6
  1080  017F  3419               	retlw	25
  1081  0180  3400               	retlw	0
  1082  0181  3467               	retlw	103
  1083  0182  3400               	retlw	0
  1084  0183  3467               	retlw	103
  1085  0184  3400               	retlw	0
  1086  0185  34A0               	retlw	160
  1087  0186  3401               	retlw	1
  1088  0187  3417               	retlw	23
  1089  0188  3400               	retlw	0
  1090  0189  345F               	retlw	95
  1091  018A  3400               	retlw	0
  1092  018B  345F               	retlw	95
  1093  018C  3400               	retlw	0
  1094  018D  347F               	retlw	127
  1095  018E  3401               	retlw	1
  1096  018F  340C               	retlw	12
  1097  0190  3400               	retlw	0
  1098  0191  3433               	retlw	51
  1099  0192  3400               	retlw	0
  1100  0193  3433               	retlw	51
  1101  0194  3400               	retlw	0
  1102  0195  34CF               	retlw	207
  1103  0196  3400               	retlw	0
  1104  0197  3400               	retlw	0
  1105  0198  3400               	retlw	0
  1106  0199  3400               	retlw	0
  1107  019A  3400               	retlw	0
  1108  019B  3400               	retlw	0
  1109  019C  3400               	retlw	0
  1110  019D  3444               	retlw	68
  1111  019E  3400               	retlw	0
  1112  019F  3400               	retlw	0
  1113  01A0  3400               	retlw	0
  1114  01A1  3400               	retlw	0
  1115  01A2  3400               	retlw	0
  1116  01A3  3400               	retlw	0
  1117  01A4  3400               	retlw	0
  1118  01A5  3422               	retlw	34
  1119  01A6  3400               	retlw	0
  1120  01A7  3400               	retlw	0
  1121  01A8  3400               	retlw	0
  1122  01A9  3400               	retlw	0
  1123  01AA  3400               	retlw	0
  1124  01AB  340A               	retlw	10
  1125  01AC  341A               	retlw	26
  1126  01AD  342A               	retlw	42
  1127  01AE  3468               	retlw	104
  1128  01AF  3400               	retlw	0
  1129  01B0  3400               	retlw	0
  1130  01B1  3400               	retlw	0
  1131  01B2  3400               	retlw	0
  1132  01B3  3482               	retlw	130
  1133  01B4  3406               	retlw	6
  1134  01B5  340A               	retlw	10
  1135  01B6  341A               	retlw	26
  1136  01B7  34CF               	retlw	207
  1137  01B8  3400               	retlw	0
  1138  01B9  3400               	retlw	0
  1139  01BA  3400               	retlw	0
  1140  01BB  3440               	retlw	64
  1141  01BC  3403               	retlw	3
  1142  01BD  3404               	retlw	4
  1143  01BE  340D               	retlw	13
  1144  01BF  3433               	retlw	51
  1145  01C0  3400               	retlw	0
  1146  01C1  34CF               	retlw	207
  1147  01C2  3400               	retlw	0
  1148  01C3  34CF               	retlw	207
  1149  01C4  3400               	retlw	0
  1150  01C5  3440               	retlw	64
  1151  01C6  3403               	retlw	3
  1152  01C7  342F               	retlw	47
  1153  01C8  3400               	retlw	0
  1154  01C9  34BF               	retlw	191
  1155  01CA  3400               	retlw	0
  1156  01CB  34BF               	retlw	191
  1157  01CC  3400               	retlw	0
  1158  01CD  34FF               	retlw	255
  1159  01CE  3402               	retlw	2
  1160  01CF  3419               	retlw	25
  1161  01D0  3400               	retlw	0
  1162  01D1  3467               	retlw	103
  1163  01D2  3400               	retlw	0
  1164  01D3  3467               	retlw	103
  1165  01D4  3400               	retlw	0
  1166  01D5  34A0               	retlw	160
  1167  01D6  3401               	retlw	1
  1168  01D7  3400               	retlw	0
  1169  01D8  3400               	retlw	0
  1170  01D9  3422               	retlw	34
  1171  01DA  3400               	retlw	0
  1172  01DB  3422               	retlw	34
  1173  01DC  3400               	retlw	0
  1174  01DD  348A               	retlw	138
  1175  01DE  3400               	retlw	0
  1176  01DF  3400               	retlw	0
  1177  01E0  3400               	retlw	0
  1178  01E1  3400               	retlw	0
  1179  01E2  3400               	retlw	0
  1180  01E3  3400               	retlw	0
  1181  01E4  3400               	retlw	0
  1182  01E5  3444               	retlw	68
  1183  01E6  3400               	retlw	0
  1184  01E7                     __end_of_spbr_array:
  1185  005E                     _PEIE	set	94
  1186  005F                     _GIE	set	95
  1187  008C                     _TXIF	set	140
  1188  008D                     _RCIF	set	141
  1189  0099                     _OSCCONbits	set	153
  1190  008E                     _TRISCbits	set	142
  1191  048D                     _RCIE	set	1165
  1192  048C                     _TXIE	set	1164
  1193  010E                     _LATCbits	set	270
  1194  019B                     _SPBRG	set	411
  1195  019A                     _TXREG	set	410
  1196  0199                     _RCREG	set	409
  1197  018D                     _ANSELBbits	set	397
  1198  019E                     _TXSTAbits	set	414
  1199  019D                     _RCSTAbits	set	413
  1200  0CEC                     _CREN	set	3308
  1201  0CE9                     _OERR	set	3305
  1202  0CEA                     _FERR	set	3306
  1203  0CFB                     _BRG16	set	3323
  1204  0CF2                     _BRGH	set	3314
  1205  01E7                     STR_1:
  1206  01E7  340D               	retlw	13
  1207  01E8  340A               	retlw	10
  1208  01E9  3400               	retlw	0
  1209                           
  1210                           	psect	stringtext2
  1211  0000                     __pstringtext2:
  1212                           
  1213                           	psect	cinit
  1214  0010                     start_initialization:	
  1215                           ; #config settings
  1216                           
  1217  0010                     __initialization:
  1218                           
  1219                           ; Initialize objects allocated to COMMON
  1220  0010  3185  25DF  3180   	fcall	__pidataCOMMON	;fetch initializer
  1221  0013  00F8               	movwf	__pdataCOMMON& (0+127)
  1222  0014  3185  25E0  3180   	fcall	__pidataCOMMON+1	;fetch initializer
  1223  0017  00F9               	movwf	(__pdataCOMMON+1)& (0+127)
  1224                           
  1225                           ; Clear objects allocated to COMMON
  1226  0018  01F5               	clrf	__pbssCOMMON& (0+127)
  1227  0019  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
  1228  001A  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
  1229                           
  1230                           ; Clear objects allocated to BANK0
  1231  001B  3020               	movlw	low __pbssBANK0
  1232  001C  0084               	movwf	4
  1233  001D  3000               	movlw	high __pbssBANK0
  1234  001E  0085               	movwf	5
  1235  001F  3024               	movlw	36
  1236  0020  3185  25D9  3180   	fcall	clear_ram0
  1237  0023                     end_of_initialization:	
  1238                           ;End of C runtime variable initialization code
  1239                           
  1240  0023                     __end_of__initialization:
  1241  0023  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1242  0024  0020               	movlb	0
  1243  0025  3181  29EA         	ljmp	_main	;jump to C main() function
  1244                           
  1245                           	psect	bssCOMMON
  1246  0075                     __pbssCOMMON:
  1247  0075                     _uart_transmit_tail:
  1248  0075                     	ds	1
  1249  0076                     _uart_transmit_head:
  1250  0076                     	ds	1
  1251  0077                     _uart_recieve_head:
  1252  0077                     	ds	1
  1253                           
  1254                           	psect	dataCOMMON
  1255  0078                     __pdataCOMMON:
  1256  0078                     _NEWLINE:
  1257  0078                     	ds	2
  1258                           
  1259                           	psect	bssBANK0
  1260  0020                     __pbssBANK0:
  1261  0020                     _uart_transmit_buffer:
  1262  0020                     	ds	10
  1263  002A                     _uart_recieve_buffer:
  1264  002A                     	ds	10
  1265  0034                     _stepvar:
  1266  0034                     	ds	2
  1267  0036                     _step_number:
  1268  0036                     	ds	2
  1269  0038                     _number_of_steps:
  1270  0038                     	ds	2
  1271  003A                     _direction:
  1272  003A                     	ds	2
  1273  003C                     _comb7:
  1274  003C                     	ds	1
  1275  003D                     _comb6:
  1276  003D                     	ds	1
  1277  003E                     _comb5:
  1278  003E                     	ds	1
  1279  003F                     _comb4:
  1280  003F                     	ds	1
  1281  0040                     _comb3:
  1282  0040                     	ds	1
  1283  0041                     _comb2:
  1284  0041                     	ds	1
  1285  0042                     _comb1:
  1286  0042                     	ds	1
  1287  0043                     _uart_recieve_tail:
  1288  0043                     	ds	1
  1289                           
  1290                           	psect	clrtext
  1291  05D9                     clear_ram0:	
  1292                           ;	Called with FSR0 containing the base address, and
  1293                           ;	WREG with the size to clear
  1294                           
  1295  05D9  0064               	clrwdt	;clear the watchdog before getting into this loop
  1296  05DA                     clrloop0:
  1297  05DA  0180               	clrf	0	;clear RAM location pointed to by FSR
  1298  05DB  3101               	addfsr 0,1
  1299  05DC  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  1300  05DD  2DDA               	goto	clrloop0	;have we reached the end yet?
  1301  05DE  3400               	retlw	0	;all done for this memory range, return
  1302                           
  1303                           	psect	cstackCOMMON
  1304  0070                     __pcstackCOMMON:
  1305  0070                     ?_uart_turnoff:
  1306  0070                     ?_uart_transmitter_setup:	
  1307                           ; 1 bytes @ 0x0
  1308                           
  1309  0070                     ?_uart_reciever_setup:	
  1310                           ; 1 bytes @ 0x0
  1311                           
  1312  0070                     ?_uart_flush_buffer:	
  1313                           ; 1 bytes @ 0x0
  1314                           
  1315  0070                     ?_setup:	
  1316                           ; 1 bytes @ 0x0
  1317                           
  1318  0070                     ?_empty_comb:	
  1319                           ; 1 bytes @ 0x0
  1320                           
  1321  0070                     ?_uart_handle_rcv_int:	
  1322                           ; 1 bytes @ 0x0
  1323                           
  1324  0070                     ??_uart_handle_rcv_int:	
  1325                           ; 1 bytes @ 0x0
  1326                           
  1327  0070                     ?_uart_handle_tx_int:	
  1328                           ; 1 bytes @ 0x0
  1329                           
  1330  0070                     ??_uart_handle_tx_int:	
  1331                           ; 1 bytes @ 0x0
  1332                           
  1333  0070                     ?_uart_read_char:	
  1334                           ; 1 bytes @ 0x0
  1335                           
  1336  0070                     ?_ISR:	
  1337                           ; 1 bytes @ 0x0
  1338                           
  1339  0070                     ?_main:	
  1340                           ; 1 bytes @ 0x0
  1341                           
  1342                           
  1343                           ; 1 bytes @ 0x0
  1344  0070                     	ds	3
  1345  0073                     _uart_handle_rcv_int$256:
  1346  0073                     _uart_handle_tx_int$258:	
  1347                           ; 2 bytes @ 0x3
  1348                           
  1349                           
  1350                           ; 2 bytes @ 0x3
  1351  0073                     	ds	2
  1352  0075                     ??_ISR:
  1353                           
  1354                           	psect	cstackBANK0
  1355  0044                     __pcstackBANK0:	
  1356                           ; 1 bytes @ 0x5
  1357                           
  1358  0044                     ?_stepMotor:
  1359  0044                     ?_uart_clock_setup:	
  1360                           ; 1 bytes @ 0x0
  1361                           
  1362  0044                     ??_uart_transmitter_setup:	
  1363                           ; 1 bytes @ 0x0
  1364                           
  1365  0044                     ??_uart_reciever_setup:	
  1366                           ; 1 bytes @ 0x0
  1367                           
  1368  0044                     ??_uart_flush_buffer:	
  1369                           ; 1 bytes @ 0x0
  1370                           
  1371  0044                     ??_empty_comb:	
  1372                           ; 1 bytes @ 0x0
  1373                           
  1374  0044                     ?_Stepper:	
  1375                           ; 1 bytes @ 0x0
  1376                           
  1377  0044                     ??_uart_read_char:	
  1378                           ; 1 bytes @ 0x0
  1379                           
  1380  0044                     ?_abs:	
  1381                           ; 1 bytes @ 0x0
  1382                           
  1383  0044                     ?___wmul:	
  1384                           ; 2 bytes @ 0x0
  1385                           
  1386  0044                     uart_clock_setup@c:	
  1387                           ; 2 bytes @ 0x0
  1388                           
  1389  0044                     Stepper@num_of_steps:	
  1390                           ; 1 bytes @ 0x0
  1391                           
  1392  0044                     stepMotor@thisStep:	
  1393                           ; 2 bytes @ 0x0
  1394                           
  1395  0044                     uart_flush_buffer@i:	
  1396                           ; 2 bytes @ 0x0
  1397                           
  1398  0044                     ___wmul@multiplier:	
  1399                           ; 2 bytes @ 0x0
  1400                           
  1401  0044                     abs@a:	
  1402                           ; 2 bytes @ 0x0
  1403                           
  1404                           
  1405                           ; 2 bytes @ 0x0
  1406  0044                     	ds	1
  1407  0045                     ??_uart_clock_setup:
  1408                           
  1409                           ; 1 bytes @ 0x1
  1410  0045                     	ds	1
  1411  0046                     ??_abs:
  1412  0046                     ??_stepMotor:	
  1413                           ; 1 bytes @ 0x2
  1414                           
  1415  0046                     ??_uart_turnoff:	
  1416                           ; 1 bytes @ 0x2
  1417                           
  1418  0046                     ??_Stepper:	
  1419                           ; 1 bytes @ 0x2
  1420                           
  1421  0046                     ___wmul@multiplicand:	
  1422                           ; 1 bytes @ 0x2
  1423                           
  1424                           
  1425                           ; 2 bytes @ 0x2
  1426  0046                     	ds	1
  1427  0047                     uart_read_char@uart_char:
  1428                           
  1429                           ; 1 bytes @ 0x3
  1430  0047                     	ds	1
  1431  0048                     ?_step:
  1432  0048                     ??___wmul:	
  1433                           ; 1 bytes @ 0x4
  1434                           
  1435  0048                     step@steps_to_move:	
  1436                           ; 1 bytes @ 0x4
  1437                           
  1438  0048                     _uart_read_char$261:	
  1439                           ; 2 bytes @ 0x4
  1440                           
  1441  0048                     ___wmul@product:	
  1442                           ; 2 bytes @ 0x4
  1443                           
  1444                           
  1445                           ; 2 bytes @ 0x4
  1446  0048                     	ds	2
  1447  004A                     ??_step:
  1448                           
  1449                           ; 1 bytes @ 0x6
  1450  004A                     	ds	1
  1451  004B                     step@steps_left:
  1452                           
  1453                           ; 2 bytes @ 0x7
  1454  004B                     	ds	8
  1455  0053                     uart_clock_setup@b:
  1456                           
  1457                           ; 1 bytes @ 0xF
  1458  0053                     	ds	1
  1459  0054                     uart_clock_setup@i:
  1460                           
  1461                           ; 2 bytes @ 0x10
  1462  0054                     	ds	2
  1463  0056                     ?_uart_init:
  1464  0056                     uart_init@c:	
  1465                           ; 1 bytes @ 0x12
  1466                           
  1467                           
  1468                           ; 1 bytes @ 0x12
  1469  0056                     	ds	1
  1470  0057                     ??_uart_init:
  1471                           
  1472                           ; 1 bytes @ 0x13
  1473  0057                     	ds	1
  1474  0058                     uart_init@b:
  1475                           
  1476                           ; 1 bytes @ 0x14
  1477  0058                     	ds	1
  1478  0059                     ??_setup:
  1479  0059                     ??_main:	
  1480                           ; 1 bytes @ 0x15
  1481                           
  1482                           
  1483                           ; 1 bytes @ 0x15
  1484  0059                     	ds	6
  1485  005F                     main@uart_char:
  1486                           
  1487                           ; 1 bytes @ 0x1B
  1488  005F                     	ds	1
  1489                           
  1490                           	psect	maintext
  1491  01EA                     __pmaintext:	
  1492 ;;
  1493 ;;Main: autosize = 0, tempsize = 6, incstack = 0, save=0
  1494 ;;
  1495 ;; *************** function _main *****************
  1496 ;; Defined at:
  1497 ;;		line 33 in file "LV.c"
  1498 ;; Parameters:    Size  Location     Type
  1499 ;;		None
  1500 ;; Auto vars:     Size  Location     Type
  1501 ;;  uart_char       1   27[BANK0 ] unsigned char 
  1502 ;; Return value:  Size  Location     Type
  1503 ;;                  1    wreg      void 
  1504 ;; Registers used:
  1505 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1506 ;; Tracked objects:
  1507 ;;		On entry : B1F/0
  1508 ;;		On exit  : 0/0
  1509 ;;		Unchanged: 0/0
  1510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1512 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1513 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1514 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1515 ;;Total ram usage:        7 bytes
  1516 ;; Hardware stack levels required when called: 6
  1517 ;; This function calls:
  1518 ;;		_Stepper
  1519 ;;		___wmul
  1520 ;;		_empty_comb
  1521 ;;		_setup
  1522 ;;		_step
  1523 ;;		_uart_read_char
  1524 ;; This function is called by:
  1525 ;;		Startup code after reset
  1526 ;; This function uses a non-reentrant model
  1527 ;;
  1528                           
  1529                           
  1530                           ;psect for function _main
  1531  01EA                     _main:
  1532  01EA                     l1831:	
  1533                           ;incstack = 0
  1534                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1535                           
  1536                           
  1537                           ;LV.c: 35:     setup();
  1538  01EA  3185  2598  3181   	fcall	_setup
  1539  01ED                     l1833:
  1540                           
  1541                           ;LV.c: 36:     Stepper(512);
  1542  01ED  3000               	movlw	0
  1543  01EE  0020               	movlb	0	; select bank0
  1544  01EF  00C4               	movwf	Stepper@num_of_steps
  1545  01F0  3002               	movlw	2
  1546  01F1  00C5               	movwf	Stepper@num_of_steps+1
  1547  01F2  3185  25AA  3181   	fcall	_Stepper
  1548  01F5                     l1835:
  1549                           
  1550                           ;LV.c: 37:     setup();
  1551  01F5  3185  2598  3181   	fcall	_setup
  1552  01F8                     l1837:
  1553                           
  1554                           ;LV.c: 38:     empty_comb();
  1555  01F8  3185  25B9  3181   	fcall	_empty_comb
  1556  01FB                     l1839:
  1557                           
  1558                           ;LV.c: 40:         char uart_char = uart_read_char();
  1559  01FB  3184  24B7  3181   	fcall	_uart_read_char
  1560  01FE  0020               	movlb	0	; select bank0
  1561  01FF  00D9               	movwf	??_main
  1562  0200  0859               	movf	??_main,w
  1563  0201  00DF               	movwf	main@uart_char
  1564  0202                     l1841:
  1565                           
  1566                           ;LV.c: 41:         if (uart_char) {
  1567  0202  085F               	movf	main@uart_char,w
  1568  0203  1903               	btfsc	3,2
  1569  0204  2A06               	goto	u1471
  1570  0205  2A07               	goto	u1470
  1571  0206                     u1471:
  1572  0206  2A4D               	goto	l1871
  1573  0207                     u1470:
  1574  0207                     l1843:
  1575                           
  1576                           ;LV.c: 42:             if (comb1 == 0x00) {
  1577  0207  0842               	movf	_comb1,w
  1578  0208  1D03               	btfss	3,2
  1579  0209  2A0B               	goto	u1481
  1580  020A  2A0C               	goto	u1480
  1581  020B                     u1481:
  1582  020B  2A11               	goto	l1847
  1583  020C                     u1480:
  1584  020C                     l1845:
  1585                           
  1586                           ;LV.c: 43:                 comb1 = uart_char;
  1587  020C  085F               	movf	main@uart_char,w
  1588  020D  00D9               	movwf	??_main
  1589  020E  0859               	movf	??_main,w
  1590  020F  00C2               	movwf	_comb1
  1591                           
  1592                           ;LV.c: 44:             } else if (comb2 == 0x00) {
  1593  0210  2A4D               	goto	l1871
  1594  0211                     l1847:
  1595  0211  0841               	movf	_comb2,w
  1596  0212  1D03               	btfss	3,2
  1597  0213  2A15               	goto	u1491
  1598  0214  2A16               	goto	u1490
  1599  0215                     u1491:
  1600  0215  2A1B               	goto	l1851
  1601  0216                     u1490:
  1602  0216                     l1849:
  1603                           
  1604                           ;LV.c: 45:                 comb2 = uart_char;
  1605  0216  085F               	movf	main@uart_char,w
  1606  0217  00D9               	movwf	??_main
  1607  0218  0859               	movf	??_main,w
  1608  0219  00C1               	movwf	_comb2
  1609                           
  1610                           ;LV.c: 46:             } else if (comb3 == 0x00) {
  1611  021A  2A4D               	goto	l1871
  1612  021B                     l1851:
  1613  021B  0840               	movf	_comb3,w
  1614  021C  1D03               	btfss	3,2
  1615  021D  2A1F               	goto	u1501
  1616  021E  2A20               	goto	u1500
  1617  021F                     u1501:
  1618  021F  2A25               	goto	l1855
  1619  0220                     u1500:
  1620  0220                     l1853:
  1621                           
  1622                           ;LV.c: 47:                 comb3 = uart_char;
  1623  0220  085F               	movf	main@uart_char,w
  1624  0221  00D9               	movwf	??_main
  1625  0222  0859               	movf	??_main,w
  1626  0223  00C0               	movwf	_comb3
  1627                           
  1628                           ;LV.c: 48:             } else if (comb4 == 0x00) {
  1629  0224  2A4D               	goto	l1871
  1630  0225                     l1855:
  1631  0225  083F               	movf	_comb4,w
  1632  0226  1D03               	btfss	3,2
  1633  0227  2A29               	goto	u1511
  1634  0228  2A2A               	goto	u1510
  1635  0229                     u1511:
  1636  0229  2A2F               	goto	l1859
  1637  022A                     u1510:
  1638  022A                     l1857:
  1639                           
  1640                           ;LV.c: 49:                 comb4 = uart_char;
  1641  022A  085F               	movf	main@uart_char,w
  1642  022B  00D9               	movwf	??_main
  1643  022C  0859               	movf	??_main,w
  1644  022D  00BF               	movwf	_comb4
  1645                           
  1646                           ;LV.c: 50:             } else if (comb5 == 0x00) {
  1647  022E  2A4D               	goto	l1871
  1648  022F                     l1859:
  1649  022F  083E               	movf	_comb5,w
  1650  0230  1D03               	btfss	3,2
  1651  0231  2A33               	goto	u1521
  1652  0232  2A34               	goto	u1520
  1653  0233                     u1521:
  1654  0233  2A39               	goto	l1863
  1655  0234                     u1520:
  1656  0234                     l1861:
  1657                           
  1658                           ;LV.c: 51:                 comb5 = uart_char;
  1659  0234  085F               	movf	main@uart_char,w
  1660  0235  00D9               	movwf	??_main
  1661  0236  0859               	movf	??_main,w
  1662  0237  00BE               	movwf	_comb5
  1663                           
  1664                           ;LV.c: 52:             } else if (comb6 == 0x00) {
  1665  0238  2A4D               	goto	l1871
  1666  0239                     l1863:
  1667  0239  083D               	movf	_comb6,w
  1668  023A  1D03               	btfss	3,2
  1669  023B  2A3D               	goto	u1531
  1670  023C  2A3E               	goto	u1530
  1671  023D                     u1531:
  1672  023D  2A43               	goto	l1867
  1673  023E                     u1530:
  1674  023E                     l1865:
  1675                           
  1676                           ;LV.c: 53:                 comb6 = uart_char;
  1677  023E  085F               	movf	main@uart_char,w
  1678  023F  00D9               	movwf	??_main
  1679  0240  0859               	movf	??_main,w
  1680  0241  00BD               	movwf	_comb6
  1681                           
  1682                           ;LV.c: 54:             } else if (comb7 == 0x00) {
  1683  0242  2A4D               	goto	l1871
  1684  0243                     l1867:
  1685  0243  083C               	movf	_comb7,w
  1686  0244  1D03               	btfss	3,2
  1687  0245  2A47               	goto	u1541
  1688  0246  2A48               	goto	u1540
  1689  0247                     u1541:
  1690  0247  2A4D               	goto	l248
  1691  0248                     u1540:
  1692  0248                     l1869:
  1693                           
  1694                           ;LV.c: 55:                 comb7 = uart_char;
  1695  0248  085F               	movf	main@uart_char,w
  1696  0249  00D9               	movwf	??_main
  1697  024A  0859               	movf	??_main,w
  1698  024B  00BC               	movwf	_comb7
  1699  024C  2A4D               	goto	l1871
  1700  024D                     l248:
  1701  024D                     l1871:
  1702                           
  1703                           ;LV.c: 60:         if (comb1 == 0x6C && comb2 == 0x76 && comb6 == 0x6C && comb7 == 0x76)
      +                           {
  1704  024D  306C               	movlw	108
  1705  024E  0642               	xorwf	_comb1,w
  1706  024F  1D03               	btfss	3,2
  1707  0250  2A52               	goto	u1551
  1708  0251  2A53               	goto	u1550
  1709  0252                     u1551:
  1710  0252  2AA8               	goto	l1889
  1711  0253                     u1550:
  1712  0253                     l1873:
  1713  0253  3076               	movlw	118
  1714  0254  0641               	xorwf	_comb2,w
  1715  0255  1D03               	btfss	3,2
  1716  0256  2A58               	goto	u1561
  1717  0257  2A59               	goto	u1560
  1718  0258                     u1561:
  1719  0258  2AA8               	goto	l1889
  1720  0259                     u1560:
  1721  0259                     l1875:
  1722  0259  306C               	movlw	108
  1723  025A  063D               	xorwf	_comb6,w
  1724  025B  1D03               	btfss	3,2
  1725  025C  2A5E               	goto	u1571
  1726  025D  2A5F               	goto	u1570
  1727  025E                     u1571:
  1728  025E  2AA8               	goto	l1889
  1729  025F                     u1570:
  1730  025F                     l1877:
  1731  025F  3076               	movlw	118
  1732  0260  063C               	xorwf	_comb7,w
  1733  0261  1D03               	btfss	3,2
  1734  0262  2A64               	goto	u1581
  1735  0263  2A65               	goto	u1580
  1736  0264                     u1581:
  1737  0264  2AA8               	goto	l1889
  1738  0265                     u1580:
  1739  0265                     l1879:
  1740                           
  1741                           ;LV.c: 61:                         if (comb5 == 0x76) {
  1742  0265  3076               	movlw	118
  1743  0266  063E               	xorwf	_comb5,w
  1744  0267  1D03               	btfss	3,2
  1745  0268  2A6A               	goto	u1591
  1746  0269  2A6B               	goto	u1590
  1747  026A                     u1591:
  1748  026A  2A89               	goto	l1883
  1749  026B                     u1590:
  1750  026B                     l1881:
  1751                           
  1752                           ;LV.c: 62:                 stepvar = comb3 * comb4 * -1;
  1753  026B  0840               	movf	_comb3,w
  1754  026C  00D9               	movwf	??_main
  1755  026D  01DA               	clrf	??_main+1
  1756  026E  0859               	movf	??_main,w
  1757  026F  00C4               	movwf	___wmul@multiplier
  1758  0270  085A               	movf	??_main+1,w
  1759  0271  00C5               	movwf	___wmul@multiplier+1
  1760  0272  083F               	movf	_comb4,w
  1761  0273  00DB               	movwf	??_main+2
  1762  0274  01DC               	clrf	??_main+3
  1763  0275  085B               	movf	??_main+2,w
  1764  0276  00C6               	movwf	___wmul@multiplicand
  1765  0277  085C               	movf	??_main+3,w
  1766  0278  00C7               	movwf	___wmul@multiplicand+1
  1767  0279  3185  253D  3181   	fcall	___wmul
  1768  027C  0020               	movlb	0	; select bank0
  1769  027D  0944               	comf	?___wmul,w
  1770  027E  00DD               	movwf	??_main+4
  1771  027F  0945               	comf	?___wmul+1,w
  1772  0280  00DE               	movwf	??_main+5
  1773  0281  0ADD               	incf	??_main+4,f
  1774  0282  1903               	skipnz
  1775  0283  0ADE               	incf	??_main+5,f
  1776  0284  085D               	movf	??_main+4,w
  1777  0285  00B4               	movwf	_stepvar
  1778  0286  085E               	movf	??_main+5,w
  1779  0287  00B5               	movwf	_stepvar+1
  1780                           
  1781                           ;LV.c: 63:             } else if (comb5 == 0x61) {
  1782  0288  2AA5               	goto	l1887
  1783  0289                     l1883:
  1784  0289  3061               	movlw	97
  1785  028A  063E               	xorwf	_comb5,w
  1786  028B  1D03               	btfss	3,2
  1787  028C  2A8E               	goto	u1601
  1788  028D  2A8F               	goto	u1600
  1789  028E                     u1601:
  1790  028E  2AA5               	goto	l1887
  1791  028F                     u1600:
  1792  028F                     l1885:
  1793                           
  1794                           ;LV.c: 64:                 stepvar = comb3 * comb4;
  1795  028F  0840               	movf	_comb3,w
  1796  0290  00D9               	movwf	??_main
  1797  0291  01DA               	clrf	??_main+1
  1798  0292  0859               	movf	??_main,w
  1799  0293  00C4               	movwf	___wmul@multiplier
  1800  0294  085A               	movf	??_main+1,w
  1801  0295  00C5               	movwf	___wmul@multiplier+1
  1802  0296  083F               	movf	_comb4,w
  1803  0297  00DB               	movwf	??_main+2
  1804  0298  01DC               	clrf	??_main+3
  1805  0299  085B               	movf	??_main+2,w
  1806  029A  00C6               	movwf	___wmul@multiplicand
  1807  029B  085C               	movf	??_main+3,w
  1808  029C  00C7               	movwf	___wmul@multiplicand+1
  1809  029D  3185  253D  3181   	fcall	___wmul
  1810  02A0  0020               	movlb	0	; select bank0
  1811  02A1  0845               	movf	?___wmul+1,w
  1812  02A2  00B5               	movwf	_stepvar+1
  1813  02A3  0844               	movf	?___wmul,w
  1814  02A4  00B4               	movwf	_stepvar
  1815  02A5                     l1887:
  1816                           
  1817                           ;LV.c: 67:             empty_comb();
  1818  02A5  3185  25B9  3181   	fcall	_empty_comb
  1819  02A8                     l1889:
  1820                           
  1821                           ;LV.c: 70:         if (comb1 == 0x73 && comb2 == 0x73 && comb3 == 0x73 && comb4 == 0x73 
      +                          && comb5 == 0x73 && comb6 == 0x73 && comb7 == 0x73) {
  1822  02A8  3073               	movlw	115
  1823  02A9  0020               	movlb	0	; select bank0
  1824  02AA  0642               	xorwf	_comb1,w
  1825  02AB  1D03               	btfss	3,2
  1826  02AC  2AAE               	goto	u1611
  1827  02AD  2AAF               	goto	u1610
  1828  02AE                     u1611:
  1829  02AE  2ADD               	goto	l1907
  1830  02AF                     u1610:
  1831  02AF                     l1891:
  1832  02AF  3073               	movlw	115
  1833  02B0  0641               	xorwf	_comb2,w
  1834  02B1  1D03               	btfss	3,2
  1835  02B2  2AB4               	goto	u1621
  1836  02B3  2AB5               	goto	u1620
  1837  02B4                     u1621:
  1838  02B4  2ADD               	goto	l1907
  1839  02B5                     u1620:
  1840  02B5                     l1893:
  1841  02B5  3073               	movlw	115
  1842  02B6  0640               	xorwf	_comb3,w
  1843  02B7  1D03               	btfss	3,2
  1844  02B8  2ABA               	goto	u1631
  1845  02B9  2ABB               	goto	u1630
  1846  02BA                     u1631:
  1847  02BA  2ADD               	goto	l1907
  1848  02BB                     u1630:
  1849  02BB                     l1895:
  1850  02BB  3073               	movlw	115
  1851  02BC  063F               	xorwf	_comb4,w
  1852  02BD  1D03               	btfss	3,2
  1853  02BE  2AC0               	goto	u1641
  1854  02BF  2AC1               	goto	u1640
  1855  02C0                     u1641:
  1856  02C0  2ADD               	goto	l1907
  1857  02C1                     u1640:
  1858  02C1                     l1897:
  1859  02C1  3073               	movlw	115
  1860  02C2  063E               	xorwf	_comb5,w
  1861  02C3  1D03               	btfss	3,2
  1862  02C4  2AC6               	goto	u1651
  1863  02C5  2AC7               	goto	u1650
  1864  02C6                     u1651:
  1865  02C6  2ADD               	goto	l1907
  1866  02C7                     u1650:
  1867  02C7                     l1899:
  1868  02C7  3073               	movlw	115
  1869  02C8  063D               	xorwf	_comb6,w
  1870  02C9  1D03               	btfss	3,2
  1871  02CA  2ACC               	goto	u1661
  1872  02CB  2ACD               	goto	u1660
  1873  02CC                     u1661:
  1874  02CC  2ADD               	goto	l1907
  1875  02CD                     u1660:
  1876  02CD                     l1901:
  1877  02CD  3073               	movlw	115
  1878  02CE  063C               	xorwf	_comb7,w
  1879  02CF  1D03               	btfss	3,2
  1880  02D0  2AD2               	goto	u1671
  1881  02D1  2AD3               	goto	u1670
  1882  02D2                     u1671:
  1883  02D2  2ADD               	goto	l1907
  1884  02D3                     u1670:
  1885  02D3                     l1903:
  1886                           
  1887                           ;LV.c: 71:             step(stepvar);
  1888  02D3  0835               	movf	_stepvar+1,w
  1889  02D4  00C9               	movwf	step@steps_to_move+1
  1890  02D5  0834               	movf	_stepvar,w
  1891  02D6  00C8               	movwf	step@steps_to_move
  1892  02D7  3183  23D2  3181   	fcall	_step
  1893  02DA                     l1905:
  1894                           
  1895                           ;LV.c: 72:             empty_comb();
  1896  02DA  3185  25B9  3181   	fcall	_empty_comb
  1897  02DD                     l1907:
  1898                           
  1899                           ;LV.c: 75:         if (comb7 != 0x00) {
  1900  02DD  0020               	movlb	0	; select bank0
  1901  02DE  083C               	movf	_comb7,w
  1902  02DF  1903               	btfsc	3,2
  1903  02E0  2AE2               	goto	u1681
  1904  02E1  2AE3               	goto	u1680
  1905  02E2                     u1681:
  1906  02E2  2AE6               	goto	l1911
  1907  02E3                     u1680:
  1908  02E3                     l1909:
  1909                           
  1910                           ;LV.c: 76:             empty_comb();
  1911  02E3  3185  25B9  3181   	fcall	_empty_comb
  1912  02E6                     l1911:
  1913                           
  1914                           ;LV.c: 79:         if (comb1 != 0x6C && comb1 != 0x73 && comb1 != 0x00) {
  1915  02E6  306C               	movlw	108
  1916  02E7  0020               	movlb	0	; select bank0
  1917  02E8  0642               	xorwf	_comb1,w
  1918  02E9  1903               	btfsc	3,2
  1919  02EA  2AEC               	goto	u1691
  1920  02EB  2AED               	goto	u1690
  1921  02EC                     u1691:
  1922  02EC  2AF9               	goto	l1919
  1923  02ED                     u1690:
  1924  02ED                     l1913:
  1925  02ED  3073               	movlw	115
  1926  02EE  0642               	xorwf	_comb1,w
  1927  02EF  1903               	btfsc	3,2
  1928  02F0  2AF2               	goto	u1701
  1929  02F1  2AF3               	goto	u1700
  1930  02F2                     u1701:
  1931  02F2  2AF9               	goto	l1919
  1932  02F3                     u1700:
  1933  02F3                     l1915:
  1934  02F3  0842               	movf	_comb1,w
  1935  02F4  1903               	btfsc	3,2
  1936  02F5  2AF7               	goto	u1711
  1937  02F6  2AF8               	goto	u1710
  1938  02F7                     u1711:
  1939  02F7  2AF9               	goto	l1919
  1940  02F8                     u1710:
  1941  02F8  29F8               	goto	l1837
  1942  02F9                     l1919:
  1943  02F9  3076               	movlw	118
  1944  02FA  0641               	xorwf	_comb2,w
  1945  02FB  1903               	btfsc	3,2
  1946  02FC  2AFE               	goto	u1721
  1947  02FD  2AFF               	goto	u1720
  1948  02FE                     u1721:
  1949  02FE  29FB               	goto	l1839
  1950  02FF                     u1720:
  1951  02FF                     l1921:
  1952  02FF  3073               	movlw	115
  1953  0300  0641               	xorwf	_comb2,w
  1954  0301  1903               	btfsc	3,2
  1955  0302  2B04               	goto	u1731
  1956  0303  2B05               	goto	u1730
  1957  0304                     u1731:
  1958  0304  29FB               	goto	l1839
  1959  0305                     u1730:
  1960  0305                     l1923:
  1961  0305  0841               	movf	_comb2,w
  1962  0306  1903               	btfsc	3,2
  1963  0307  2B09               	goto	u1741
  1964  0308  2B0A               	goto	u1740
  1965  0309                     u1741:
  1966  0309  29FB               	goto	l1839
  1967  030A                     u1740:
  1968  030A  29F8               	goto	l1837
  1969  030B  3180  280E         	ljmp	start
  1970  030D                     __end_of_main:
  1971                           
  1972                           	psect	text1
  1973  04B7                     __ptext1:	
  1974 ;; *************** function _uart_read_char *****************
  1975 ;; Defined at:
  1976 ;;		line 234 in file "uartlib.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;		None
  1979 ;; Auto vars:     Size  Location     Type
  1980 ;;  uart_char       1    3[BANK0 ] unsigned char 
  1981 ;; Return value:  Size  Location     Type
  1982 ;;                  1    wreg      unsigned char 
  1983 ;; Registers used:
  1984 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1985 ;; Tracked objects:
  1986 ;;		On entry : 0/0
  1987 ;;		On exit  : 0/0
  1988 ;;		Unchanged: 0/0
  1989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  1990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1991 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1992 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1993 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  1994 ;;Total ram usage:        6 bytes
  1995 ;; Hardware stack levels used: 1
  1996 ;; Hardware stack levels required when called: 2
  1997 ;; This function calls:
  1998 ;;		Nothing
  1999 ;; This function is called by:
  2000 ;;		_main
  2001 ;; This function uses a non-reentrant model
  2002 ;;
  2003                           
  2004                           
  2005                           ;psect for function _uart_read_char
  2006  04B7                     _uart_read_char:
  2007  04B7                     l1785:	
  2008                           ;incstack = 0
  2009                           ; Regs used in _uart_read_char: [wreg+fsr1l+fsr1h+status,2+status,0]
  2010                           
  2011                           
  2012                           ;uartlib.c: 235:     if ((uart_recieve_head == uart_recieve_tail)) {
  2013  04B7  0877               	movf	_uart_recieve_head,w	;volatile
  2014  04B8  0020               	movlb	0	; select bank0
  2015  04B9  0643               	xorwf	_uart_recieve_tail,w	;volatile
  2016  04BA  1D03               	skipz
  2017  04BB  2CBD               	goto	u1411
  2018  04BC  2CBE               	goto	u1410
  2019  04BD                     u1411:
  2020  04BD  2CC0               	goto	l1791
  2021  04BE                     u1410:
  2022  04BE                     l1787:
  2023                           
  2024                           ;uartlib.c: 236:         return '\0';
  2025  04BE  3000               	movlw	0
  2026  04BF  2CED               	goto	l170
  2027  04C0                     l1791:
  2028                           
  2029                           ;uartlib.c: 239:     char uart_char = uart_recieve_buffer[uart_recieve_tail];
  2030  04C0  0843               	movf	_uart_recieve_tail,w
  2031  04C1  3E2A               	addlw	(low (_uart_recieve_buffer| 0))& (0+255)
  2032  04C2  0086               	movwf	6
  2033  04C3  0187               	clrf	7
  2034  04C4  0801               	movf	1,w
  2035  04C5  00C4               	movwf	??_uart_read_char
  2036  04C6  0844               	movf	??_uart_read_char,w
  2037  04C7  00C7               	movwf	uart_read_char@uart_char
  2038  04C8                     l1793:
  2039                           
  2040                           ;uartlib.c: 240:     uart_recieve_tail = (uart_recieve_tail+1 >= (10)) ? (0) : (uart_rec
      +                          ieve_tail+1);
  2041  04C8  0843               	movf	_uart_recieve_tail,w	;volatile
  2042  04C9  3E01               	addlw	1
  2043  04CA  00C4               	movwf	??_uart_read_char
  2044  04CB  3000               	movlw	0
  2045  04CC  1803               	skipnc
  2046  04CD  3001               	movlw	1
  2047  04CE  00C5               	movwf	??_uart_read_char+1
  2048  04CF  0845               	movf	??_uart_read_char+1,w
  2049  04D0  3A80               	xorlw	128
  2050  04D1  00C6               	movwf	??_uart_read_char+2
  2051  04D2  3080               	movlw	128
  2052  04D3  0246               	subwf	??_uart_read_char+2,w
  2053  04D4  1D03               	skipz
  2054  04D5  2CD8               	goto	u1425
  2055  04D6  300A               	movlw	10
  2056  04D7  0244               	subwf	??_uart_read_char,w
  2057  04D8                     u1425:
  2058  04D8  1803               	skipnc
  2059  04D9  2CDB               	goto	u1421
  2060  04DA  2CDC               	goto	u1420
  2061  04DB                     u1421:
  2062  04DB  2CE5               	goto	l1797
  2063  04DC                     u1420:
  2064  04DC                     l1795:
  2065  04DC  0020               	movlb	0	; select bank0
  2066  04DD  0843               	movf	_uart_recieve_tail,w	;volatile
  2067  04DE  3E01               	addlw	1
  2068  04DF  00C8               	movwf	_uart_read_char$261
  2069  04E0  3000               	movlw	0
  2070  04E1  1803               	skipnc
  2071  04E2  3001               	movlw	1
  2072  04E3  00C9               	movwf	_uart_read_char$261+1
  2073  04E4  2CE8               	goto	l1799
  2074  04E5                     l1797:
  2075  04E5  0020               	movlb	0	; select bank0
  2076  04E6  01C8               	clrf	_uart_read_char$261
  2077  04E7  01C9               	clrf	_uart_read_char$261+1
  2078  04E8                     l1799:
  2079  04E8  0848               	movf	_uart_read_char$261,w
  2080  04E9  00C4               	movwf	??_uart_read_char
  2081  04EA  0844               	movf	??_uart_read_char,w
  2082  04EB  00C3               	movwf	_uart_recieve_tail	;volatile
  2083  04EC                     l1801:
  2084                           
  2085                           ;uartlib.c: 242:     return uart_char;
  2086  04EC  0847               	movf	uart_read_char@uart_char,w
  2087  04ED                     l170:
  2088  04ED  0008               	return
  2089  04EE                     __end_of_uart_read_char:
  2090                           
  2091                           	psect	text2
  2092  03D2                     __ptext2:	
  2093 ;; *************** function _step *****************
  2094 ;; Defined at:
  2095 ;;		line 25 in file "stepperlib.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;  steps_to_mov    2    4[BANK0 ] int 
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;  steps_left      2    7[BANK0 ] int 
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2110 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2111 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2112 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2113 ;;Total ram usage:        5 bytes
  2114 ;; Hardware stack levels used: 1
  2115 ;; Hardware stack levels required when called: 3
  2116 ;; This function calls:
  2117 ;;		_abs
  2118 ;;		_stepMotor
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           
  2125                           ;psect for function _step
  2126  03D2                     _step:
  2127  03D2                     l1759:	
  2128                           ;incstack = 0
  2129                           ; Regs used in _step: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2130                           
  2131                           
  2132                           ;stepperlib.c: 29:     int steps_left = abs(steps_to_move);
  2133  03D2  0020               	movlb	0	; select bank0
  2134  03D3  0849               	movf	step@steps_to_move+1,w
  2135  03D4  00C5               	movwf	abs@a+1
  2136  03D5  0848               	movf	step@steps_to_move,w
  2137  03D6  00C4               	movwf	abs@a
  2138  03D7  3185  257C  3183   	fcall	_abs
  2139  03DA  0020               	movlb	0	; select bank0
  2140  03DB  0845               	movf	?_abs+1,w
  2141  03DC  00CC               	movwf	step@steps_left+1
  2142  03DD  0844               	movf	?_abs,w
  2143  03DE  00CB               	movwf	step@steps_left
  2144  03DF                     l1761:
  2145                           
  2146                           ;stepperlib.c: 32:     if (steps_to_move > 0) {
  2147  03DF  0849               	movf	step@steps_to_move+1,w
  2148  03E0  3A80               	xorlw	128
  2149  03E1  00CA               	movwf	??_step
  2150  03E2  3080               	movlw	128
  2151  03E3  024A               	subwf	??_step,w
  2152  03E4  1D03               	skipz
  2153  03E5  2BE8               	goto	u1355
  2154  03E6  3001               	movlw	1
  2155  03E7  0248               	subwf	step@steps_to_move,w
  2156  03E8                     u1355:
  2157  03E8  1C03               	skipc
  2158  03E9  2BEB               	goto	u1351
  2159  03EA  2BEC               	goto	u1350
  2160  03EB                     u1351:
  2161  03EB  2BF1               	goto	l1765
  2162  03EC                     u1350:
  2163  03EC                     l1763:
  2164                           
  2165                           ;stepperlib.c: 33:         direction = 1;
  2166  03EC  3001               	movlw	1
  2167  03ED  0020               	movlb	0	; select bank0
  2168  03EE  00BA               	movwf	_direction
  2169  03EF  3000               	movlw	0
  2170  03F0  00BB               	movwf	_direction+1
  2171  03F1                     l1765:
  2172                           
  2173                           ;stepperlib.c: 35:     if (steps_to_move < 0) {
  2174  03F1  0020               	movlb	0	; select bank0
  2175  03F2  1FC9               	btfss	step@steps_to_move+1,7
  2176  03F3  2BF5               	goto	u1361
  2177  03F4  2BF6               	goto	u1360
  2178  03F5                     u1361:
  2179  03F5  2C30               	goto	l1783
  2180  03F6                     u1360:
  2181  03F6                     l1767:
  2182                           
  2183                           ;stepperlib.c: 36:         direction = 0;
  2184  03F6  01BA               	clrf	_direction
  2185  03F7  01BB               	clrf	_direction+1
  2186  03F8  2C30               	goto	l1783
  2187  03F9                     l1769:
  2188                           
  2189                           ;stepperlib.c: 42:         _delay((unsigned long)((2)*(1000000/4000.0)));
  2190  03F9  30A6               	movlw	166
  2191  03FA                     u1757:
  2192  03FA  0B89               	decfsz	9,f
  2193  03FB  2BFA               	goto	u1757
  2194  03FC  3200               	nop2
  2195  03FD                     l1771:
  2196                           
  2197                           ;stepperlib.c: 45:         if (direction == 1) {
  2198  03FD  0020               	movlb	0	; select bank0
  2199  03FE  033A               	decf	_direction,w
  2200  03FF  043B               	iorwf	_direction+1,w
  2201  0400  1D03               	btfss	3,2
  2202  0401  2C03               	goto	u1371
  2203  0402  2C04               	goto	u1370
  2204  0403                     u1371:
  2205  0403  2C15               	goto	l1777
  2206  0404                     u1370:
  2207  0404                     l1773:
  2208                           
  2209                           ;stepperlib.c: 46:             step_number++;
  2210  0404  3001               	movlw	1
  2211  0405  07B6               	addwf	_step_number,f
  2212  0406  3000               	movlw	0
  2213  0407  3DB7               	addwfc	_step_number+1,f
  2214                           
  2215                           ;stepperlib.c: 47:             if (step_number == number_of_steps) {
  2216  0408  0839               	movf	_number_of_steps+1,w
  2217  0409  0637               	xorwf	_step_number+1,w
  2218  040A  1D03               	skipz
  2219  040B  2C0E               	goto	u1385
  2220  040C  0838               	movf	_number_of_steps,w
  2221  040D  0636               	xorwf	_step_number,w
  2222  040E                     u1385:
  2223  040E  1D03               	skipz
  2224  040F  2C11               	goto	u1381
  2225  0410  2C12               	goto	u1380
  2226  0411                     u1381:
  2227  0411  2C23               	goto	l28
  2228  0412                     u1380:
  2229  0412                     l1775:
  2230                           
  2231                           ;stepperlib.c: 48:                 step_number = 0;
  2232  0412  01B6               	clrf	_step_number
  2233  0413  01B7               	clrf	_step_number+1
  2234  0414  2C23               	goto	l28
  2235  0415                     l1777:
  2236                           
  2237                           ;stepperlib.c: 51:             if (step_number == 0) {
  2238  0415  0836               	movf	_step_number,w
  2239  0416  0437               	iorwf	_step_number+1,w
  2240  0417  1D03               	btfss	3,2
  2241  0418  2C1A               	goto	u1391
  2242  0419  2C1B               	goto	u1390
  2243  041A                     u1391:
  2244  041A  2C1F               	goto	l29
  2245  041B                     u1390:
  2246  041B                     l1779:
  2247                           
  2248                           ;stepperlib.c: 52:                 step_number = number_of_steps;
  2249  041B  0839               	movf	_number_of_steps+1,w
  2250  041C  00B7               	movwf	_step_number+1
  2251  041D  0838               	movf	_number_of_steps,w
  2252  041E  00B6               	movwf	_step_number
  2253  041F                     l29:	
  2254                           ;stepperlib.c: 53:             }
  2255                           
  2256                           
  2257                           ;stepperlib.c: 54:             step_number--;
  2258  041F  30FF               	movlw	255
  2259  0420  07B6               	addwf	_step_number,f
  2260  0421  30FF               	movlw	255
  2261  0422  3DB7               	addwfc	_step_number+1,f
  2262  0423                     l28:	
  2263                           ;stepperlib.c: 55:         }
  2264                           
  2265                           
  2266                           ;stepperlib.c: 57:         steps_left--;
  2267  0423  30FF               	movlw	255
  2268  0424  07CB               	addwf	step@steps_left,f
  2269  0425  30FF               	movlw	255
  2270  0426  3DCC               	addwfc	step@steps_left+1,f
  2271  0427                     l1781:
  2272                           
  2273                           ;stepperlib.c: 59:         stepMotor(step_number % 4);
  2274  0427  3003               	movlw	3
  2275  0428  0536               	andwf	_step_number,w
  2276  0429  00C4               	movwf	stepMotor@thisStep
  2277  042A  3000               	movlw	0
  2278  042B  0537               	andwf	_step_number+1,w
  2279  042C  00C5               	movwf	stepMotor@thisStep+1
  2280  042D  3184  24EE  3183   	fcall	_stepMotor
  2281  0430                     l1783:
  2282                           
  2283                           ;stepperlib.c: 41:     while (steps_left > 0) {
  2284  0430  0020               	movlb	0	; select bank0
  2285  0431  084C               	movf	step@steps_left+1,w
  2286  0432  3A80               	xorlw	128
  2287  0433  00CA               	movwf	??_step
  2288  0434  3080               	movlw	128
  2289  0435  024A               	subwf	??_step,w
  2290  0436  1D03               	skipz
  2291  0437  2C3A               	goto	u1405
  2292  0438  3001               	movlw	1
  2293  0439  024B               	subwf	step@steps_left,w
  2294  043A                     u1405:
  2295  043A  1803               	skipnc
  2296  043B  2C3D               	goto	u1401
  2297  043C  2C3E               	goto	u1400
  2298  043D                     u1401:
  2299  043D  2BF9               	goto	l1769
  2300  043E                     u1400:
  2301  043E                     l31:
  2302  043E  0008               	return
  2303  043F                     __end_of_step:
  2304                           
  2305                           	psect	text3
  2306  04EE                     __ptext3:	
  2307 ;; *************** function _stepMotor *****************
  2308 ;; Defined at:
  2309 ;;		line 67 in file "stepperlib.c"
  2310 ;; Parameters:    Size  Location     Type
  2311 ;;  thisStep        2    0[BANK0 ] int 
  2312 ;; Auto vars:     Size  Location     Type
  2313 ;;		None
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  1    wreg      void 
  2316 ;; Registers used:
  2317 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2323 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2326 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2327 ;;Total ram usage:        2 bytes
  2328 ;; Hardware stack levels used: 1
  2329 ;; Hardware stack levels required when called: 2
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_step
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function _stepMotor
  2339  04EE                     _stepMotor:
  2340  04EE                     l1721:	
  2341                           ;incstack = 0
  2342                           ; Regs used in _stepMotor: [wreg-fsr0h+status,2+status,0]
  2343                           
  2344                           
  2345                           ;stepperlib.c: 68:     switch (thisStep) {
  2346  04EE  2D07               	goto	l1725
  2347  04EF                     l35:	
  2348                           ;stepperlib.c: 69:         case 0:
  2349                           
  2350                           
  2351                           ;stepperlib.c: 70:             LATCbits.LATC0 = 1;
  2352  04EF  0022               	movlb	2	; select bank2
  2353  04F0  140E               	bsf	14,0	;volatile
  2354                           
  2355                           ;stepperlib.c: 71:             LATCbits.LATC1 = 0;
  2356  04F1  108E               	bcf	14,1	;volatile
  2357                           
  2358                           ;stepperlib.c: 72:             LATCbits.LATC2 = 1;
  2359  04F2  150E               	bsf	14,2	;volatile
  2360                           
  2361                           ;stepperlib.c: 73:             LATCbits.LATC3 = 0;
  2362  04F3  118E               	bcf	14,3	;volatile
  2363                           
  2364                           ;stepperlib.c: 74:             break;
  2365  04F4  2D1B               	goto	l40
  2366  04F5                     l37:	
  2367                           ;stepperlib.c: 75:         case 1:
  2368                           
  2369                           
  2370                           ;stepperlib.c: 76:             LATCbits.LATC0 = 0;
  2371  04F5  0022               	movlb	2	; select bank2
  2372  04F6  100E               	bcf	14,0	;volatile
  2373                           
  2374                           ;stepperlib.c: 77:             LATCbits.LATC1 = 1;
  2375  04F7  148E               	bsf	14,1	;volatile
  2376                           
  2377                           ;stepperlib.c: 78:             LATCbits.LATC2 = 1;
  2378  04F8  150E               	bsf	14,2	;volatile
  2379                           
  2380                           ;stepperlib.c: 79:             LATCbits.LATC3 = 0;
  2381  04F9  118E               	bcf	14,3	;volatile
  2382                           
  2383                           ;stepperlib.c: 80:             break;
  2384  04FA  2D1B               	goto	l40
  2385  04FB                     l38:	
  2386                           ;stepperlib.c: 81:         case 2:
  2387                           
  2388                           
  2389                           ;stepperlib.c: 82:             LATCbits.LATC0 = 0;
  2390  04FB  0022               	movlb	2	; select bank2
  2391  04FC  100E               	bcf	14,0	;volatile
  2392                           
  2393                           ;stepperlib.c: 83:             LATCbits.LATC1 = 1;
  2394  04FD  148E               	bsf	14,1	;volatile
  2395                           
  2396                           ;stepperlib.c: 84:             LATCbits.LATC2 = 0;
  2397  04FE  110E               	bcf	14,2	;volatile
  2398                           
  2399                           ;stepperlib.c: 85:             LATCbits.LATC3 = 1;
  2400  04FF  158E               	bsf	14,3	;volatile
  2401                           
  2402                           ;stepperlib.c: 86:             break;
  2403  0500  2D1B               	goto	l40
  2404  0501                     l39:	
  2405                           ;stepperlib.c: 87:         case 3:
  2406                           
  2407                           
  2408                           ;stepperlib.c: 88:             LATCbits.LATC0 = 1;
  2409  0501  0022               	movlb	2	; select bank2
  2410  0502  140E               	bsf	14,0	;volatile
  2411                           
  2412                           ;stepperlib.c: 89:             LATCbits.LATC1 = 0;
  2413  0503  108E               	bcf	14,1	;volatile
  2414                           
  2415                           ;stepperlib.c: 90:             LATCbits.LATC2 = 0;
  2416  0504  110E               	bcf	14,2	;volatile
  2417                           
  2418                           ;stepperlib.c: 91:             LATCbits.LATC3 = 1;
  2419  0505  158E               	bsf	14,3	;volatile
  2420                           
  2421                           ;stepperlib.c: 92:             break;
  2422  0506  2D1B               	goto	l40
  2423  0507                     l1725:
  2424                           
  2425                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2426                           ; Switch size 1, requested type "simple"
  2427                           ; Number of cases is 1, Range of values is 0 to 0
  2428                           ; switch strategies available:
  2429                           ; Name         Instructions Cycles
  2430                           ; simple_byte            4     3 (average)
  2431                           ; direct_byte            8     6 (fixed)
  2432                           ; jumptable            260     6 (fixed)
  2433                           ;	Chosen strategy is simple_byte
  2434  0507  0020               	movlb	0	; select bank0
  2435  0508  0845               	movf	stepMotor@thisStep+1,w
  2436  0509  3A00               	xorlw	0	; case 0
  2437  050A  1903               	skipnz
  2438  050B  2D0D               	goto	l1977
  2439  050C  2D1B               	goto	l40
  2440  050D                     l1977:
  2441                           
  2442                           ; Switch size 1, requested type "simple"
  2443                           ; Number of cases is 4, Range of values is 0 to 3
  2444                           ; switch strategies available:
  2445                           ; Name         Instructions Cycles
  2446                           ; simple_byte           13     7 (average)
  2447                           ; direct_byte           14     6 (fixed)
  2448                           ; jumptable            260     6 (fixed)
  2449                           ;	Chosen strategy is simple_byte
  2450  050D  0844               	movf	stepMotor@thisStep,w
  2451  050E  3A00               	xorlw	0	; case 0
  2452  050F  1903               	skipnz
  2453  0510  2CEF               	goto	l35
  2454  0511  3A01               	xorlw	1	; case 1
  2455  0512  1903               	skipnz
  2456  0513  2CF5               	goto	l37
  2457  0514  3A03               	xorlw	3	; case 2
  2458  0515  1903               	skipnz
  2459  0516  2CFB               	goto	l38
  2460  0517  3A01               	xorlw	1	; case 3
  2461  0518  1903               	skipnz
  2462  0519  2D01               	goto	l39
  2463  051A  2D1B               	goto	l40
  2464  051B                     l40:
  2465  051B  0008               	return
  2466  051C                     __end_of_stepMotor:
  2467                           
  2468                           	psect	text4
  2469  057C                     __ptext4:	
  2470 ;; *************** function _abs *****************
  2471 ;; Defined at:
  2472 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  a               2    0[BANK0 ] int 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  2    0[BANK0 ] int 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2486 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2488 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2489 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2490 ;;Total ram usage:        4 bytes
  2491 ;; Hardware stack levels used: 1
  2492 ;; Hardware stack levels required when called: 2
  2493 ;; This function calls:
  2494 ;;		Nothing
  2495 ;; This function is called by:
  2496 ;;		_step
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           
  2501                           ;psect for function _abs
  2502  057C                     _abs:
  2503  057C                     l1717:	
  2504                           ;incstack = 0
  2505                           ; Regs used in _abs: [wreg+status,2+status,0]
  2506                           
  2507  057C  0020               	movlb	0	; select bank0
  2508  057D  0845               	movf	abs@a+1,w
  2509  057E  3A80               	xorlw	128
  2510  057F  00C6               	movwf	??_abs
  2511  0580  3080               	movlw	128
  2512  0581  0246               	subwf	??_abs,w
  2513  0582  1D03               	skipz
  2514  0583  2D86               	goto	u1335
  2515  0584  3001               	movlw	1
  2516  0585  0244               	subwf	abs@a,w
  2517  0586                     u1335:
  2518  0586  1803               	skipnc
  2519  0587  2D89               	goto	u1331
  2520  0588  2D8A               	goto	u1330
  2521  0589                     u1331:
  2522  0589  2D97               	goto	l882
  2523  058A                     u1330:
  2524  058A                     l1719:
  2525  058A  0020               	movlb	0	; select bank0
  2526  058B  0944               	comf	abs@a,w
  2527  058C  00C6               	movwf	??_abs
  2528  058D  0945               	comf	abs@a+1,w
  2529  058E  00C7               	movwf	??_abs+1
  2530  058F  0AC6               	incf	??_abs,f
  2531  0590  1903               	skipnz
  2532  0591  0AC7               	incf	??_abs+1,f
  2533  0592  0846               	movf	??_abs,w
  2534  0593  00C4               	movwf	?_abs
  2535  0594  0847               	movf	??_abs+1,w
  2536  0595  00C5               	movwf	?_abs+1
  2537  0596  2D97               	goto	l885
  2538  0597                     l882:
  2539  0597                     l885:
  2540  0597  0008               	return
  2541  0598                     __end_of_abs:
  2542                           
  2543                           	psect	text5
  2544  0598                     __ptext5:	
  2545 ;; *************** function _setup *****************
  2546 ;; Defined at:
  2547 ;;		line 99 in file "LV.c"
  2548 ;; Parameters:    Size  Location     Type
  2549 ;;		None
  2550 ;; Auto vars:     Size  Location     Type
  2551 ;;		None
  2552 ;; Return value:  Size  Location     Type
  2553 ;;                  1    wreg      void 
  2554 ;; Registers used:
  2555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2556 ;; Tracked objects:
  2557 ;;		On entry : 0/0
  2558 ;;		On exit  : 0/0
  2559 ;;		Unchanged: 0/0
  2560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2565 ;;Total ram usage:        0 bytes
  2566 ;; Hardware stack levels used: 1
  2567 ;; Hardware stack levels required when called: 5
  2568 ;; This function calls:
  2569 ;;		_uart_init
  2570 ;; This function is called by:
  2571 ;;		_main
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           
  2576                           ;psect for function _setup
  2577  0598                     _setup:
  2578  0598                     l1805:	
  2579                           ;incstack = 0
  2580                           ; Regs used in _setup: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2581                           
  2582                           
  2583                           ;LV.c: 100:     OSCCONbits.IRCF = 0b1011;
  2584  0598  0021               	movlb	1	; select bank1
  2585  0599  0819               	movf	25,w	;volatile
  2586  059A  3987               	andlw	-121
  2587  059B  3858               	iorlw	88
  2588  059C  0099               	movwf	25	;volatile
  2589                           
  2590                           ;LV.c: 101:     OSCCONbits.SCS = 0b00;
  2591  059D  30FC               	movlw	-4
  2592  059E  0599               	andwf	25,f	;volatile
  2593  059F                     l1807:
  2594                           
  2595                           ;LV.c: 102:     OSCCONbits.SPLLEN = 0;
  2596  059F  1399               	bcf	25,7	;volatile
  2597  05A0                     l1809:
  2598                           
  2599                           ;LV.c: 104:     GIE = 1;
  2600  05A0  178B               	bsf	11,7	;volatile
  2601  05A1                     l1811:
  2602                           
  2603                           ;LV.c: 105:     PEIE = 1;
  2604  05A1  170B               	bsf	11,6	;volatile
  2605  05A2                     l1813:
  2606                           
  2607                           ;LV.c: 107:     if (!uart_init(3, 1)) {
  2608  05A2  0020               	movlb	0	; select bank0
  2609  05A3  01D6               	clrf	uart_init@c
  2610  05A4  0AD6               	incf	uart_init@c,f
  2611  05A5  3003               	movlw	3
  2612  05A6  3185  255D  3185   	fcall	_uart_init
  2613  05A9                     l272:
  2614  05A9  0008               	return
  2615  05AA                     __end_of_setup:
  2616                           
  2617                           	psect	text6
  2618  055D                     __ptext6:	
  2619 ;; *************** function _uart_init *****************
  2620 ;; Defined at:
  2621 ;;		line 93 in file "uartlib.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;  b               1    wreg     unsigned char 
  2624 ;;  c               1   18[BANK0 ] unsigned char 
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  b               1   20[BANK0 ] unsigned char 
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      enum E2
  2629 ;; Registers used:
  2630 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2636 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2637 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2638 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2639 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2640 ;;Total ram usage:        3 bytes
  2641 ;; Hardware stack levels used: 1
  2642 ;; Hardware stack levels required when called: 4
  2643 ;; This function calls:
  2644 ;;		_uart_clock_setup
  2645 ;;		_uart_reciever_setup
  2646 ;;		_uart_transmitter_setup
  2647 ;;		_uart_turnoff
  2648 ;; This function is called by:
  2649 ;;		_setup
  2650 ;; This function uses a non-reentrant model
  2651 ;;
  2652                           
  2653                           
  2654                           ;psect for function _uart_init
  2655  055D                     _uart_init:
  2656                           
  2657                           ;incstack = 0
  2658                           ; Regs used in _uart_init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2659                           ;uart_init@b stored from wreg
  2660  055D  0020               	movlb	0	; select bank0
  2661  055E  00D8               	movwf	uart_init@b
  2662  055F                     l1731:
  2663                           
  2664                           ;uartlib.c: 94:     uart_turnoff();
  2665  055F  3185  25C2  3185   	fcall	_uart_turnoff
  2666  0562                     l1733:
  2667                           
  2668                           ;uartlib.c: 96:     if (!uart_clock_setup(b, c))
  2669  0562  0020               	movlb	0	; select bank0
  2670  0563  0856               	movf	uart_init@c,w
  2671  0564  00D7               	movwf	??_uart_init
  2672  0565  0857               	movf	??_uart_init,w
  2673  0566  00C4               	movwf	uart_clock_setup@c
  2674  0567  0858               	movf	uart_init@b,w
  2675  0568  3183  230D  3185   	fcall	_uart_clock_setup
  2676  056B  3A00               	xorlw	0
  2677  056C  1D03               	skipz
  2678  056D  2D6F               	goto	u1341
  2679  056E  2D70               	goto	u1340
  2680  056F                     u1341:
  2681  056F  2D72               	goto	l1739
  2682  0570                     u1340:
  2683  0570                     l1735:
  2684                           
  2685                           ;uartlib.c: 97:         return false;
  2686  0570  3000               	movlw	0
  2687  0571  2D7B               	goto	l98
  2688  0572                     l1739:
  2689                           
  2690                           ;uartlib.c: 99:     uart_transmitter_setup();
  2691  0572  3185  25D2  3185   	fcall	_uart_transmitter_setup
  2692                           
  2693                           ;uartlib.c: 100:     uart_reciever_setup();
  2694  0575  3185  25CA  3185   	fcall	_uart_reciever_setup
  2695  0578                     l1741:
  2696                           
  2697                           ;uartlib.c: 102:     RCSTAbits.SPEN = 1;
  2698  0578  0023               	movlb	3	; select bank3
  2699  0579  179D               	bsf	29,7	;volatile
  2700  057A                     l1743:
  2701                           
  2702                           ;uartlib.c: 104:     return true;
  2703  057A  3001               	movlw	1
  2704  057B                     l98:
  2705  057B  0008               	return
  2706  057C                     __end_of_uart_init:
  2707                           
  2708                           	psect	text7
  2709  05C2                     __ptext7:	
  2710 ;; *************** function _uart_turnoff *****************
  2711 ;; Defined at:
  2712 ;;		line 107 in file "uartlib.c"
  2713 ;; Parameters:    Size  Location     Type
  2714 ;;		None
  2715 ;; Auto vars:     Size  Location     Type
  2716 ;;		None
  2717 ;; Return value:  Size  Location     Type
  2718 ;;                  1    wreg      void 
  2719 ;; Registers used:
  2720 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2721 ;; Tracked objects:
  2722 ;;		On entry : 0/0
  2723 ;;		On exit  : 0/0
  2724 ;;		Unchanged: 0/0
  2725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2730 ;;Total ram usage:        0 bytes
  2731 ;; Hardware stack levels used: 1
  2732 ;; Hardware stack levels required when called: 3
  2733 ;; This function calls:
  2734 ;;		_uart_flush_buffer
  2735 ;; This function is called by:
  2736 ;;		_uart_init
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           
  2741                           ;psect for function _uart_turnoff
  2742  05C2                     _uart_turnoff:
  2743  05C2                     l1663:	
  2744                           ;incstack = 0
  2745                           ; Regs used in _uart_turnoff: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2746                           
  2747                           
  2748                           ;uartlib.c: 108:     RCSTAbits.SPEN = 0;
  2749  05C2  0023               	movlb	3	; select bank3
  2750  05C3  139D               	bcf	29,7	;volatile
  2751                           
  2752                           ;uartlib.c: 109:     RCSTAbits.CREN = 0;
  2753  05C4  121D               	bcf	29,4	;volatile
  2754                           
  2755                           ;uartlib.c: 110:     TXSTAbits.TXEN = 0;
  2756  05C5  129E               	bcf	30,5	;volatile
  2757  05C6                     l1665:
  2758                           
  2759                           ;uartlib.c: 112:     uart_flush_buffer();
  2760  05C6  3185  251C  3185   	fcall	_uart_flush_buffer
  2761  05C9                     l101:
  2762  05C9  0008               	return
  2763  05CA                     __end_of_uart_turnoff:
  2764                           
  2765                           	psect	text8
  2766  051C                     __ptext8:	
  2767 ;; *************** function _uart_flush_buffer *****************
  2768 ;; Defined at:
  2769 ;;		line 255 in file "uartlib.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;		None
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  i               2    0[BANK0 ] int 
  2774 ;; Return value:  Size  Location     Type
  2775 ;;                  1    wreg      void 
  2776 ;; Registers used:
  2777 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2778 ;; Tracked objects:
  2779 ;;		On entry : 0/0
  2780 ;;		On exit  : 0/0
  2781 ;;		Unchanged: 0/0
  2782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2786 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2787 ;;Total ram usage:        2 bytes
  2788 ;; Hardware stack levels used: 1
  2789 ;; Hardware stack levels required when called: 2
  2790 ;; This function calls:
  2791 ;;		Nothing
  2792 ;; This function is called by:
  2793 ;;		_uart_turnoff
  2794 ;; This function uses a non-reentrant model
  2795 ;;
  2796                           
  2797                           
  2798                           ;psect for function _uart_flush_buffer
  2799  051C                     _uart_flush_buffer:
  2800  051C                     l1655:	
  2801                           ;incstack = 0
  2802                           ; Regs used in _uart_flush_buffer: [wreg+fsr1l+fsr1h+status,2+status,0]
  2803                           
  2804                           
  2805                           ;uartlib.c: 256:     int i = (10);
  2806  051C  300A               	movlw	10
  2807  051D  0020               	movlb	0	; select bank0
  2808  051E  00C4               	movwf	uart_flush_buffer@i
  2809  051F  3000               	movlw	0
  2810  0520  00C5               	movwf	uart_flush_buffer@i+1
  2811                           
  2812                           ;uartlib.c: 257:     while (i--) {
  2813  0521  2D2C               	goto	l1659
  2814  0522                     l1657:
  2815                           
  2816                           ;uartlib.c: 258:         uart_recieve_buffer[i] = 0;
  2817  0522  0844               	movf	uart_flush_buffer@i,w
  2818  0523  3E2A               	addlw	(low (_uart_recieve_buffer| 0))& (0+255)
  2819  0524  0086               	movwf	6
  2820  0525  0187               	clrf	7
  2821  0526  0181               	clrf	1
  2822                           
  2823                           ;uartlib.c: 259:         uart_transmit_buffer[i] = 0;
  2824  0527  0844               	movf	uart_flush_buffer@i,w
  2825  0528  3E20               	addlw	(low (_uart_transmit_buffer| 0))& (0+255)
  2826  0529  0086               	movwf	6
  2827  052A  0187               	clrf	7
  2828  052B  0181               	clrf	1
  2829  052C                     l1659:
  2830                           
  2831                           ;uartlib.c: 257:     while (i--) {
  2832  052C  30FF               	movlw	255
  2833  052D  07C4               	addwf	uart_flush_buffer@i,f
  2834  052E  30FF               	movlw	255
  2835  052F  3DC5               	addwfc	uart_flush_buffer@i+1,f
  2836  0530  0A44               	incf	uart_flush_buffer@i,w
  2837  0531  1D03               	skipz
  2838  0532  2D37               	goto	u1251
  2839  0533  0A45               	incf	uart_flush_buffer@i+1,w
  2840  0534  1D03               	btfss	3,2
  2841  0535  2D37               	goto	u1251
  2842  0536  2D38               	goto	u1250
  2843  0537                     u1251:
  2844  0537  2D22               	goto	l1657
  2845  0538                     u1250:
  2846  0538                     l1661:
  2847                           
  2848                           ;uartlib.c: 262:     uart_recieve_head = 0;
  2849  0538  01F7               	clrf	_uart_recieve_head	;volatile
  2850                           
  2851                           ;uartlib.c: 263:     uart_recieve_tail = 0;
  2852  0539  01C3               	clrf	_uart_recieve_tail	;volatile
  2853                           
  2854                           ;uartlib.c: 265:     uart_transmit_head = 0;
  2855  053A  01F6               	clrf	_uart_transmit_head	;volatile
  2856                           
  2857                           ;uartlib.c: 266:     uart_transmit_tail = 0;
  2858  053B  01F5               	clrf	_uart_transmit_tail	;volatile
  2859  053C                     l185:
  2860  053C  0008               	return
  2861  053D                     __end_of_uart_flush_buffer:
  2862                           
  2863                           	psect	text9
  2864  05D2                     __ptext9:	
  2865 ;; *************** function _uart_transmitter_setup *****************
  2866 ;; Defined at:
  2867 ;;		line 115 in file "uartlib.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;		None
  2870 ;; Auto vars:     Size  Location     Type
  2871 ;;		None
  2872 ;; Return value:  Size  Location     Type
  2873 ;;                  1    wreg      void 
  2874 ;; Registers used:
  2875 ;;		None
  2876 ;; Tracked objects:
  2877 ;;		On entry : 0/0
  2878 ;;		On exit  : 0/0
  2879 ;;		Unchanged: 0/0
  2880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2885 ;;Total ram usage:        0 bytes
  2886 ;; Hardware stack levels used: 1
  2887 ;; Hardware stack levels required when called: 2
  2888 ;; This function calls:
  2889 ;;		Nothing
  2890 ;; This function is called by:
  2891 ;;		_uart_init
  2892 ;; This function uses a non-reentrant model
  2893 ;;
  2894                           
  2895                           
  2896                           ;psect for function _uart_transmitter_setup
  2897  05D2                     _uart_transmitter_setup:
  2898  05D2                     l1713:	
  2899                           ;incstack = 0
  2900                           ; Regs used in _uart_transmitter_setup: []
  2901                           
  2902                           
  2903                           ;uartlib.c: 116:     TXSTAbits.TX9 = 0;
  2904  05D2  0023               	movlb	3	; select bank3
  2905  05D3  131E               	bcf	30,6	;volatile
  2906                           
  2907                           ;uartlib.c: 117:     TXIE = 1;
  2908  05D4  0021               	movlb	1	; select bank1
  2909  05D5  1611               	bsf	17,4	;volatile
  2910                           
  2911                           ;uartlib.c: 118:     TXSTAbits.TXEN = 1;
  2912  05D6  0023               	movlb	3	; select bank3
  2913  05D7  169E               	bsf	30,5	;volatile
  2914  05D8                     l104:
  2915  05D8  0008               	return
  2916  05D9                     __end_of_uart_transmitter_setup:
  2917                           
  2918                           	psect	text10
  2919  05CA                     __ptext10:	
  2920 ;; *************** function _uart_reciever_setup *****************
  2921 ;; Defined at:
  2922 ;;		line 121 in file "uartlib.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		None
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used: 1
  2942 ;; Hardware stack levels required when called: 2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_uart_init
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           
  2951                           ;psect for function _uart_reciever_setup
  2952  05CA                     _uart_reciever_setup:
  2953  05CA                     l1715:	
  2954                           ;incstack = 0
  2955                           ; Regs used in _uart_reciever_setup: []
  2956                           
  2957                           
  2958                           ;uartlib.c: 122:     RCSTAbits.RX9 = 0;
  2959  05CA  0023               	movlb	3	; select bank3
  2960  05CB  131D               	bcf	29,6	;volatile
  2961                           
  2962                           ;uartlib.c: 124:     ANSELBbits.ANSB5 = 0;
  2963  05CC  128D               	bcf	13,5	;volatile
  2964                           
  2965                           ;uartlib.c: 126:     RCIE = 1;
  2966  05CD  0021               	movlb	1	; select bank1
  2967  05CE  1691               	bsf	17,5	;volatile
  2968                           
  2969                           ;uartlib.c: 128:     RCSTAbits.CREN = 1;
  2970  05CF  0023               	movlb	3	; select bank3
  2971  05D0  161D               	bsf	29,4	;volatile
  2972  05D1                     l107:
  2973  05D1  0008               	return
  2974  05D2                     __end_of_uart_reciever_setup:
  2975                           
  2976                           	psect	text11
  2977  030D                     __ptext11:	
  2978 ;; *************** function _uart_clock_setup *****************
  2979 ;; Defined at:
  2980 ;;		line 131 in file "uartlib.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;  b               1    wreg     unsigned char 
  2983 ;;  c               1    0[BANK0 ] unsigned char 
  2984 ;; Auto vars:     Size  Location     Type
  2985 ;;  b               1   15[BANK0 ] unsigned char 
  2986 ;;  i               2   16[BANK0 ] int 
  2987 ;; Return value:  Size  Location     Type
  2988 ;;                  1    wreg      enum E2
  2989 ;; Registers used:
  2990 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2991 ;; Tracked objects:
  2992 ;;		On entry : 0/0
  2993 ;;		On exit  : 0/0
  2994 ;;		Unchanged: 0/0
  2995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2996 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2997 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2998 ;;      Temps:          0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2999 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3000 ;;Total ram usage:       18 bytes
  3001 ;; Hardware stack levels used: 1
  3002 ;; Hardware stack levels required when called: 2
  3003 ;; This function calls:
  3004 ;;		Nothing
  3005 ;; This function is called by:
  3006 ;;		_uart_init
  3007 ;; This function uses a non-reentrant model
  3008 ;;
  3009                           
  3010                           
  3011                           ;psect for function _uart_clock_setup
  3012  030D                     _uart_clock_setup:
  3013                           
  3014                           ;incstack = 0
  3015                           ; Regs used in _uart_clock_setup: [wreg-fsr0h+status,2+status,0+pclath]
  3016                           ;uart_clock_setup@b stored from wreg
  3017  030D  0020               	movlb	0	; select bank0
  3018  030E  00D3               	movwf	uart_clock_setup@b
  3019  030F                     l1667:
  3020                           
  3021                           ;uartlib.c: 132:     TXSTAbits.SYNC = 0;
  3022  030F  0023               	movlb	3	; select bank3
  3023  0310  121E               	bcf	30,4	;volatile
  3024  0311                     l1669:
  3025                           
  3026                           ;uartlib.c: 134:     if (b > (8) - 1)
  3027  0311  3008               	movlw	8
  3028  0312  0020               	movlb	0	; select bank0
  3029  0313  0253               	subwf	uart_clock_setup@b,w
  3030  0314  1C03               	skipc
  3031  0315  2B17               	goto	u1261
  3032  0316  2B18               	goto	u1260
  3033  0317                     u1261:
  3034  0317  2B1A               	goto	l1675
  3035  0318                     u1260:
  3036  0318                     l1671:
  3037                           
  3038                           ;uartlib.c: 135:         return false;
  3039  0318  3000               	movlw	0
  3040  0319  2BD1               	goto	l111
  3041  031A                     l1675:
  3042                           
  3043                           ;uartlib.c: 137:     if (c > (7) - 1)
  3044  031A  3007               	movlw	7
  3045  031B  0244               	subwf	uart_clock_setup@c,w
  3046  031C  1C03               	skipc
  3047  031D  2B1F               	goto	u1271
  3048  031E  2B20               	goto	u1270
  3049  031F                     u1271:
  3050  031F  2B21               	goto	l1681
  3051  0320                     u1270:
  3052  0320  2B18               	goto	l1671
  3053  0321                     l1681:
  3054                           
  3055                           ;uartlib.c: 140:     int i;;uartlib.c: 141:     for (i = 0; i < (4); i++) {
  3056  0321  01D4               	clrf	uart_clock_setup@i
  3057  0322  01D5               	clrf	uart_clock_setup@i+1
  3058  0323                     l1687:
  3059                           
  3060                           ;uartlib.c: 142:         if (spbr_array [c][b][i]) {
  3061  0323  0020               	movlb	0	; select bank0
  3062  0324  0855               	movf	uart_clock_setup@i+1,w
  3063  0325  00C6               	movwf	??_uart_clock_setup+1
  3064  0326  0854               	movf	uart_clock_setup@i,w
  3065  0327  00C5               	movwf	??_uart_clock_setup
  3066  0328  35C5               	lslf	??_uart_clock_setup,f
  3067  0329  0DC6               	rlf	??_uart_clock_setup+1,f
  3068  032A  0853               	movf	uart_clock_setup@b,w
  3069  032B  00C7               	movwf	??_uart_clock_setup+2
  3070  032C  01C8               	clrf	??_uart_clock_setup+3
  3071  032D  35C7               	lslf	??_uart_clock_setup+2,f
  3072  032E  0DC8               	rlf	??_uart_clock_setup+3,f
  3073  032F  35C7               	lslf	??_uart_clock_setup+2,f
  3074  0330  0DC8               	rlf	??_uart_clock_setup+3,f
  3075  0331  35C7               	lslf	??_uart_clock_setup+2,f
  3076  0332  0DC8               	rlf	??_uart_clock_setup+3,f
  3077  0333  0844               	movf	uart_clock_setup@c,w
  3078  0334  00C9               	movwf	??_uart_clock_setup+4
  3079  0335  01CA               	clrf	??_uart_clock_setup+5
  3080  0336  3006               	movlw	6
  3081  0337                     u1285:
  3082  0337  35C9               	lslf	??_uart_clock_setup+4,f
  3083  0338  0DCA               	rlf	??_uart_clock_setup+5,f
  3084  0339  0B89               	decfsz	9,f
  3085  033A  2B37               	goto	u1285
  3086  033B  3027               	movlw	low (_spbr_array| (0+32768))
  3087  033C  00CB               	movwf	??_uart_clock_setup+6
  3088  033D  3080               	movlw	high (_spbr_array| (0+32768))
  3089  033E  00CC               	movwf	??_uart_clock_setup+7
  3090  033F  0849               	movf	??_uart_clock_setup+4,w
  3091  0340  074B               	addwf	??_uart_clock_setup+6,w
  3092  0341  00CD               	movwf	??_uart_clock_setup+8
  3093  0342  084A               	movf	??_uart_clock_setup+5,w
  3094  0343  3D4C               	addwfc	??_uart_clock_setup+7,w
  3095  0344  00CE               	movwf	??_uart_clock_setup+9
  3096  0345  0847               	movf	??_uart_clock_setup+2,w
  3097  0346  074D               	addwf	??_uart_clock_setup+8,w
  3098  0347  00CF               	movwf	??_uart_clock_setup+10
  3099  0348  0848               	movf	??_uart_clock_setup+3,w
  3100  0349  3D4E               	addwfc	??_uart_clock_setup+9,w
  3101  034A  00D0               	movwf	??_uart_clock_setup+11
  3102  034B  084F               	movf	??_uart_clock_setup+10,w
  3103  034C  0745               	addwf	??_uart_clock_setup,w
  3104  034D  0084               	movwf	4
  3105  034E  0850               	movf	??_uart_clock_setup+11,w
  3106  034F  3D46               	addwfc	??_uart_clock_setup+1,w
  3107  0350  0085               	movwf	5
  3108  0351  0012               	moviw fsr0++
  3109  0352  00D1               	movwf	??_uart_clock_setup+12
  3110  0353  0012               	moviw fsr0++
  3111  0354  04D1               	iorwf	??_uart_clock_setup+12,f
  3112  0355  1903               	btfsc	3,2
  3113  0356  2B58               	goto	u1291
  3114  0357  2B59               	goto	u1290
  3115  0358                     u1291:
  3116  0358  2BB0               	goto	l1695
  3117  0359                     u1290:
  3118  0359                     l1689:
  3119                           
  3120                           ;uartlib.c: 143:             SPBRG = spbr_array [c][b][i];
  3121  0359  0855               	movf	uart_clock_setup@i+1,w
  3122  035A  00C6               	movwf	??_uart_clock_setup+1
  3123  035B  0854               	movf	uart_clock_setup@i,w
  3124  035C  00C5               	movwf	??_uart_clock_setup
  3125  035D  35C5               	lslf	??_uart_clock_setup,f
  3126  035E  0DC6               	rlf	??_uart_clock_setup+1,f
  3127  035F  0853               	movf	uart_clock_setup@b,w
  3128  0360  00C7               	movwf	??_uart_clock_setup+2
  3129  0361  01C8               	clrf	??_uart_clock_setup+3
  3130  0362  35C7               	lslf	??_uart_clock_setup+2,f
  3131  0363  0DC8               	rlf	??_uart_clock_setup+3,f
  3132  0364  35C7               	lslf	??_uart_clock_setup+2,f
  3133  0365  0DC8               	rlf	??_uart_clock_setup+3,f
  3134  0366  35C7               	lslf	??_uart_clock_setup+2,f
  3135  0367  0DC8               	rlf	??_uart_clock_setup+3,f
  3136  0368  0844               	movf	uart_clock_setup@c,w
  3137  0369  00C9               	movwf	??_uart_clock_setup+4
  3138  036A  01CA               	clrf	??_uart_clock_setup+5
  3139  036B  3006               	movlw	6
  3140  036C                     u1305:
  3141  036C  35C9               	lslf	??_uart_clock_setup+4,f
  3142  036D  0DCA               	rlf	??_uart_clock_setup+5,f
  3143  036E  0B89               	decfsz	9,f
  3144  036F  2B6C               	goto	u1305
  3145  0370  3027               	movlw	low (_spbr_array| (0+32768))
  3146  0371  00CB               	movwf	??_uart_clock_setup+6
  3147  0372  3080               	movlw	high (_spbr_array| (0+32768))
  3148  0373  00CC               	movwf	??_uart_clock_setup+7
  3149  0374  0849               	movf	??_uart_clock_setup+4,w
  3150  0375  074B               	addwf	??_uart_clock_setup+6,w
  3151  0376  00CD               	movwf	??_uart_clock_setup+8
  3152  0377  084A               	movf	??_uart_clock_setup+5,w
  3153  0378  3D4C               	addwfc	??_uart_clock_setup+7,w
  3154  0379  00CE               	movwf	??_uart_clock_setup+9
  3155  037A  0847               	movf	??_uart_clock_setup+2,w
  3156  037B  074D               	addwf	??_uart_clock_setup+8,w
  3157  037C  00CF               	movwf	??_uart_clock_setup+10
  3158  037D  0848               	movf	??_uart_clock_setup+3,w
  3159  037E  3D4E               	addwfc	??_uart_clock_setup+9,w
  3160  037F  00D0               	movwf	??_uart_clock_setup+11
  3161  0380  084F               	movf	??_uart_clock_setup+10,w
  3162  0381  0745               	addwf	??_uart_clock_setup,w
  3163  0382  0084               	movwf	4
  3164  0383  0850               	movf	??_uart_clock_setup+11,w
  3165  0384  3D46               	addwfc	??_uart_clock_setup+1,w
  3166  0385  0085               	movwf	5
  3167  0386  3F00               	moviw [0]fsr0
  3168  0387  0023               	movlb	3	; select bank3
  3169  0388  009B               	movwf	27	;volatile
  3170  0389  3F01               	moviw [1]fsr0
  3171  038A  009C               	movwf	28	;volatile
  3172                           
  3173                           ;uartlib.c: 144:             switch (i) {
  3174  038B  2B9C               	goto	l1693
  3175  038C                     l117:	
  3176                           ;uartlib.c: 145:                 case 0:
  3177                           
  3178                           
  3179                           ;uartlib.c: 146:                     BRGH = 0;
  3180  038C  0023               	movlb	3	; select bank3
  3181  038D  111E               	bcf	30,2	;volatile
  3182                           
  3183                           ;uartlib.c: 147:                     BRG16 = 0;
  3184  038E  119F               	bcf	31,3	;volatile
  3185                           
  3186                           ;uartlib.c: 148:                     break;
  3187  038F  2BC1               	goto	l1697
  3188  0390                     l119:	
  3189                           ;uartlib.c: 149:                 case 1:
  3190                           
  3191                           
  3192                           ;uartlib.c: 150:                     BRGH = 1;
  3193  0390  0023               	movlb	3	; select bank3
  3194  0391  151E               	bsf	30,2	;volatile
  3195                           
  3196                           ;uartlib.c: 151:                     BRG16 = 0;
  3197  0392  119F               	bcf	31,3	;volatile
  3198                           
  3199                           ;uartlib.c: 152:                     break;
  3200  0393  2BC1               	goto	l1697
  3201  0394                     l120:	
  3202                           ;uartlib.c: 153:                 case 2:
  3203                           
  3204                           
  3205                           ;uartlib.c: 154:                     BRGH = 0;
  3206  0394  0023               	movlb	3	; select bank3
  3207  0395  111E               	bcf	30,2	;volatile
  3208                           
  3209                           ;uartlib.c: 155:                     BRG16 = 1;
  3210  0396  159F               	bsf	31,3	;volatile
  3211                           
  3212                           ;uartlib.c: 156:                     break;
  3213  0397  2BC1               	goto	l1697
  3214  0398                     l121:	
  3215                           ;uartlib.c: 157:                 case 3:
  3216                           
  3217                           
  3218                           ;uartlib.c: 158:                     BRGH = 1;
  3219  0398  0023               	movlb	3	; select bank3
  3220  0399  151E               	bsf	30,2	;volatile
  3221                           
  3222                           ;uartlib.c: 159:                     BRG16 = 1;
  3223  039A  159F               	bsf	31,3	;volatile
  3224                           
  3225                           ;uartlib.c: 160:                     break;
  3226  039B  2BC1               	goto	l1697
  3227  039C                     l1693:
  3228                           
  3229                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3230                           ; Switch size 1, requested type "simple"
  3231                           ; Number of cases is 1, Range of values is 0 to 0
  3232                           ; switch strategies available:
  3233                           ; Name         Instructions Cycles
  3234                           ; simple_byte            4     3 (average)
  3235                           ; direct_byte            8     6 (fixed)
  3236                           ; jumptable            260     6 (fixed)
  3237                           ;	Chosen strategy is simple_byte
  3238  039C  0020               	movlb	0	; select bank0
  3239  039D  0855               	movf	uart_clock_setup@i+1,w
  3240  039E  3A00               	xorlw	0	; case 0
  3241  039F  1903               	skipnz
  3242  03A0  2BA2               	goto	l1979
  3243  03A1  2BC1               	goto	l1697
  3244  03A2                     l1979:
  3245                           
  3246                           ; Switch size 1, requested type "simple"
  3247                           ; Number of cases is 4, Range of values is 0 to 3
  3248                           ; switch strategies available:
  3249                           ; Name         Instructions Cycles
  3250                           ; simple_byte           13     7 (average)
  3251                           ; direct_byte           14     6 (fixed)
  3252                           ; jumptable            260     6 (fixed)
  3253                           ;	Chosen strategy is simple_byte
  3254  03A2  0854               	movf	uart_clock_setup@i,w
  3255  03A3  3A00               	xorlw	0	; case 0
  3256  03A4  1903               	skipnz
  3257  03A5  2B8C               	goto	l117
  3258  03A6  3A01               	xorlw	1	; case 1
  3259  03A7  1903               	skipnz
  3260  03A8  2B90               	goto	l119
  3261  03A9  3A03               	xorlw	3	; case 2
  3262  03AA  1903               	skipnz
  3263  03AB  2B94               	goto	l120
  3264  03AC  3A01               	xorlw	1	; case 3
  3265  03AD  1903               	skipnz
  3266  03AE  2B98               	goto	l121
  3267  03AF  2BC1               	goto	l1697
  3268  03B0                     l1695:
  3269                           
  3270                           ;uartlib.c: 164:     }
  3271  03B0  3001               	movlw	1
  3272  03B1  07D4               	addwf	uart_clock_setup@i,f
  3273  03B2  3000               	movlw	0
  3274  03B3  3DD5               	addwfc	uart_clock_setup@i+1,f
  3275  03B4  0855               	movf	uart_clock_setup@i+1,w
  3276  03B5  3A80               	xorlw	128
  3277  03B6  00C5               	movwf	??_uart_clock_setup
  3278  03B7  3080               	movlw	128
  3279  03B8  0245               	subwf	??_uart_clock_setup,w
  3280  03B9  1D03               	skipz
  3281  03BA  2BBD               	goto	u1315
  3282  03BB  3004               	movlw	4
  3283  03BC  0254               	subwf	uart_clock_setup@i,w
  3284  03BD                     u1315:
  3285  03BD  1C03               	skipc
  3286  03BE  2BC0               	goto	u1311
  3287  03BF  2BC1               	goto	u1310
  3288  03C0                     u1311:
  3289  03C0  2B23               	goto	l1687
  3290  03C1                     u1310:
  3291  03C1                     l1697:
  3292                           
  3293                           ;uartlib.c: 166:     if (i >= (4))
  3294  03C1  0020               	movlb	0	; select bank0
  3295  03C2  0855               	movf	uart_clock_setup@i+1,w
  3296  03C3  3A80               	xorlw	128
  3297  03C4  00C5               	movwf	??_uart_clock_setup
  3298  03C5  3080               	movlw	128
  3299  03C6  0245               	subwf	??_uart_clock_setup,w
  3300  03C7  1D03               	skipz
  3301  03C8  2BCB               	goto	u1325
  3302  03C9  3004               	movlw	4
  3303  03CA  0254               	subwf	uart_clock_setup@i,w
  3304  03CB                     u1325:
  3305  03CB  1C03               	skipc
  3306  03CC  2BCE               	goto	u1321
  3307  03CD  2BCF               	goto	u1320
  3308  03CE                     u1321:
  3309  03CE  2BD0               	goto	l1703
  3310  03CF                     u1320:
  3311  03CF  2B18               	goto	l1671
  3312  03D0                     l1703:
  3313                           
  3314                           ;uartlib.c: 169:     return true;
  3315  03D0  3001               	movlw	1
  3316  03D1                     l111:
  3317  03D1  0008               	return
  3318  03D2                     __end_of_uart_clock_setup:
  3319                           
  3320                           	psect	text12
  3321  05B9                     __ptext12:	
  3322 ;; *************** function _empty_comb *****************
  3323 ;; Defined at:
  3324 ;;		line 89 in file "LV.c"
  3325 ;; Parameters:    Size  Location     Type
  3326 ;;		None
  3327 ;; Auto vars:     Size  Location     Type
  3328 ;;		None
  3329 ;; Return value:  Size  Location     Type
  3330 ;;                  1    wreg      void 
  3331 ;; Registers used:
  3332 ;;		status,2
  3333 ;; Tracked objects:
  3334 ;;		On entry : 0/0
  3335 ;;		On exit  : 0/0
  3336 ;;		Unchanged: 0/0
  3337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3342 ;;Total ram usage:        0 bytes
  3343 ;; Hardware stack levels used: 1
  3344 ;; Hardware stack levels required when called: 2
  3345 ;; This function calls:
  3346 ;;		Nothing
  3347 ;; This function is called by:
  3348 ;;		_main
  3349 ;; This function uses a non-reentrant model
  3350 ;;
  3351                           
  3352                           
  3353                           ;psect for function _empty_comb
  3354  05B9                     _empty_comb:
  3355  05B9                     l1815:	
  3356                           ;incstack = 0
  3357                           ; Regs used in _empty_comb: [status,2]
  3358                           
  3359                           
  3360                           ;LV.c: 90:     comb1 = 0x00;
  3361  05B9  0020               	movlb	0	; select bank0
  3362  05BA  01C2               	clrf	_comb1
  3363                           
  3364                           ;LV.c: 91:     comb2 = 0x00;
  3365  05BB  01C1               	clrf	_comb2
  3366                           
  3367                           ;LV.c: 92:     comb3 = 0x00;
  3368  05BC  01C0               	clrf	_comb3
  3369                           
  3370                           ;LV.c: 93:     comb4 = 0x00;
  3371  05BD  01BF               	clrf	_comb4
  3372                           
  3373                           ;LV.c: 94:     comb5 = 0x00;
  3374  05BE  01BE               	clrf	_comb5
  3375                           
  3376                           ;LV.c: 95:     comb6 = 0x00;
  3377  05BF  01BD               	clrf	_comb6
  3378                           
  3379                           ;LV.c: 96:     comb7 = 0x00;
  3380  05C0  01BC               	clrf	_comb7
  3381  05C1                     l268:
  3382  05C1  0008               	return
  3383  05C2                     __end_of_empty_comb:
  3384                           
  3385                           	psect	text13
  3386  053D                     __ptext13:	
  3387 ;; *************** function ___wmul *****************
  3388 ;; Defined at:
  3389 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3392 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  product         2    4[BANK0 ] unsigned int 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;                  2    0[BANK0 ] unsigned int 
  3397 ;; Registers used:
  3398 ;;		wreg, status,2, status,0
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3404 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3407 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3408 ;;Total ram usage:        6 bytes
  3409 ;; Hardware stack levels used: 1
  3410 ;; Hardware stack levels required when called: 2
  3411 ;; This function calls:
  3412 ;;		Nothing
  3413 ;; This function is called by:
  3414 ;;		_main
  3415 ;; This function uses a non-reentrant model
  3416 ;;
  3417                           
  3418                           
  3419                           ;psect for function ___wmul
  3420  053D                     ___wmul:
  3421  053D                     l1817:	
  3422                           ;incstack = 0
  3423                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3424                           
  3425  053D  0020               	movlb	0	; select bank0
  3426  053E  01C8               	clrf	___wmul@product
  3427  053F  01C9               	clrf	___wmul@product+1
  3428  0540                     l1819:
  3429  0540  1C44               	btfss	___wmul@multiplier,0
  3430  0541  2D43               	goto	u1431
  3431  0542  2D44               	goto	u1430
  3432  0543                     u1431:
  3433  0543  2D48               	goto	l422
  3434  0544                     u1430:
  3435  0544                     l1821:
  3436  0544  0846               	movf	___wmul@multiplicand,w
  3437  0545  07C8               	addwf	___wmul@product,f
  3438  0546  0847               	movf	___wmul@multiplicand+1,w
  3439  0547  3DC9               	addwfc	___wmul@product+1,f
  3440  0548                     l422:
  3441  0548  3001               	movlw	1
  3442  0549                     u1445:
  3443  0549  35C6               	lslf	___wmul@multiplicand,f
  3444  054A  0DC7               	rlf	___wmul@multiplicand+1,f
  3445  054B  0B89               	decfsz	9,f
  3446  054C  2D49               	goto	u1445
  3447  054D                     l1823:
  3448  054D  3001               	movlw	1
  3449  054E                     u1455:
  3450  054E  36C5               	lsrf	___wmul@multiplier+1,f
  3451  054F  0CC4               	rrf	___wmul@multiplier,f
  3452  0550  0B89               	decfsz	9,f
  3453  0551  2D4E               	goto	u1455
  3454  0552                     l1825:
  3455  0552  0844               	movf	___wmul@multiplier,w
  3456  0553  0445               	iorwf	___wmul@multiplier+1,w
  3457  0554  1D03               	btfss	3,2
  3458  0555  2D57               	goto	u1461
  3459  0556  2D58               	goto	u1460
  3460  0557                     u1461:
  3461  0557  2D40               	goto	l1819
  3462  0558                     u1460:
  3463  0558                     l1827:
  3464  0558  0849               	movf	___wmul@product+1,w
  3465  0559  00C5               	movwf	?___wmul+1
  3466  055A  0848               	movf	___wmul@product,w
  3467  055B  00C4               	movwf	?___wmul
  3468  055C                     l424:
  3469  055C  0008               	return
  3470  055D                     __end_of___wmul:
  3471                           
  3472                           	psect	text14
  3473  05AA                     __ptext14:	
  3474 ;; *************** function _Stepper *****************
  3475 ;; Defined at:
  3476 ;;		line 9 in file "stepperlib.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;  num_of_steps    2    0[BANK0 ] int 
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, status,2
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3490 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3493 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3494 ;;Total ram usage:        2 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; Hardware stack levels required when called: 2
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _Stepper
  3506  05AA                     _Stepper:
  3507  05AA                     l1747:	
  3508                           ;incstack = 0
  3509                           ; Regs used in _Stepper: [wreg+status,2]
  3510                           
  3511                           
  3512                           ;stepperlib.c: 10:     step_number = 0;
  3513  05AA  0020               	movlb	0	; select bank0
  3514  05AB  01B6               	clrf	_step_number
  3515  05AC  01B7               	clrf	_step_number+1
  3516                           
  3517                           ;stepperlib.c: 11:     direction = 0;
  3518  05AD  01BA               	clrf	_direction
  3519  05AE  01BB               	clrf	_direction+1
  3520  05AF                     l1749:
  3521                           
  3522                           ;stepperlib.c: 12:     number_of_steps = num_of_steps;
  3523  05AF  0845               	movf	Stepper@num_of_steps+1,w
  3524  05B0  00B9               	movwf	_number_of_steps+1
  3525  05B1  0844               	movf	Stepper@num_of_steps,w
  3526  05B2  00B8               	movwf	_number_of_steps
  3527  05B3                     l1751:
  3528                           
  3529                           ;stepperlib.c: 15:     TRISCbits.TRISC0 = 0;
  3530  05B3  0021               	movlb	1	; select bank1
  3531  05B4  100E               	bcf	14,0	;volatile
  3532  05B5                     l1753:
  3533                           
  3534                           ;stepperlib.c: 16:     TRISCbits.TRISC1 = 0;
  3535  05B5  108E               	bcf	14,1	;volatile
  3536  05B6                     l1755:
  3537                           
  3538                           ;stepperlib.c: 17:     TRISCbits.TRISC2 = 0;
  3539  05B6  110E               	bcf	14,2	;volatile
  3540  05B7                     l1757:
  3541                           
  3542                           ;stepperlib.c: 18:     TRISCbits.TRISC3 = 0;
  3543  05B7  118E               	bcf	14,3	;volatile
  3544  05B8                     l19:
  3545  05B8  0008               	return
  3546  05B9                     __end_of_Stepper:
  3547                           
  3548                           	psect	intentry
  3549  0004                     __pintentry:	
  3550 ;; *************** function _ISR *****************
  3551 ;; Defined at:
  3552 ;;		line 28 in file "LV.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 1
  3573 ;; This function calls:
  3574 ;;		_uart_handle_rcv_int
  3575 ;;		_uart_handle_tx_int
  3576 ;; This function is called by:
  3577 ;;		Interrupt level 1
  3578 ;; This function uses a non-reentrant model
  3579 ;;
  3580                           
  3581  0004                     _ISR:
  3582                           
  3583                           ;incstack = 0
  3584  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  3585                           
  3586                           ; Regs used in _ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3587  0005  3180               	pagesel	$
  3588  0006                     i1l1517:
  3589                           
  3590                           ;LV.c: 29:     uart_handle_rcv_int();
  3591  0006  3184  247B  3180   	fcall	_uart_handle_rcv_int
  3592                           
  3593                           ;LV.c: 30:     uart_handle_tx_int();
  3594  0009  3184  243F  3180   	fcall	_uart_handle_tx_int
  3595  000C                     i1l234:
  3596  000C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3597  000D  0009               	retfie
  3598  000E                     __end_of_ISR:
  3599                           
  3600                           	psect	text16
  3601  043F                     __ptext16:	
  3602 ;; *************** function _uart_handle_tx_int *****************
  3603 ;; Defined at:
  3604 ;;		line 222 in file "uartlib.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3619 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3620 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3621 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3622 ;;Total ram usage:        5 bytes
  3623 ;; Hardware stack levels used: 1
  3624 ;; This function calls:
  3625 ;;		Nothing
  3626 ;; This function is called by:
  3627 ;;		_ISR
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           
  3632                           ;psect for function _uart_handle_tx_int
  3633  043F                     _uart_handle_tx_int:
  3634  043F                     i1l1443:	
  3635                           ;incstack = 0
  3636                           ; Regs used in _uart_handle_tx_int: [wreg+fsr1l+fsr1h+status,2+status,0]
  3637                           
  3638                           
  3639                           ;uartlib.c: 223:     if (TXIF && TXIE) {
  3640  043F  0020               	movlb	0	; select bank0
  3641  0440  1E11               	btfss	17,4	;volatile
  3642  0441  2C43               	goto	u86_21
  3643  0442  2C44               	goto	u86_20
  3644  0443                     u86_21:
  3645  0443  2C7A               	goto	i1l166
  3646  0444                     u86_20:
  3647  0444                     i1l1445:
  3648  0444  0021               	movlb	1	; select bank1
  3649  0445  1E11               	btfss	17,4	;volatile
  3650  0446  2C48               	goto	u87_21
  3651  0447  2C49               	goto	u87_20
  3652  0448                     u87_21:
  3653  0448  2C7A               	goto	i1l166
  3654  0449                     u87_20:
  3655  0449                     i1l1447:
  3656                           
  3657                           ;uartlib.c: 224:         if (uart_transmit_head == uart_transmit_tail) {
  3658  0449  0876               	movf	_uart_transmit_head,w	;volatile
  3659  044A  0675               	xorwf	_uart_transmit_tail,w	;volatile
  3660  044B  1D03               	skipz
  3661  044C  2C4E               	goto	u88_21
  3662  044D  2C4F               	goto	u88_20
  3663  044E                     u88_21:
  3664  044E  2C51               	goto	i1l1451
  3665  044F                     u88_20:
  3666  044F                     i1l1449:
  3667                           
  3668                           ;uartlib.c: 225:             TXIE = 0;
  3669  044F  1211               	bcf	17,4	;volatile
  3670                           
  3671                           ;uartlib.c: 226:         } else {
  3672  0450  2C7A               	goto	i1l166
  3673  0451                     i1l1451:
  3674                           
  3675                           ;uartlib.c: 227:             TXREG = uart_transmit_buffer[uart_transmit_tail];
  3676  0451  0875               	movf	_uart_transmit_tail,w
  3677  0452  3E20               	addlw	(low (_uart_transmit_buffer| 0))& (0+255)
  3678  0453  0086               	movwf	6
  3679  0454  0187               	clrf	7
  3680  0455  0801               	movf	1,w
  3681  0456  0023               	movlb	3	; select bank3
  3682  0457  009A               	movwf	26	;volatile
  3683  0458                     i1l1453:
  3684                           
  3685                           ;uartlib.c: 228:             uart_transmit_tail = (uart_transmit_tail+1 >= (10)) ? (0) :
      +                           (uart_transmit_tail+1);
  3686  0458  0875               	movf	_uart_transmit_tail,w	;volatile
  3687  0459  3E01               	addlw	1
  3688  045A  00F0               	movwf	??_uart_handle_tx_int
  3689  045B  3000               	movlw	0
  3690  045C  1803               	skipnc
  3691  045D  3001               	movlw	1
  3692  045E  00F1               	movwf	??_uart_handle_tx_int+1
  3693  045F  0871               	movf	??_uart_handle_tx_int+1,w
  3694  0460  3A80               	xorlw	128
  3695  0461  00F2               	movwf	??_uart_handle_tx_int+2
  3696  0462  3080               	movlw	128
  3697  0463  0272               	subwf	??_uart_handle_tx_int+2,w
  3698  0464  1D03               	skipz
  3699  0465  2C68               	goto	u89_25
  3700  0466  300A               	movlw	10
  3701  0467  0270               	subwf	??_uart_handle_tx_int,w
  3702  0468                     u89_25:
  3703  0468  1803               	skipnc
  3704  0469  2C6B               	goto	u89_21
  3705  046A  2C6C               	goto	u89_20
  3706  046B                     u89_21:
  3707  046B  2C74               	goto	i1l1457
  3708  046C                     u89_20:
  3709  046C                     i1l1455:
  3710  046C  0875               	movf	_uart_transmit_tail,w	;volatile
  3711  046D  3E01               	addlw	1
  3712  046E  00F3               	movwf	_uart_handle_tx_int$258
  3713  046F  3000               	movlw	0
  3714  0470  1803               	skipnc
  3715  0471  3001               	movlw	1
  3716  0472  00F4               	movwf	_uart_handle_tx_int$258+1
  3717  0473  2C76               	goto	i1l1459
  3718  0474                     i1l1457:
  3719  0474  01F3               	clrf	_uart_handle_tx_int$258
  3720  0475  01F4               	clrf	_uart_handle_tx_int$258+1
  3721  0476                     i1l1459:
  3722  0476  0873               	movf	_uart_handle_tx_int$258,w
  3723  0477  00F0               	movwf	??_uart_handle_tx_int
  3724  0478  0870               	movf	??_uart_handle_tx_int,w
  3725  0479  00F5               	movwf	_uart_transmit_tail	;volatile
  3726  047A                     i1l166:
  3727  047A  0008               	return
  3728  047B                     __end_of_uart_handle_tx_int:
  3729                           
  3730                           	psect	text17
  3731  047B                     __ptext17:	
  3732 ;; *************** function _uart_handle_rcv_int *****************
  3733 ;; Defined at:
  3734 ;;		line 204 in file "uartlib.c"
  3735 ;; Parameters:    Size  Location     Type
  3736 ;;		None
  3737 ;; Auto vars:     Size  Location     Type
  3738 ;;		None
  3739 ;; Return value:  Size  Location     Type
  3740 ;;                  1    wreg      void 
  3741 ;; Registers used:
  3742 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  3743 ;; Tracked objects:
  3744 ;;		On entry : 0/0
  3745 ;;		On exit  : 0/0
  3746 ;;		Unchanged: 0/0
  3747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3749 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3750 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3752 ;;Total ram usage:        5 bytes
  3753 ;; Hardware stack levels used: 1
  3754 ;; This function calls:
  3755 ;;		Nothing
  3756 ;; This function is called by:
  3757 ;;		_ISR
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           
  3762                           ;psect for function _uart_handle_rcv_int
  3763  047B                     _uart_handle_rcv_int:
  3764  047B                     i1l1425:	
  3765                           ;incstack = 0
  3766                           ; Regs used in _uart_handle_rcv_int: [wreg+fsr1l+fsr1h+status,2+status,0]
  3767                           
  3768                           
  3769                           ;uartlib.c: 205:     if (RCIF && RCIE) {
  3770  047B  0020               	movlb	0	; select bank0
  3771  047C  1E91               	btfss	17,5	;volatile
  3772  047D  2C7F               	goto	u82_21
  3773  047E  2C80               	goto	u82_20
  3774  047F                     u82_21:
  3775  047F  2CB6               	goto	i1l156
  3776  0480                     u82_20:
  3777  0480                     i1l1427:
  3778  0480  0021               	movlb	1	; select bank1
  3779  0481  1E91               	btfss	17,5	;volatile
  3780  0482  2C84               	goto	u83_21
  3781  0483  2C85               	goto	u83_20
  3782  0484                     u83_21:
  3783  0484  2CB6               	goto	i1l156
  3784  0485                     u83_20:
  3785  0485                     i1l1429:
  3786  0485                     i1l150:	
  3787                           ;uartlib.c: 207:         if (FERR) {
  3788                           ;uartlib.c: 208:         }
  3789                           
  3790                           
  3791                           ;uartlib.c: 211:         if (OERR) {
  3792  0485  0023               	movlb	3	; select bank3
  3793  0486  1C9D               	btfss	29,1	;volatile
  3794  0487  2C89               	goto	u84_21
  3795  0488  2C8A               	goto	u84_20
  3796  0489                     u84_21:
  3797  0489  2C8C               	goto	i1l1433
  3798  048A                     u84_20:
  3799  048A                     i1l1431:
  3800                           
  3801                           ;uartlib.c: 212:             CREN = 0;
  3802  048A  121D               	bcf	29,4	;volatile
  3803                           
  3804                           ;uartlib.c: 213:             CREN = 1;
  3805  048B  161D               	bsf	29,4	;volatile
  3806  048C                     i1l1433:
  3807                           
  3808                           ;uartlib.c: 216:         uart_recieve_buffer[uart_recieve_head] = RCREG;
  3809  048C  0819               	movf	25,w	;volatile
  3810  048D  00F0               	movwf	??_uart_handle_rcv_int
  3811  048E  0877               	movf	_uart_recieve_head,w
  3812  048F  3E2A               	addlw	(low (_uart_recieve_buffer| 0))& (0+255)
  3813  0490  0086               	movwf	6
  3814  0491  0187               	clrf	7
  3815  0492  0870               	movf	??_uart_handle_rcv_int,w
  3816  0493  0081               	movwf	1
  3817  0494                     i1l1435:
  3818                           
  3819                           ;uartlib.c: 217:         uart_recieve_head = (uart_recieve_head+1 >= (10)) ? (0) : (uart
      +                          _recieve_head+1);
  3820  0494  0877               	movf	_uart_recieve_head,w	;volatile
  3821  0495  3E01               	addlw	1
  3822  0496  00F0               	movwf	??_uart_handle_rcv_int
  3823  0497  3000               	movlw	0
  3824  0498  1803               	skipnc
  3825  0499  3001               	movlw	1
  3826  049A  00F1               	movwf	??_uart_handle_rcv_int+1
  3827  049B  0871               	movf	??_uart_handle_rcv_int+1,w
  3828  049C  3A80               	xorlw	128
  3829  049D  00F2               	movwf	??_uart_handle_rcv_int+2
  3830  049E  3080               	movlw	128
  3831  049F  0272               	subwf	??_uart_handle_rcv_int+2,w
  3832  04A0  1D03               	skipz
  3833  04A1  2CA4               	goto	u85_25
  3834  04A2  300A               	movlw	10
  3835  04A3  0270               	subwf	??_uart_handle_rcv_int,w
  3836  04A4                     u85_25:
  3837  04A4  1803               	skipnc
  3838  04A5  2CA7               	goto	u85_21
  3839  04A6  2CA8               	goto	u85_20
  3840  04A7                     u85_21:
  3841  04A7  2CB0               	goto	i1l1439
  3842  04A8                     u85_20:
  3843  04A8                     i1l1437:
  3844  04A8  0877               	movf	_uart_recieve_head,w	;volatile
  3845  04A9  3E01               	addlw	1
  3846  04AA  00F3               	movwf	_uart_handle_rcv_int$256
  3847  04AB  3000               	movlw	0
  3848  04AC  1803               	skipnc
  3849  04AD  3001               	movlw	1
  3850  04AE  00F4               	movwf	_uart_handle_rcv_int$256+1
  3851  04AF  2CB2               	goto	i1l1441
  3852  04B0                     i1l1439:
  3853  04B0  01F3               	clrf	_uart_handle_rcv_int$256
  3854  04B1  01F4               	clrf	_uart_handle_rcv_int$256+1
  3855  04B2                     i1l1441:
  3856  04B2  0873               	movf	_uart_handle_rcv_int$256,w
  3857  04B3  00F0               	movwf	??_uart_handle_rcv_int
  3858  04B4  0870               	movf	??_uart_handle_rcv_int,w
  3859  04B5  00F7               	movwf	_uart_recieve_head	;volatile
  3860  04B6                     i1l156:
  3861  04B6  0008               	return
  3862  04B7                     __end_of_uart_handle_rcv_int:
  3863  007E                     btemp	set	126	;btemp
  3864  007E                     int$flags	set	126
  3865  007E                     wtemp0	set	126
  3866                           
  3867                           	psect	config
  3868                           
  3869                           ;Config register CONFIG1 @ 0x8007
  3870                           ;	Oscillator Selection
  3871                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
  3872                           ;	Watchdog Timer Enable
  3873                           ;	WDTE = OFF, WDT disabled
  3874                           ;	Power-up Timer Enable
  3875                           ;	PWRTE = OFF, PWRT disabled
  3876                           ;	MCLR Pin Function Select
  3877                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
  3878                           ;	Flash Program Memory Code Protection
  3879                           ;	CP = OFF, Program memory code protection is disabled
  3880                           ;	Data Memory Code Protection
  3881                           ;	CPD = OFF, Data memory code protection is disabled
  3882                           ;	Brown-out Reset Enable
  3883                           ;	BOREN = ON, Brown-out Reset enabled
  3884                           ;	Clock Out Enable
  3885                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
  3886                           ;	Internal/External Switchover
  3887                           ;	IESO = ON, Internal/External Switchover mode is enabled
  3888                           ;	Fail-Safe Clock Monitor Enable
  3889                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  3890  8007                     	org	32775
  3891  8007  3FE4               	dw	16356
  3892                           
  3893                           ;Config register CONFIG2 @ 0x8008
  3894                           ;	Flash Memory Self-Write Protection
  3895                           ;	WRT = OFF, Write protection off
  3896                           ;	PLL Enable
  3897                           ;	PLLEN = ON, 4x PLL enabled
  3898                           ;	Stack Overflow/Underflow Reset Enable
  3899                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  3900                           ;	Brown-out Reset Voltage Selection
  3901                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
  3902                           ;	Low-Voltage Programming Enable
  3903                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
  3904  8008                     	org	32776
  3905  8008  1FFF               	dw	8191

Data Sizes:
    Strings     3
    Constant    448
    Data        2
    BSS         39
    Persistent  32
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     28      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    NEWLINE	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_1(CODE[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_uart_handle_rcv_int
    _ISR->_uart_handle_tx_int

Critical Paths under _main in BANK0

    _step->_abs
    _setup->_uart_init
    _uart_init->_uart_clock_setup
    _uart_turnoff->_uart_flush_buffer

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _ISR in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0    2179
                                             21 BANK0      7     7      0
                            _Stepper
                             ___wmul
                         _empty_comb
                              _setup
                               _step
                     _uart_read_char
 ---------------------------------------------------------------------------------
 (1) _uart_read_char                                       6     6      0      71
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _step                                                 5     3      2     524
                                              4 BANK0      5     3      2
                                _abs
                          _stepMotor
 ---------------------------------------------------------------------------------
 (2) _stepMotor                                            2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _abs                                                  4     2      2     183
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     716
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            3     2      1     716
                                             18 BANK0      3     2      1
                   _uart_clock_setup
                _uart_reciever_setup
             _uart_transmitter_setup
                       _uart_turnoff
 ---------------------------------------------------------------------------------
 (3) _uart_turnoff                                         0     0      0      96
                  _uart_flush_buffer
 ---------------------------------------------------------------------------------
 (4) _uart_flush_buffer                                    2     2      0      96
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (3) _uart_transmitter_setup                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _uart_reciever_setup                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _uart_clock_setup                                    18    17      1     468
                                              0 BANK0     18    17      1
 ---------------------------------------------------------------------------------
 (1) _empty_comb                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     496
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Stepper                                              2     0      2     121
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0      48
                _uart_handle_rcv_int
                 _uart_handle_tx_int
 ---------------------------------------------------------------------------------
 (6) _uart_handle_tx_int                                   5     5      0      24
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (6) _uart_handle_rcv_int                                  5     5      0      24
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Stepper
   ___wmul
   _empty_comb
   _setup
     _uart_init
       _uart_clock_setup
       _uart_reciever_setup
       _uart_transmitter_setup
       _uart_turnoff
         _uart_flush_buffer
   _step
     _abs
     _stepMotor
   _uart_read_char

 _ISR (ROOT)
   _uart_handle_rcv_int
   _uart_handle_tx_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      5       A       2       71.4%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     1C      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      4A      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      4A      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun May 09 17:01:23 2021

             uart_flush_buffer@i 0044                               l31 043E                               l40 051B  
                             l19 05B8                               l35 04EF                               l28 0423  
                             l37 04F5                               l29 041F                               l38 04FB  
                             l39 0501                               l98 057B              ___wmul@multiplicand 0046  
                            l101 05C9                              l111 03D1                              l120 0394  
                            l104 05D8                              l121 0398                              l107 05D1  
                            l117 038C                              l119 0390                              l170 04ED  
                            l422 0548                              l424 055C                              l272 05A9  
                            l248 024D                              l185 053C                              l268 05C1  
                            l882 0597                              l885 0597                              _GIE 005F  
                            _ISR 0004                              _abs 057C                      _step_number 0036  
                            wreg 0009                             ?_ISR 0070                             ?_abs 0044  
                           l1703 03D0                             l1713 05D2                             l1721 04EE  
                           l1801 04EC                             l1715 05CA                             l1731 055F  
                           l1811 05A1                             l1821 0544                             l1661 0538  
                           l1741 0578                             l1733 0562                             l1813 05A2  
                           l1805 0598                             l1717 057C                             l1725 0507  
                           l1901 02CD                             l1751 05B3                             l1823 054D  
                           l1815 05B9                             l1671 0318                             l1655 051C  
                           l1663 05C2                             l1743 057A                             l1735 0570  
                           l1807 059F                             l1719 058A                             l1911 02E6  
                           l1903 02D3                             l1831 01EA                             l1753 05B5  
                           l1825 0552                             l1817 053D                             l1681 0321  
                           l1657 0522                             l1665 05C6                             l1809 05A0  
                           l1761 03DF                             l1921 02FF                             l1913 02ED  
                           l1905 02DA                             l1841 0202                             l1833 01ED  
                           l1755 05B6                             l1747 05AA                             l1827 0558  
                           l1819 0540                             l1675 031A                             l1667 030F  
                           l1659 052C                             l1739 0572                             l1771 03FD  
                           l1763 03EC                             l1923 0305                             l1915 02F3  
                           l1907 02DD                             l1851 021B                             l1843 0207  
                           l1835 01F5                             l1757 05B7                             l1749 05AF  
                           l1693 039C                             l1669 0311                             l1781 0427  
                           l1773 0404                             l1765 03F1                             l1909 02E3  
                           l1861 0234                             l1853 0220                             l1845 020C  
                           l1837 01F8                             l1695 03B0                             l1687 0323  
                           l1775 0412                             l1767 03F6                             l1783 0430  
                           l1759 03D2                             l1791 04C0                             l1919 02F9  
                           l1863 0239                             l1855 0225                             l1847 0211  
                           l1871 024D                             l1839 01FB                             l1697 03C1  
                           l1689 0359                             l1777 0415                             l1769 03F9  
                           l1793 04C8                             l1785 04B7                             l1881 026B  
                           l1873 0253                             l1865 023E                             l1857 022A  
                           l1849 0216                             l1779 041B                             l1795 04DC  
                           l1787 04BE                             l1891 02AF                             l1883 0289  
                           l1875 0259                             l1867 0243                             l1859 022F  
                           l1797 04E5                             l1893 02B5                             l1885 028F  
                           l1877 025F                             l1869 0248                             l1799 04E8  
                           l1895 02BB                             l1887 02A5                             l1879 0265  
                           l1977 050D                             l1897 02C1                             l1889 02A8  
                           l1979 03A2                             l1899 02C7                             STR_1 01E7  
                           _BRGH 0CF2                             _CREN 0CEC                             _FERR 0CEA  
                           u1310 03C1                             u1311 03C0                             u1320 03CF  
                           u1400 043E                             u1321 03CE                             u1305 036C  
                           u1401 043D                             u1250 0538                             u1330 058A  
                           u1410 04BE                             u1315 03BD                             u1251 0537  
                           u1331 0589                             u1411 04BD                             u1260 0318  
                           u1340 0570                             u1420 04DC                             u1500 0220  
                           u1325 03CB                             u1261 0317                             u1341 056F  
                           u1405 043A                             u1421 04DB                             u1501 021F  
                           u1430 0544                             u1270 0320                             u1350 03EC  
                           u1510 022A                             u1431 0543                             u1271 031F  
                           u1335 0586                             u1351 03EB                             u1511 0229  
                           u1360 03F6                             u1600 028F                             u1520 0234  
                           u1361 03F5                             u1425 04D8                             u1601 028E  
                           u1521 0233                             u1290 0359                             u1370 0404  
                           u1610 02AF                             u1530 023E                             u1291 0358  
                           u1371 0403                             u1355 03E8                             u1611 02AE  
                           u1531 023D                             u1460 0558                             u1380 0412  
                           u1700 02F3                             u1620 02B5                             u1540 0248  
                           u1461 0557                             u1445 0549                             u1285 0337  
                           u1381 0411                             u1701 02F2                             u1621 02B4  
                           u1541 0247                             u1390 041B                             u1710 02F8  
                           u1630 02BB                             u1550 0253                             u1470 0207  
                           u1455 054E                             u1391 041A                             u1711 02F7  
                           u1631 02BA                             u1551 0252                             u1471 0206  
                           u1720 02FF                             u1640 02C1                             u1560 0259  
                           u1480 020C                             u1385 040E                             u1721 02FE  
                           u1641 02C0                             u1561 0258                             u1481 020B  
                           u1730 0305                             u1650 02C7                             u1570 025F  
                           u1490 0216                             u1731 0304                             u1651 02C6  
                           u1571 025E                             u1491 0215                             u1740 030A  
                           u1660 02CD                             u1580 0265                             u1741 0309  
                           u1661 02CC                             u1581 0264                             u1670 02D3  
                           u1590 026B                             u1671 02D2                             u1591 026A  
                           u1680 02E3                             u1681 02E2                             u1690 02ED  
                           u1691 02EC                             u1757 03FA                             _PEIE 005E  
                           _RCIE 048D                             _RCIF 008D                             _OERR 0CE9  
                           _TXIE 048C                             _TXIF 008C                 ??_uart_read_char 0044  
                           abs@a 0044                             _main 01EA                             fsr0h 0005  
                           fsr1h 0007                             indf0 0000                             fsr0l 0004  
                           indf1 0001                             fsr1l 0006                             _step 03D2  
                           btemp 007E                             start 000E                ?_uart_clock_setup 0044  
                          ??_ISR 0075                            ??_abs 0046               ??_uart_clock_setup 0045  
                __end_of_Stepper 05B9                            ?_main 0070                            _BRG16 0CFB  
                          ?_step 0048                            i1l150 0485                            i1l234 000C  
                          i1l156 04B6                            i1l166 047A                            _RCREG 0199  
                          _SPBRG 019B                            u82_20 0480                            u82_21 047F  
                          u83_20 0485                            u83_21 0484                            u84_20 048A  
                          u84_21 0489                            u85_20 04A8                            u85_21 04A7  
                          u85_25 04A4                            u86_20 0444                            u86_21 0443  
                          u87_20 0449                            u87_21 0448                            u88_20 044F  
                          u88_21 044E                            u89_20 046C                            u89_21 046B  
                          _TXREG 019A                            u89_25 0468                            _comb1 0042  
                          _comb2 0041                            _comb3 0040                            _comb4 003F  
                          _comb5 003E                            _comb6 003D                            _comb7 003C  
                          _setup 0598                            status 0003                            wtemp0 007E  
                __initialization 0010                     __end_of_main 030D                     __end_of_step 043F  
           _uart_transmit_buffer 0020                           ??_main 0059                           ??_step 004A  
                         ?_setup 0070                           i1l1431 048A                           i1l1441 04B2  
                         i1l1433 048C                           i1l1425 047B                           i1l1435 0494  
                         i1l1427 0480                           i1l1451 0451                           i1l1443 043F  
                         i1l1437 04A8                           i1l1429 0485                           i1l1453 0458  
                         i1l1445 0444                           i1l1517 0006                           i1l1439 04B0  
                         i1l1455 046C                           i1l1447 0449                           i1l1457 0474  
                         i1l1449 044F                           i1l1459 0476          uart_read_char@uart_char 0047  
                      ??_Stepper 0046                           ___wmul 053D                    main@uart_char 005F  
   __size_of_uart_handle_rcv_int 003C                     __pdataCOMMON 0078      __end_of_uart_reciever_setup 05D2  
             _uart_handle_tx_int 043F              ?_uart_handle_tx_int 0070          __end_of__initialization 0023  
                 __pcstackCOMMON 0070          _uart_handle_rcv_int$256 0073                    __end_of_setup 05AA  
           ??_uart_handle_tx_int 0070                          ??_setup 0059                       __pbssBANK0 0020  
                _number_of_steps 0038                       __pmaintext 01EA                          ?___wmul 0044  
              stepMotor@thisStep 0044                _uart_flush_buffer 051C                       __pintentry 0004  
             ?_uart_flush_buffer 0070               __size_of_uart_init 001F                          _NEWLINE 0078  
            ??_uart_flush_buffer 0044        __size_of_uart_clock_setup 00C5               __size_of_stepMotor 002E  
                     _empty_comb 05B9        __end_of_uart_flush_buffer 053D                          _Stepper 05AA  
                __size_of___wmul 0020                          __ptext1 04B7                          __ptext2 03D2  
                        __ptext3 04EE                          __ptext4 057C                          __ptext5 0598  
                        __ptext6 055D                          __ptext7 05C2                          __ptext8 051C  
                        __ptext9 05D2                     __size_of_ISR 000A                     __size_of_abs 001C  
       ??_uart_transmitter_setup 0044                          _stepvar 0034                          clrloop0 05DA  
           end_of_initialization 0023                _uart_recieve_head 0077                _uart_recieve_tail 0043  
            _uart_handle_rcv_int 047B                __end_of_uart_init 057C                    ?_uart_turnoff 0070  
                      _RCSTAbits 019D                __end_of_stepMotor 051C          __size_of_uart_read_char 0037  
                 step@steps_left 004B             ?_uart_handle_rcv_int 0070                       _spbr_array 0027  
            Stepper@num_of_steps 0044                        _TRISCbits 008E                        _TXSTAbits 019E  
                 ??_uart_turnoff 0046                      ?_empty_comb 0070       __size_of_uart_flush_buffer 0021  
             _uart_transmit_head 0076               _uart_transmit_tail 0075                   __end_of___wmul 055D  
                  __pidataCOMMON 05DF            ??_uart_handle_rcv_int 0070              start_initialization 0010  
                    __end_of_ISR 000E                 _uart_clock_setup 030D                      __end_of_abs 0598  
__size_of_uart_transmitter_setup 0007     __size_of_uart_reciever_setup 0008                uart_clock_setup@b 0053  
              uart_clock_setup@c 0044                uart_clock_setup@i 0054                         ??___wmul 0048  
    __size_of_uart_handle_tx_int 003C                      __pbssCOMMON 0075                        ___latbits 0002  
                  __pcstackBANK0 0044              __size_of_empty_comb 0009           _uart_transmitter_setup 05D2  
                       ?_Stepper 0044                   _uart_read_char 04B7                        _direction 003A  
           __end_of_uart_turnoff 05CA           _uart_handle_tx_int$258 0073                   __size_of_setup 0012  
                 ___wmul@product 0048                         _LATCbits 010E                        clear_ram0 05D9  
         __end_of_uart_read_char 04EE                        _uart_init 055D                       uart_init@b 0058  
                     uart_init@c 0056               _uart_read_char$261 0048                        _stepMotor 04EE  
              ___wmul@multiplier 0044              _uart_recieve_buffer 002A                  ?_uart_read_char 0070  
                   ??_empty_comb 0044         __end_of_uart_clock_setup 03D2                       ?_uart_init 0056  
               __size_of_Stepper 000F              _uart_reciever_setup 05CA                       ?_stepMotor 0044  
                     _ANSELBbits 018D                         __ptext10 05CA                         __ptext11 030D  
                       __ptext12 05B9                         __ptext13 053D                         __ptext14 05AA  
                       __ptext16 043F                         __ptext17 047B               __end_of_empty_comb 05C2  
           ?_uart_reciever_setup 0070                step@steps_to_move 0048                    __size_of_main 0123  
                  __size_of_step 006D      __end_of_uart_handle_rcv_int 04B7                         int$flags 007E  
          __size_of_uart_turnoff 0008                         intlevel1 0000            ??_uart_reciever_setup 0044  
        ?_uart_transmitter_setup 0070               __end_of_spbr_array 01E7                       _OSCCONbits 0099  
                   _uart_turnoff 05C2                      ??_uart_init 0057       __end_of_uart_handle_tx_int 047B  
                  __pstringtext1 0027                    __pstringtext2 0000                      ??_stepMotor 0046  
 __end_of_uart_transmitter_setup 05D9  
